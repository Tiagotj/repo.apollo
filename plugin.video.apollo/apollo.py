# encoded by pyprotect# https://deus-apollo.ml#checkintegrityimport base64, codecsmagic = '# -*- coding: utf-8 -*-import urllibimport urllib2import datetimeimport reimport osimport base64import codecsimport xbmcpluginimport xbmcguiimport xbmcaddonimport xbmcvfsimport tracebackimport cookielibimport timeimport xbmcguiimport xbmcimport xbmcpluginimport webbrowserimport osimport xbmcaddonfrom BeautifulSoup import BeautifulStoneSoup , BeautifulSoup , BeautifulSOAPif 64 - 64: i11iIiiIiiif 65 - 65: O0 / iIii1I11I1II1 % OoooooooOO - i1IIio0OO00 = Nonetry : from xml . sax . saxutils import escapeexcept : traceback . print_exc ( )if 78 - 78: i11i . oOooOoO0Oo0Otry : import jsonexcept : import simplejson as jsonimport SimpleDownloader as downloaderimport timeimport requestsiI1 = Falseif 43 - 43: I11i11Iiif 65 - 65: i1iIi11iIIi1IOo = "13.06.20"if 2 - 2: o0 * i1 * ii1IiI1i % OOooOOo / I11i / Ii1Iif 48 - 48: iII111i % IiII + I1Ii111 / ooOoO0o * o00O0ooif 97 - 97: Ii1I - ii1IiI1i . I1Ii111 - OoooooooOOoO0o = 'aHR0cDovL2RldXMtYXBvbGxvLm1sL0FQT0xMTzEvQkFTRS1QUklOQ0lQQUwvQmFzZS1QcmluY2lwYWwuaHRtbA=='IIII = base64 . b64decode ( oO0o )if 59 - 59: i1IIi * i1IIi % I11i + i11iif 32 - 32: o0 . o00O0oo * i1IIi . ooOoO0o / I1Ii111o00 = '[COLOR orange][B]->[/COLOR][/B][COLOR deepskyblue][B] BEM-VINDOS[/COLOR][/B]'if 62 - 62: i11iIiiIii - i11i % ooOoO0o - iIii1I11I1II1 . ii1IiI1i . i11iif 61 - 61: OOooOOo / o0 / IiII * i1iIi11iIIi1I . i11iif 1 - 1: i11i - ii1IiI1i % i11iIiiIii + I1Ii111 . ooOoO0oOooo0000 = '-> INSTALE PLUGIN PARA FILMES 4K'if 22 - 22: iII111i . I1Ii111if 41 - 41: ooOoO0o . o00O0oo * I1Ii111 % i11iIiiIiiif 74 - 74: IiII * I1Ii111if 82 - 82: iIii1I11I1II1 % I1Ii111oOo0oooo00o = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3LzJQTk4xUGpL'oO0o0o0ooO0oO = base64 . b64decode ( oOo0oooo00o )if 52 - 52: i11i - i11iIiiIii % ooOoO0oif 54 - 54: I11i % O0 + oOooOoO0Oo0O - IiII / Ii1Iif 31 - 31: i1iIi11iIIi1I + i11iif 13 - 13: I11i * OOooOOo * oOooOoO0Oo0Oif 55 - 55: i11iIIIiI11ii = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L3BYR2gyckVu'O000oo = base64 . b64decode ( IIIiI11ii )if 3 - 3: IiII + O0if 42 - 42: I11i / i1IIi + i11iIiiIii - iII111iif 78 - 78: i1iIi11iIIi1IIii1I111 = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L1hDdDl6clRm'OO0O0O00OooO = base64 . b64decode ( Iii1I111 )if 77 - 77: i11i - i11i . oOooOoO0Oo0O / i1if 14 - 14: Ii1I % O0IiI1I1 = 3000if 86 - 86: i11iIiiIii + iII111i + o00O0oo * Ii1I + i1if 61 - 61: i1iIi11iIIi1I / i11iIiiIiiif 34 - 34: OoooooooOO + iIii1I11I1II1 + i11iIiiIii - ii1IiI1i + i11iIiiIiiif 65 - 65: o0if 6 - 6: oOooOoO0Oo0O / I11i11Ii % iII111ioo = 'aHR0cHM6Ly91cmxwbGF5LmNvbS9OMHJkTEI='OO0O00 = base64 . b64decode ( oo )if 20 - 20: OoooooooOOif 13 - 13: i1IIi - iII111i % OOooOOo / iIii1I11I1II1 % IiIIif 97 - 97: i11iIiiIiiif 32 - 32: I11i11Ii * O0 % OOooOOo % iII111i . I1Ii111o0OOOOO00o0O0 = 'ǭq�{���}���w���'if 71 - 71: o00O0oo % IiII / i1if 49 - 49: i11i % IiII * O0if 89 - 89: OOooOOo + I11i11IiIi1IOo0o0 = 'filme4k'III1ii1iII = 'https://i.imgur.com/67UUio3.png'oo0oooooO0 = 'https://i.imgur.com/Y4QXRab.jpg'if 19 - 19: Ii1I + o00O0ooooo = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L0JVYk5CWlFB'ii1I1i1I = base64 . b64decode ( ooo )if 88 - 88: i1iIi11iIIi1I + O0 / o0 * IiIIiiiIi1i1I = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L0JVYk5CWlFB'oOO00oOO = base64 . b64decode ( iiiIi1i1I )if 75 - 75: i1IIi / OoooooooOO - O0 / o0 . i11i - i1IIiif 71 - 71: I11i + iII111i * I11i - i1iIi11iIIi1I * i1if 65 - 65: O0 % oOooOoO0Oo0O . ii1IiI1i % iIii1I11I1II1 / I11i % ooOoO0oif 51 - 51: i11iIiiIii . oOooOoO0Oo0O + i11iII111ii1II1i = '[COLOR white]Selecione um item:[/COLOR]'if 59 - 59: O0 + oOooOoO0Oo0O + I1Ii111 % oOooOoO0Oo0Oo0OOoo0OO0OOO = '[COLOR white]!!Download em execução!![/COLOR]'iI1iI1I1i1I = '!!Download [COLOR seablue]Audio!![/COLOR]'if 24 - 24: ii1IiI1io0Oo0O0Oo00oO = '[COLOR deepskyblue][B] CHECAR POR ATUALIZAÇÃO[/COLOR][/B]'I11i1I1I = 'https://i.imgur.com/22LSvnr.png'oO0Oo = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L2E5dE1DMEh1'oOOoo0Oo = base64 . b64decode ( oO0Oo )if 78 - 78: Ii1Iif 71 - 71: I11i + o00O0oo % i11iIiiIii + ii1IiI1i - I1Ii111if 88 - 88: o0 - i1iIi11iIIi1I % I11iiI1I111Ii111i = 'BEM-VINDOS'I11IiI1I11i1i = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L3F0NmhqV0VY'iI1ii1Ii = 'https://i.imgur.com/fHRcl7O.png'oooo000 = 'https://i.imgur.com/Y4QXRab.jpg'iIIIi1 = base64 . b64decode ( I11IiI1I11i1i )if 20 - 20: i1IIi + ii1IiI1i - o00O0ooif 30 - 30: i11i - I11i - i11iIiiIii % o0 - i11i * iII111iif 61 - 61: OOooOOo - Ii1I % I11iOOoOO0oo0ooO = '$texto='if 98 - 98: IiII * IiII / IiII + Ii1Iif 34 - 34: o00O0oo__addon__ = xbmcaddon . Addon ( )__addonname__ = __addon__ . getAddonInfo ( 'name' )__icon__ = __addon__ . getAddonInfo ( 'icon' )if 15 - 15: Ii1I * o00O0oo * I11i11Ii % i11iIiiIii % o0 - I11iif 68 - 68: ooOoO0o % i1IIi . I1Ii111 . ii1IiI1io0oo0oOo = [ '180upload.com' , 'allmyvideos.net' , 'bestreams.net' , 'clicknupload.com' , 'cloudzilla.to' , 'movshare.net' , 'novamov.com' , 'nowvideo.sx' , 'videoweed.es' , 'daclips.in' , 'datemule.com' , 'fastvideo.in' , 'faststream.in' , 'filehoot.com' , 'filenuke.com' , 'sharesix.com' , 'docs.google.com' , 'plus.google.com' , 'picasaweb.google.com' , 'gorillavid.com' , 'gorillavid.in' , 'grifthost.com' , 'hugefiles.net' , 'ipithos.to' , 'ishared.eu' , 'kingfiles.net' , 'mail.ru' , 'my.mail.ru' , 'videoapi.my.mail.ru' , 'mightyupload.com' , 'mooshare.biz' , 'movdivx.com' , 'movpod.net' , 'movpod.in' , 'movreel.com' , 'mrfile.me' , 'nosvideo.com' , 'openload.io' , 'played.to' , 'bitshare.com' , 'filefactory.com' , 'k2s.cc' , 'oboom.com' , 'rapidgator.net' , 'uploaded.net' , 'primeshare.tv' , 'bitshare.com' , 'filefactory.com' , 'k2s.cc' , 'oboom.com' , 'rapidgator.net' , 'uploaded.net' , 'sharerepo.com' , 'stagevu.com' , 'streamcloud.eu' , 'streamin.to' , 'thefile.me' , 'thevideo.me' , 'tusfiles.net' , 'uploadc.com' , 'zalaa.com' , 'uploadrocket.net' , 'uptobox.com' , 'v-vids.com' , 'veehd.com' , 'vidbull.com' , 'videomega.tv' , 'vidplay.net' , 'vidspot.net' , 'vidto.me' , 'vidzi.tv' , 'vimeo.com' , 'vk.com' , 'vodlocker.com' , 'xfileload.com' , 'xvidstage.com' , 'zettahost.tv' ]o000O0o = [ 'plugin.video.dramasonline' , 'plugin.video.f4mTester' , 'plugin.video.shahidmbcnet' , 'plugin.video.SportsDevil' , 'plugin.stream.vaughnlive.tv' , 'plugin.video.ZemTV-shani' ]if 42 - 42: o0class II ( urllib2 . HTTPErrorProcessor ) : def http_response ( self , request , response ) :  return response https_response = http_response if 45 - 45: O0 * i1 % I11i11Ii * OoooooooOO + IiII . o0Oo0ooOo0o = False ;if Oo0ooOo0o : if 22 - 22: iIii1I11I1II1 / i11iIiiIii * iIii1I11I1II1 * i11i . I11i / i11iIiiIii if 2 - 2: oOooOoO0Oo0O / O0 / i1 % o0 % iII111i try :  import pysrc . pydevd as pydevd  if 52 - 52: i1  pydevd . settrace ( 'localhost' , stdoutToServer = True , stderrToServer = True ) except ImportError :  sys . stderr . write ( "Error: " + "You must add org.python.pydev.debug.pysrc to your PYTHONPATH." )  sys . exit ( 1 )  if 95 - 95: iII111i  if 87 - 87: o00O0oo + o0 . I11i + o0oO = xbmcaddon . Addon ( )iIi1IIIi1 = oO . getAddonInfo ( 'version' )O0oOoOOOoOO = xbmc . translatePath ( oO . getAddonInfo ( 'profile' ) . decode ( 'utf-8' ) )ii1ii11IIIiiI = xbmc . translatePath ( oO . getAddonInfo ( 'path' ) . decode ( 'utf-8' ) )O00OOOoOoo0O = os . path . join ( O0oOoOOOoOO , 'favorites' )O000OOo00oo = os . path . join ( O0oOoOOOoOO , 'history' )if 71 - 71: i11iIiiIii + I1Ii111oOo = os . path . join ( O0oOoOOOoOO , 'list_revision' )oOO00Oo = os . path . join ( ii1ii11IIIiiI , 'icon.png' )i1iIIIi1i = os . path . join ( ii1ii11IIIiiI , 'icon_config.png' )iI1iIIiiii = os . path . join ( ii1ii11IIIiiI , 'favorites.png' )i1iI11i1ii11 = os . path . join ( ii1ii11IIIiiI , 'fanart.jpg' )OOooo0O00o = os . path . join ( O0oOoOOOoOO , 'source_file' )oOOoOooOo = O0oOoOOOoOOif 51 - 51: Ii1I + IiII % iIii1I11I1II1 / OOooOOo / I11i % OoooooooOOdownloader = downloader . SimpleDownloader ( )o0O0OOO0Ooo = oO . getSetting ( 'debug' )if os . path . exists ( O00OOOoOoo0O ) == True : iiIiI = open ( O00OOOoOoo0O ) . read ( )else : iiIiI = [ ]if os . path . exists ( OOooo0O00o ) == True : I1 = open ( OOooo0O00o ) . read ( )else : I1 = [ ]if 86 - 86: o0 - iII111i - i1iIi11iIIi1I * IiIIif 66 - 66: OoooooooOO + O0def I1IiiI ( url ) : try :  import urllib . request as urllib2 except ImportError :  import urllib2 IIi = urllib2 . build_opener ( ) IIi . addheaders = [ ( 'User-Agent' , 'Mozilla/5.0' ) ] if 41 - 41: iII111i - O0 - O0 oO00OOoO00 = IIi . open ( url ) IiI111111IIII = oO00OOoO00 . read ( ) . decode ( 'utf-8' ) i1Ii = IiI111111IIII return i1Ii if 14 - 14: IiIIdef I1iI1iIi111i ( string ) : if o0O0OOO0Ooo == 'true' :  if 44 - 44: i1IIi % i11i + Ii1I  xbmc . log ( "[APOLLO-%s]: %s" % ( iIi1IIIi1 , string ) )  if 45 - 45: IiII / IiII + ooOoO0o + o00O0oo  if 47 - 47: i1 + o00O0oo  if 82 - 82: i11i . I1Ii111 - iIii1I11I1II1 - I1Ii111 * i11i  if 77 - 77: iIii1I11I1II1 * i1iIi11iIIi1Idef oOooOo0 ( msg ) : i1I1ii11i1Iii = oO . getSetting ( 'suporte' ) if i1I1ii11i1Iii == 'true' :  I1IiiiiI ( Oooo0000 , OO0O00 , 44 , III1ii1iII , i1iI11i1ii11 , o0O ( O000oo ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )  if 2 - 2: iIii1I11I1II1 / OOooOOo + i1iIi11iIIi1I / I11idef IIOOOO0oo0 ( msg ) : xbmcgui . Dialog ( ) . ok ( '[COLOR deepskyblue][B]"INSTALE PARA ASSISTIR EM 4K!" [/COLOR][/B]' , "[COLOR orange][B]PARA VOCÊ ASSISTIR OS FILMES EM 4K MUITO SIMPLES VCS DEVEM FAZER O DOWNLOAD DO PLUGIN ELEMENTUM NOS LINKS ASEGUIR!. LOGO APOIS TER FEITO O DOWNLOAD VC VÃO EM SITESMA INSTALA POR ZIP E PROCURAR NA PASTA DA SUA BOX OU PC O ZIP PARA INSTALAR NA BOX![/COLOR][/B]" ) I11iiI1i1 = xbmcgui . Dialog ( ) I1i1Iiiii = I11iiI1i1 . select ( '[COLOR orange][B]PARA ASSISTIR FILMES EM 4K LINKS ABAIXO![/COLOR][/B]' , [ '[COLOR deepskyblue][B]BAIXAR[/COLOR][/B][COLOR orange][B] ELEMENTUM[/COLOR][/B]' , '[COLOR deepskyblue][B]BAIXAR[/COLOR][/B][COLOR orange][B] ELEMENTUM BURST[/COLOR][/B]' , '' ] ) if I1i1Iiiii == 0 :  if xbmc . getCondVisibility ( 'system.platform.android' ) :   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://github.com/elgatito/plugin.video.elementum/releases/download/v0.1.58/plugin.video.elementum-0.1.58.zip' ) )  else :   webbrowser . open ( 'https://github.com/elgatito/plugin.video.elementum/releases/download/v0.1.58/plugin.video.elementum-0.1.58.zip' ) if I1i1Iiiii == 1 :  if xbmc . getCondVisibility ( 'system.platform.android' ) :   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://github.com/elgatito/script.elementum.burst/releases/download/v0.0.49/script.elementum.burst-0.0.49.zip' ) )  else :   webbrowser . open ( 'https://github.com/elgatito/script.elementum.burst/releases/download/v0.0.49/script.elementum.burst-0.0.49.zip' )   if 94 - 94: i1 * iII111i / I11i11Ii / iII111i if I1i1Iiiii == 5 :  xbmcaddon . Addon ( ) . openSettings ( )  if 87 - 87: I11i11Ii . I1Ii111  xbmc . executebuiltin ( "XBMC.Container.Refresh(%s?mode=None, replace)" % sys . argv [ 0 ] )  xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )  if 75 - 75: o00O0oo + o0 + i1 * Ii1I % OOooOOo . IiIIdef oOI1Ii1I1 ( ) : IiII111iI1ii1 = oO . getSetting ( 'username' ) iI11I1II = oO . getSetting ( 'password' ) Ii1IIiI1i = oO . getSetting ( 'servidor' ) o0Oo00 = oO . getSetting ( 'exibirfilme4k' ) iI = oO . getSetting ( 'saida' ) if o0Oo00 == 'true' :  if Ii1IIiI1i == 'filme4k' :   O0O0Oooo0o = 'http://sv1.iptvcasa.online:25461/get.php?username=%s&password=%s&type=m3u_plus&output=%s' % ( IiII111iI1ii1 , iI11I1II , iI )   I1IiiiiI ( Ii1IOo0o0 , O0O0Oooo0o , 1 , III1ii1iII , oo0oooooO0 , o0O ( ii1I1i1I ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )  if Ii1IIiI1i == 'Nenhum' :   I1IiiiiI ( Ii1IOo0o0 , '' , 42 , III1ii1iII , oo0oooooO0 , o0O ( ii1I1i1I ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' ) IiII111iI1ii1 = oO . getSetting ( 'username2' ) iI11I1II = oO . getSetting ( 'password2' ) Ii1IIiI1i = oO . getSetting ( 'servidor2' ) o0Oo00 = oO . getSetting ( 'exibirfilme4k2' ) iI = oO . getSetting ( 'saida2' ) if o0Oo00 == 'true' :  if Ii1IIiI1i == 'filme4k' :   O0O0Oooo0o = 'http://cloudsteam.club:8080/get.php?username=%s&password=%s&type=m3u_plus&output=%s' % ( IiII111iI1ii1 , iI11I1II , iI )   I1IiiiiI ( titulo_filme4k2 , O0O0Oooo0o , 1 , thumbnail_filme4k2 , oo0oooooO0 , o0O ( ii1I1i1I ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )  if Ii1IIiI1i == 'Nenhum' :   I1IiiiiI ( titulo_filme4k2 , '' , 42 , thumbnail_filme4k2 , fanart_filme4k2 , o0O ( ii1I1i1I ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )   if 56 - 56: ii1IiI1i % O0 - oOooOoO0Oo0Odef O00o0OO0 ( msg ) : IIi1I1iiiii = oO . getSetting ( 'mensagem1' ) if IIi1I1iiiii == 'true' :  I11iiI1i1 = xbmcgui . Dialog ( )  I1i1Iiiii = I11iiI1i1 . select ( '[COLOR orange][B]AJUDE O ADD-ON FAÇA SUA[/COLOR][/B][COLOR deepskyblue][B] DOAÇÃO[/COLOR][/B]' , [ '[COLOR deepskyblue][B]APOLLO ->[/COLOR][/B][COLOR orange][B] SITE OFICIAL![/COLOR][/B]' , '[COLOR deepskyblue][B]AJUDE ->[/COLOR][/B][COLOR orange][B] DOAÇÃO PELO[/COLOR][/B][COLOR lightcyan][B] MERCADO[/COLOR][/B][COLOR dodgerblue][B]PAGO [/COLOR][/B]' , '[COLOR deepskyblue][B]AJUDE ->[/COLOR][/B][COLOR orange][B] DOAÇÃO PELO[/COLOR][/B][COLOR blueviolet][B] NUBANK[/COLOR][/B]' , '[COLOR deepskyblue][B]AJUDE ->[/COLOR][/B][COLOR orange][B] DOAÇÃO PELO[/COLOR][/B][COLOR lightcyan][B] PIC[/COLOR][/B][COLOR lime][B]PAY [/COLOR][/B]' , '[COLOR deepskyblue][B]AJUDE ->[/COLOR][/B][COLOR orange][B] DOAÇÃO PELO[/COLOR][/B][COLOR royalblue][B] PAY[/COLOR][/B][COLOR lightcyan][B]PAL [/COLOR][/B]' , '[COLOR deepskyblue][B]APOLLO ->[/COLOR][/B][COLOR orange][B] GRUPO TELEGRAM[/COLOR][/B]' , '[COLOR deepskyblue][B]APOLLO ->[/COLOR][/B][COLOR orange][B] GRUPO FACEBOOK[/COLOR][/B]' , '[COLOR deepskyblue][B]ENTRAR NO[/COLOR][/B][COLOR orange][B] ADD-ON[/COLOR][/B]' , '[COLOR deepskyblue][B]SAIR DO[/COLOR][/B][COLOR orange][B] ADD-ON[/COLOR][/B]' ] )  if 71 - 71: I1Ii111 * i11i * OOooOOo  if I1i1Iiiii == 0 :   if xbmc . getCondVisibility ( 'system.platform.android' ) :    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'http://deus-apollo.ml' ) )   else :    webbrowser . open ( 'http://deus-apollo.ml' )    if 56 - 56: oOooOoO0Oo0O    if 54 - 54: ooOoO0o / I11i . OOooOOo % IiII  if I1i1Iiiii == 1 :   if xbmc . getCondVisibility ( 'system.platform.android' ) :    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://www.mercadopago.com.br/checkout/v1/redirect?pref_id=203668628-f9a8d299-8b36-4cbd-84f4-0eb34ed0be11' ) )   else :    webbrowser . open ( 'https://www.mercadopago.com.br/checkout/v1/redirect?pref_id=203668628-f9a8d299-8b36-4cbd-84f4-0eb34ed0be11' )    if 57 - 57: i11iIiiIii . ii1IiI1i - iII111i - OOooOOo + o0  if I1i1Iiiii == 2 :   if xbmc . getCondVisibility ( 'system.platform.android' ) :    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://nubank.com.br/pagar/1djpv6/FJzleug9nF' ) )   else :    webbrowser . open ( 'https://nubank.com.br/pagar/1djpv6/FJzleug9nF' )    if 63 - 63: o0 * IiII    if 69 - 69: O0 . i1iIi11iIIi1I  if I1i1Iiiii == 3 :   if xbmc . getCondVisibility ( 'system.platform.android' ) :    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://picpay.me/deus.apollo' ) )   else :    webbrowser . open ( 'https://picpay.me/deus.apollo' )    if 49 - 49: oOooOoO0Oo0O - Ii1I    if 74 - 74: iIii1I11I1II1 * ii1IiI1i + o0 / i1IIi / i11i . I11i11Ii  if I1i1Iiiii == 4 :   if xbmc . getCondVisibility ( 'system.platform.android' ) :    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=44A92DUKBAKAN&source=url' ) )   else :    webbrowser . open ( 'https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=44A92DUKBAKAN&source=url' )    if 62 - 62: OoooooooOO * oOooOoO0Oo0O    if 58 - 58: o0 % i1    if 50 - 50: ooOoO0o . i1  if I1i1Iiiii == 5 :   if xbmc . getCondVisibility ( 'system.platform.android' ) :    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'http://telegram.me/DeusApollo' ) )   else :    webbrowser . open ( 'http://telegram.me/DeusApollo' )    if 97 - 97: O0 + o0  if I1i1Iiiii == 6 :   if xbmc . getCondVisibility ( 'system.platform.android' ) :    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://www.facebook.com/groups/Deus.Apollo' ) )   else :    webbrowser . open ( 'https://www.facebook.com/groups/Deus.Apollo' )    if 89 - 89: i1 + i1iIi11iIIi1I * Ii1I * iII111i  if I1i1Iiiii == 8 :   xbmc . executebuiltin ( "XBMC.Container.Refresh('close()')" )   xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )   if 37 - 37: OoooooooOO - O0 - i1def o0o0O0O00oOOo ( msg ) : I1IiiiiI ( o00 , OO0O00 , 1 , oOO00Oo , i1iI11i1ii11 , o0O ( oO0o0o0ooO0oO ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' ) oOooOo0 ( True ) oOI1Ii1I1 ( ) if 14 - 14: o0 + OOooOOo oo00oO0O0 ( IIII , '' ) I1IiiiiI ( o0Oo0O0Oo00oO , '' , 54 , I11i1I1I , i1iI11i1ii11 , o0O ( oOOoo0Oo ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' ) if 30 - 30: I11i + ii1IiI1i * Ii1I % i11iIiiIii % o0 OO0OoOO0o0o ( ) O00o0OO0 ( True ) if 95 - 95: i11iIiiIii xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) ) if 32 - 32: I11i if 42 - 42: I1Ii111 * O0 % i1IIi . I11i / i1def iII11I1IiiIi ( msg ) : try :  oo0oO = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/version.txt" ) . read ( ) . replace ( '' , '' ) . replace ( '\r' , '' )  oo0oO = re . compile ( '[a-zA-Z\.\d]+' ) . findall ( oo0oO ) [ 0 ]  if 94 - 94: iIii1I11I1II1 / I11i11Ii % IiII * IiII * i11i  if oo0oO != Oo :   IIiIiI ( )   if 94 - 94: OOooOOo . i1IIi - i1 % O0 - i1iIi11iIIi1I  elif msg == True :   if 72 - 72: iII111i   O00o0OO0 ( True )   if 1 - 1: i1iIi11iIIi1I * I1Ii111 * OoooooooOO + o00O0oo except urllib2 . URLError , IiII111i1i11 :  if msg == True :   xbmcgui . Dialog ( ) . ok ( 'Apollo' , "Não foi possível checar" )   if 40 - 40: o00O0oo * I1Ii111 * i11iIiiIiidef oo0OO00OoooOo ( msg ) : try :  oo0oO = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/version.txt" ) . read ( ) . replace ( '' , '' ) . replace ( '\r' , '' )  oo0oO = re . compile ( '[a-zA-Z\.\d]+' ) . findall ( oo0oO ) [ 0 ]  if 19 - 19: ii1IiI1i % OoooooooOO % I1Ii111 * i1 % O0  if oo0oO != Oo :   IIiIiI ( )   if 67 - 67: oOooOoO0Oo0O . i1IIi  elif msg == True :   xbmcgui . Dialog ( ) . ok ( '[COLOR orange][B]APOLLO[/COLOR][/B]' , "[COLOR deepskyblue][B] O ADD-ON JÁ ESTÁ NA ÚLTIMA VERSÃO![/COLOR][/B][COLOR orange][B] 1.4.5[/COLOR][/B] " + Oo + "[COLOR deepskyblue][B] ATUALIZAÇÕES SÃO AUTOMÁTICAS SE NÃO ATUALIZA ENTRE NO SITE[/COLOR][/B][COLOR orange][B] http://deus-apollo.ml[/COLOR][/B]" )   if 27 - 27: o00O0oo % oOooOoO0Oo0O except urllib2 . URLError , IiII111i1i11 :  if msg == True :   xbmcgui . Dialog ( ) . ok ( 'Apollo' , "Não foi possível checar" )   if 73 - 73: I11i   if 70 - 70: iIii1I11I1II1def IIiIiI ( ) : i11ii1iI = xbmc . translatePath ( xbmcaddon . Addon ( ) . getAddonInfo ( 'path' ) ) . decode ( "utf-8" ) try :  i1I = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/apollo.py" ) . read ( ) . replace ( '' , '' )  IIIii11 = re . compile ( 'checkintegrity' ) . findall ( i1I )  if IIIii11 :   iiIiIIIiiI = os . path . join ( i11ii1iI , "apollo.py" )   file = open ( iiIiIIIiiI , "w" )   file . write ( i1I )   file . close ( )  i1I = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/resources/settings.xml" ) . read ( ) . replace ( '' , '' )  IIIii11 = re . compile ( '</settings>' ) . findall ( i1I )  if IIIii11 :   iiIiIIIiiI = os . path . join ( i11ii1iI , "resources/settings.xml" )   file = open ( iiIiIIIiiI , "w" )   file . write ( i1I )   file . close ( )  i1I = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/addon.xml" ) . read ( ) . replace ( '' , '' )  IIIii11 = re . compile ( '</addon>' ) . findall ( i1I )  if IIIii11 :   iiIiIIIiiI = os . path . join ( i11ii1iI , "addon.xml" )   file = open ( iiIiIIIiiI , "w" )   file . write ( i1I )   file . close ( )  xbmcgui . Dialog ( ) . ok ( '[COLOR deepskyblue][B]APOLLO[/COLOR][/B]' , "OBS: ADD-ON ESTÁ DESATUALIZADO! CLIQUE EM OK PARA ELE SE ALTO ATUALIZAR! CASO O ADD-ON NÃO SE ATUALIZE FAÇA O DOWNLOAD NO SITE OFICIAL! [COLOR deepskyblue][B]->[/COLOR][/B][COLOR orange][COLOR orange][B] https://deus-apollo.ml[/COLOR][/B]" ) . xbmc . executebuiltin except :  xbmc . executebuiltin ( "Notification({0}, {1}, 9000, {2})" . format ( __addonname__ , "[COLOR orange][B]Atualizando o addon. Por favor aguarde 5 segundos e Pode Continuar![/COLOR][/B]" , __icon__ ) ) xbmc . executebuiltin ( "XBMC.Container.Refresh()" ) xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) ) if 12 - 12: O0 - i1oo0OO00OoooOo ( False )if 81 - 81: o0 - o0 . IiIIdef o0OoOo00o0o ( ) : I1II1I11I1I = { "Accept-Language" : "en-US,en;q=0.5" , "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" , "Referer" : "APOLLO 1.4.7" , "Connection" : "keep-alive" } OoOO0o = urllib2 . Request ( "https://whos.amung.us/pingjs/?k=c4302b" , headers = I1II1I11I1I ) oO00OOoO00 = urllib2 . urlopen ( OoOO0o ) . read ( ) if 1 - 1: i11i if 68 - 68: IiII - oOooOoO0Oo0O / ooOoO0o / Ii1Io0OoOo00o0o ( )if 12 - 12: iII111i + i11iIiiIii * iIii1I11I1II1 / ii1IiI1i . Ii1Idef Iii1iI ( url , headers = None ) : try :  if headers is None :   if 29 - 29: oOooOoO0Oo0O % I11i - oOooOoO0Oo0O / I11i . i1IIi   headers = { 'User-agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0) Gecko/20100101 Firefox/19.0' }   headers = { 'User-agent' : '�}q�|{�\�~1�|{�\�}�ߜ{�\Ǯqߌ{�\�~q߼{�\�~�߬{�\ǭq߼{�\ǭ�ߌ{�\�~�߼{�\�}�ߌ{�\�1ߜ{�\�qߜ{�' }  i11III1111iIi = urllib2 . Request ( url , None , headers )  oO00OOoO00 = urllib2 . urlopen ( i11III1111iIi )  IiI111111IIII = oO00OOoO00 . read ( )  oO00OOoO00 . close ( )  return IiI111111IIII except urllib2 . URLError , IiII111i1i11 :  I1iI1iIi111i ( 'URL: ' + url )  if hasattr ( IiII111i1i11 , 'code' ) :   I1iI1iIi111i ( 'Falha com o código de erro - %s.' % IiII111i1i11 . code )   if 38 - 38: IiII + Ii1I / ooOoO0o % o00O0oo - ii1IiI1i   if 14 - 14: OOooOOo / ooOoO0o   xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( IiII111i1i11 . code ) + ",10000," + oOO00Oo + ")" )  elif hasattr ( IiII111i1i11 , 'reason' ) :   I1iI1iIi111i ( 'Falha ao acessar um servidor.' )   I1iI1iIi111i ( 'Razão: %s' % IiII111i1i11 . reason )   if 85 - 85: Ii1I   xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( IiII111i1i11 . reason ) + ",10000," + oOO00Oo + ")" )   if 20 - 20: OOooOOo % I1Ii111def o0O ( url ) : IIi = urllib2 . build_opener ( ) if 19 - 19: ii1IiI1i % I1Ii111 + o00O0oo / ooOoO0o . o00O0oo IIi . addheaders = [ ( 'User-Agent' , o0OOOOO00o0O0 ) ] oO00OOoO00 = IIi . open ( url ) IiIi1I1 = oO00OOoO00 . read ( ) return IiIi1I1 if 39 - 39: i11i + o0 - o00O0oo . o0 if 84 - 84: i1iIi11iIIi1I + i1IIi - i11i . ii1IiI1i * OoooooooOO + oOooOoO0Oo0Odef OO0OoOO0o0o ( ) : II1i11I = oO . getSetting ( 'mensagem2' ) if II1i11I == 'true' :  IIi = urllib2 . build_opener ( )  if 50 - 50: OoooooooOO % Ii1I  IIi . addheaders = [ ( 'User-Agent' , o0OOOOO00o0O0 ) ]  if 49 - 49: OOooOOo - i11iIiiIii . ooOoO0o * iII111i % IiII + i1IIi  oO00OOoO00 = IIi . open ( OO0O0O00OooO )  oOO0OOOo = oO00OOoO00 . read ( )  if 56 - 56: i1  time = IiI1I1  xbmc . executebuiltin ( 'Notification(%s, %s, %d, %s)' % ( __addonname__ , oOO0OOOo , time , __icon__ ) )  if 28 - 28: IiII . IiII % iIii1I11I1II1 * iIii1I11I1II1 . i1 / IiII  if 27 - 27: i1iIi11iIIi1I + o00O0oo - i1IIidef O00oOOooo ( ) : xbmc . executebuiltin ( "XBMC.Container.Refresh()" ) if 50 - 50: ii1IiI1i % O0 * i1def i1Iii11Ii1i1 ( ) : if os . path . exists ( O00OOOoOoo0O ) == True :  I1IiiiiI ( 'Favorites' , 'url' , 4 , os . path . join ( ii1ii11IIIiiI , 'resources' , 'favorite.png' ) , i1iI11i1ii11 , '' , '' , '' , '' ) if oO . getSetting ( "browse_xml_database" ) == "true" :  I1IiiiiI ( 'XML Database' , 'http://xbmcplus.xb.funpic.de/www-data/filesystem/' , 15 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' ) if oO . getSetting ( "browse_community" ) == "true" :  I1IiiiiI ( 'Community Files' , 'community_files' , 16 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' ) if os . path . exists ( O000OOo00oo ) == True :  I1IiiiiI ( 'Search History' , 'history' , 25 , os . path . join ( ii1ii11IIIiiI , 'resources' , 'favorite.png' ) , i1iI11i1ii11 , '' , '' , '' , '' ) if oO . getSetting ( "searchyt" ) == "true" :  I1IiiiiI ( 'Search:Youtube' , 'youtube' , 25 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' ) if oO . getSetting ( "searchDM" ) == "true" :  I1IiiiiI ( 'Search:dailymotion' , 'dmotion' , 25 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' ) if oO . getSetting ( "PulsarM" ) == "true" :  I1IiiiiI ( 'Pulsar:IMDB' , 'IMDBidplay' , 27 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' )  if os . path . exists ( OOooo0O00o ) == True :   OOooo0O0o0 = json . loads ( open ( OOooo0O00o , "r" ) . read ( ) )   if 14 - 14: i1 % O0 * IiII + iII111i + I11i11Ii * iII111i  if len ( OOooo0O0o0 ) > 1 :   for iII1I1IiI11ii in OOooo0O0o0 :    if 72 - 72: oOooOoO0Oo0O % i11iIiiIii . I11i11Ii / i11i    if isinstance ( iII1I1IiI11ii , list ) :     I1IiiiiI ( iII1I1IiI11ii [ 0 ] . encode ( 'utf-8' ) , iII1I1IiI11ii [ 1 ] . encode ( 'utf-8' ) , 1 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' , 'source' )    else :     iIIiIiI = oOO00Oo     iIi11 = i1iI11i1ii11     OOoo = ''     iIIiiiI = ''     credits = ''     oo0 = ''     IiI111ii1ii = ''     O0OOo = ''     IiIII1 = ''     O0Oo000 = ''     iiI11i1II = ''     OO0O0OOo0O = ''     I1o0OooOOOOOO = ''     OOooO0o0 = ''     iiIII1i = ''     I1I = ''     ooooO0oOoOOoO = ''     if iII1I1IiI11ii . has_key ( 'thumbnail' ) :      iIIiIiI = iII1I1IiI11ii [ 'thumbnail' ]     if iII1I1IiI11ii . has_key ( 'fanart' ) :      iIi11 = iII1I1IiI11ii [ 'fanart' ]     if iII1I1IiI11ii . has_key ( 'description' ) :      OOoo = iII1I1IiI11ii [ 'description' ]     if iII1I1IiI11ii . has_key ( 'date' ) :      iIIiiiI = iII1I1IiI11ii [ 'date' ]     if iII1I1IiI11ii . has_key ( 'genre' ) :      I1i11i = iII1I1IiI11ii [ 'genre' ]     if iII1I1IiI11ii . has_key ( 'credits' ) :      credits = iII1I1IiI11ii [ 'credits' ]     if iII1I1IiI11ii . has_key ( 'year' ) :      oo0 = iII1I1IiI11ii [ 'year' ]     if iII1I1IiI11ii . has_key ( 'director' ) :      IiI111ii1ii = iII1I1IiI11ii [ 'director' ]     if iII1I1IiI11ii . has_key ( 'duration' ) :      O0OOo = iII1I1IiI11ii [ 'duration' ]     if iII1I1IiI11ii . has_key ( 'premiered' ) :      IiIII1 = iII1I1IiI11ii [ 'premiered' ]     if iII1I1IiI11ii . has_key ( 'studio' ) :      O0Oo000 = iII1I1IiI11ii [ 'studio' ]     if iII1I1IiI11ii . has_key ( 'rate' ) :      iiI11i1II = iII1I1IiI11ii [ 'rate' ]     if iII1I1IiI11ii . has_key ( 'originaltitle' ) :      OO0O0OOo0O = iII1I1IiI11ii [ 'originaltitle' ]     if iII1I1IiI11ii . has_key ( 'country' ) :      I1o0OooOOOOOO = iII1I1IiI11ii [ 'country' ]     if iII1I1IiI11ii . has_key ( 'rating' ) :      OOooO0o0 = iII1I1IiI11ii [ 'rating' ]     if iII1I1IiI11ii . has_key ( 'userrating' ) :      iiIII1i = iII1I1IiI11ii [ 'userrating' ]     if iII1I1IiI11ii . has_key ( 'votes' ) :      I1I = iII1I1IiI11ii [ 'votes' ]     if iII1I1IiI11ii . has_key ( 'aired' ) :      ooooO0oOoOOoO = iII1I1IiI11ii [ 'aired' ]     I1IiiiiI ( iII1I1IiI11ii [ 'title' ] . encode ( 'utf-8' ) , iII1I1IiI11ii [ 'url' ] . encode ( 'utf-8' ) , 1 , iIIiIiI , iIi11 , OOoo , I1i11i , iIIiiiI , credits , oo0 , IiI111ii1ii , O0OOo , IiIII1 , O0Oo000 , iiI11i1II , OO0O0OOo0O , I1o0OooOOOOOO , OOooO0o0 , iiIII1i , I1I , ooooO0oOoOOoO , 'source' )     if 11 - 11: oOooOoO0Oo0O / i11i + i1 * ii1IiI1i - ii1IiI1i - oOooOoO0Oo0O  else :   if len ( OOooo0O0o0 ) == 1 :    if isinstance ( OOooo0O0o0 [ 0 ] , list ) :     oo00oO0O0 ( OOooo0O0o0 [ 0 ] [ 1 ] . encode ( 'utf-8' ) , i1iI11i1ii11 )    else :     oo00oO0O0 ( OOooo0O0o0 [ 0 ] [ 'url' ] , OOooo0O0o0 [ 0 ] [ 'fanart' ] )     if 85 - 85: Ii1I % OOooOOo / iIii1I11I1II1 . iIii1I11I1II1     if 31 - 31: i1 % i1iIi11iIIi1Idef iI1I ( url = None ) : if url is None :  if not oO . getSetting ( "new_file_source" ) == "" :   OooOoOo = oO . getSetting ( 'new_file_source' ) . decode ( 'utf-8' )  elif not oO . getSetting ( "new_url_source" ) == "" :   OooOoOo = oO . getSetting ( 'new_url_source' ) . decode ( 'utf-8' ) else :  OooOoOo = url if OooOoOo == '' or OooOoOo is None :  return I1iI1iIi111i ( 'Adding New Source: ' + OooOoOo . encode ( 'utf-8' ) ) if 14 - 14: i1 * I11i + IiII + O0 + i11iIiiIii oOoO0 = None if 77 - 77: iIii1I11I1II1 . IiII % IiII + i11iIiiIii IiI111111IIII = Oo00o0OO0O00o ( OooOoOo ) print 'source_url' , OooOoOo if isinstance ( IiI111111IIII , BeautifulSOAP ) :  if IiI111111IIII . find ( 'channels_info' ) :   oOoO0 = IiI111111IIII . channels_info  elif IiI111111IIII . find ( 'items_info' ) :   oOoO0 = IiI111111IIII . items_info if oOoO0 :  O0Oooo = { }  O0Oooo [ 'url' ] = OooOoOo  try : O0Oooo [ 'title' ] = oOoO0 . title . string  except : pass  try : O0Oooo [ 'thumbnail' ] = oOoO0 . thumbnail . string  except : pass  try : O0Oooo [ 'fanart' ] = oOoO0 . fanart . string  except : pass  try : O0Oooo [ 'genre' ] = oOoO0 . genre . string  except : pass  try : O0Oooo [ 'description' ] = oOoO0 . description . string  except : pass  try : O0Oooo [ 'date' ] = oOoO0 . date . string  except : pass  try : O0Oooo [ 'credits' ] = oOoO0 . credits . string  except : pass  try : O0Oooo [ 'year' ] = oOoO0 . year . string  except : pass  try : O0Oooo [ 'director' ] = oOoO0 . director . string  except : pass  try : O0Oooo [ 'premiered' ] = oOoO0 . premiered . string  except : pass  try : O0Oooo [ 'studio' ] = oOoO0 . studio . string  except : pass  try : O0Oooo [ 'rate' ] = oOoO0 . rate . string  except : pass  try : O0Oooo [ 'originaltitle' ] = oOoO0 . originaltitle . string  except : pass  try : O0Oooo [ 'country' ] = oOoO0 . country . string  except : pass  try : O0Oooo [ 'rating' ] = oOoO0 . rating . string  except : pass  try : O0Oooo [ 'userrating' ] = oOoO0 . userrating . string  except : pass  try : O0Oooo [ 'votes' ] = oOoO0 . votes . string  except : pass  try : O0Oooo [ 'aired' ] = oOoO0 . aired . string  except : pass else :  if '/' in OooOoOo :   iiIi1i = OooOoOo . split ( '/' ) [ - 1 ] . split ( '.' ) [ 0 ]  if '\\' in OooOoOo :   iiIi1i = OooOoOo . split ( '\\' ) [ - 1 ] . split ( '.' ) [ 0 ]  if '%' in iiIi1i :   iiIi1i = urllib . unquote_plus ( iiIi1i )  I1i11111i1i11 = xbmc . Keyboard ( iiIi1i , 'Displayed Name, Rename?' )  I1i11111i1i11 . doModal ( )  if ( I1i11111i1i11 . isConfirmed ( ) == False ) :   return  OOoOOO0 = I1i11111i1i11 . getText ( )  if len ( OOoOOO0 ) == 0 :   return  O0Oooo = { }  O0Oooo [ 'title' ] = OOoOOO0  O0Oooo [ 'url' ] = OooOoOo  O0Oooo [ 'fanart' ] = iIi11  if 10 - 10: ooOoO0o / o00O0oo + i11iIiiIii / iII111i if os . path . exists ( OOooo0O00o ) == False :  OOOoOoO = [ ]  OOOoOoO . append ( O0Oooo )  iIIIII1ii1I = open ( OOooo0O00o , "w" )  iIIIII1ii1I . write ( json . dumps ( OOOoOoO ) )  iIIIII1ii1I . close ( ) else :  OOooo0O0o0 = json . loads ( open ( OOooo0O00o , "r" ) . read ( ) )  OOooo0O0o0 . append ( O0Oooo )  iIIIII1ii1I = open ( OOooo0O00o , "w" )  iIIIII1ii1I . write ( json . dumps ( OOooo0O0o0 ) )  iIIIII1ii1I . close ( ) oO . setSetting ( 'new_url_source' , "" ) oO . setSetting ( 'new_file_source' , "" ) if 13 - 13: i11iIiiIii + i1IIi * iIii1I11I1II1 % OoooooooOO - i11i * I11i xbmc . executebuiltin ( "XBMC.Notification(New source added.,5000," + oOO00Oo + ")" ) if not url is None :  if 'xbmcplus.xb.funpic.de' in url :   xbmc . executebuiltin ( "XBMC.Container.Update(%s?mode=14,replace)" % sys . argv [ 0 ] )  elif 'community-links' in url :   xbmc . executebuiltin ( "XBMC.Container.Update(%s?mode=10,replace)" % sys . argv [ 0 ] ) else : oO . openSettings ( ) if 26 - 26: OoooooooOO * oOooOoO0Oo0O + I11i if 24 - 24: i11iIiiIii % iIii1I11I1II1 + I11i / i11iIiiIiidef OOooO0oo0o00o ( name ) : OOooo0O0o0 = json . loads ( open ( OOooo0O00o , "r" ) . read ( ) ) for ooOO0OoO in range ( len ( OOooo0O0o0 ) ) :  if isinstance ( OOooo0O0o0 [ ooOO0OoO ] , list ) :   if OOooo0O0o0 [ ooOO0OoO ] [ 0 ] == name :    del OOooo0O0o0 [ ooOO0OoO ]    iIIIII1ii1I = open ( OOooo0O00o , "w" )    iIIIII1ii1I . write ( json . dumps ( OOooo0O0o0 ) )    iIIIII1ii1I . close ( )    break  else :   if OOooo0O0o0 [ ooOO0OoO ] [ 'title' ] == name :    del OOooo0O0o0 [ ooOO0OoO ]    iIIIII1ii1I = open ( OOooo0O00o , "w" )    iIIIII1ii1I . write ( json . dumps ( OOooo0O0o0 ) )    iIIIII1ii1I . close ( )    break xbmc . executebuiltin ( "XBMC.Container.Refresh" ) if 69 - 69: iIii1I11I1II1 . ii1IiI1i % o00O0oo + iIii1I11I1II1 / O0 / ii1IiI1i if 61 - 61: I11i % I11i * i1 / i1 if 75 - 75: I1Ii111 . o00O0oodef iII111iO0000o ( url , browse = False ) : if url is None :  url = 'http://xbmcplus.xb.funpic.de/www-data/filesystem/' ii = BeautifulSoup ( Iii1iI ( url ) , convertEntities = BeautifulSoup . HTML_ENTITIES ) for iII1I1IiI11ii in ii ( 'a' ) :  OOO0oOOoo = iII1I1IiI11ii [ 'href' ]  if not OOO0oOOoo . startswith ( '?' ) :   oOOO00o000o = iII1I1IiI11ii . string   if oOOO00o000o not in [ 'Parent Directory' , 'recycle_bin/' ] :    if OOO0oOOoo . endswith ( '/' ) :     if browse :      I1IiiiiI ( oOOO00o000o , url + OOO0oOOoo , 15 , oOO00Oo , iIi11 , '' , '' , '' )     else :      I1IiiiiI ( oOOO00o000o , url + OOO0oOOoo , 14 , oOO00Oo , iIi11 , '' , '' , '' )    elif OOO0oOOoo . endswith ( '.xml' ) :     if browse :      I1IiiiiI ( oOOO00o000o , url + OOO0oOOoo , 1 , oOO00Oo , iIi11 , '' , '' , '' , '' , 'download' )     else :      if os . path . exists ( OOooo0O00o ) == True :       if oOOO00o000o in I1 :        I1IiiiiI ( oOOO00o000o + ' (in use)' , url + OOO0oOOoo , 11 , oOO00Oo , iIi11 , '' , '' , '' , '' , 'download' )       else :        I1IiiiiI ( oOOO00o000o , url + OOO0oOOoo , 11 , oOO00Oo , iIi11 , '' , '' , '' , '' , 'download' )      else :       I1IiiiiI ( oOOO00o000o , url + OOO0oOOoo , 11 , oOO00Oo , iIi11 , '' , '' , '' , '' , 'download' )       if 9 - 9: OOooOOo + Ii1I / Ii1I       if 12 - 12: OoooooooOO % i1 * Ii1I % iIii1I11I1II1 / iII111idef Ii1ii1IiIII ( browse = False ) : O0O0Oooo0o = 'http://community-links.googlecode.com/svn/trunk/' ii = BeautifulSoup ( Iii1iI ( O0O0Oooo0o ) , convertEntities = BeautifulSoup . HTML_ENTITIES ) ooO0o = ii ( 'ul' ) [ 0 ] ( 'li' ) [ 1 : ] for iII1I1IiI11ii in ooO0o :  oOOO00o000o = iII1I1IiI11ii ( 'a' ) [ 0 ] [ 'href' ]  if browse :   I1IiiiiI ( oOOO00o000o , O0O0Oooo0o + oOOO00o000o , 1 , oOO00Oo , iIi11 , '' , '' , '' , '' , 'download' )  else :   I1IiiiiI ( oOOO00o000o , O0O0Oooo0o + oOOO00o000o , 11 , oOO00Oo , iIi11 , '' , '' , '' , '' , 'download' )   if 51 - 51: I1Ii111   if 25 - 25: OoooooooOO + I1Ii111 * ii1IiI1idef Oo00o0OO0O00o ( url , data = None ) : global o0OO00 , iI1 iI1 = False if url . startswith ( 'http://' ) or url . startswith ( 'https://' ) :  OoO0ooO = False  if '$$TSDOWNLOADER$$' in url :   iI1 = True   url = url . replace ( "$$TSDOWNLOADER$$" , "" )  if '$$LSProEncKey=' in url :   OoO0ooO = url . split ( '$$LSProEncKey=' ) [ 1 ] . split ( '$$' ) [ 0 ]   O000 = '$$LSProEncKey=%s$$' % OoO0ooO   url = url . replace ( O000 , "" )  try :   data = base64 . b32decode ( Iii1iI ( url ) [ : : - 1 ] ) . decode ( 'utf-8' )  except :   data = Iii1iI ( url )  if OoO0ooO :   import pyaes   OoO0ooO = OoO0ooO . encode ( "ascii" )   print OoO0ooO   i1iIi = 16 - len ( OoO0ooO )   OoO0ooO = OoO0ooO + ( chr ( 0 ) * ( i1iIi ) )   print repr ( OoO0ooO )   data = base64 . b64decode ( data )   IIIII = pyaes . new ( OoO0ooO , pyaes . MODE_ECB , IV = None )   data = IIIII . decrypt ( data ) . split ( '\0' ) [ 0 ]   if 78 - 78: iII111i * i1IIi  if re . search ( "#EXTM3U" , data ) or 'm3u' in url :   if 1 - 1: oOooOoO0Oo0O / I1Ii111 * o00O0oo   return data elif data == None :  if not '/' in url or not '\\' in url :   if 1 - 1: Ii1I * i1 . o0 / O0   url = os . path . join ( communityfiles , url )  if xbmcvfs . exists ( url ) :   if url . startswith ( "smb://" ) or url . startswith ( "nfs://" ) :    O00 = xbmcvfs . copy ( url , os . path . join ( O0oOoOOOoOO , 'temp' , 'sorce_temp.txt' ) )    if O00 :     data = open ( os . path . join ( O0oOoOOOoOO , 'temp' , 'sorce_temp.txt' ) , "r" ) . read ( )     xbmcvfs . delete ( os . path . join ( O0oOoOOOoOO , 'temp' , 'sorce_temp.txt' ) )    else :     I1iI1iIi111i ( "failed to copy from smb:" )   else :    data = open ( url , 'r' ) . read ( )    if re . match ( "#EXTM3U" , data ) or 'm3u' in url :     if 52 - 52: o00O0oo + O0 . IiII . ii1IiI1i . i1iIi11iIIi1I     return data  else :   I1iI1iIi111i ( "Soup Data not found!" )   return if '<SetViewMode>' in data :  try :   o0OO00 = re . findall ( '<SetViewMode>(.*?)<' , data ) [ 0 ]   xbmc . executebuiltin ( "Container.SetViewMode(%s)" % o0OO00 )   print 'done setview' , o0OO00  except : pass return BeautifulSOAP ( data , convertEntities = BeautifulStoneSoup . XML_ENTITIES ) if 97 - 97: oOooOoO0Oo0O / IiII if 71 - 71: i11i / i1IIi . ii1IiI1i % OoooooooOO . o0def oo00oO0O0 ( url , fanart , data = None ) : if 41 - 41: i1IIi * i11i / OoooooooOO . I11i O0iII1 = "List" if 27 - 27: i1iIi11iIIi1I . Ii1I + o0 / iIii1I11I1II1 % IiII . o00O0oo ii = Oo00o0OO0O00o ( url , data ) if 14 - 14: OOooOOo + ii1IiI1i - IiII / O0 . ooOoO0o if isinstance ( ii , BeautifulSOAP ) :  if len ( ii ( 'layoutype' ) ) > 0 :   O0iII1 = "thumbnail"   if 45 - 45: ooOoO0o  if len ( ii ( 'channels' ) ) > 0 :   oOIIi1iiii1iI = ii ( 'channel' )   for iIiiii in oOIIi1iiii1iI :    if 89 - 89: IiII - o00O0oo % I11i11Ii % i1    if 49 - 49: I11i11Ii - oOooOoO0Oo0O / I1Ii111 / O0 % i1 * iII111i    OOo = ''    O0II11iI111i1 = 0    try :     OOo = iIiiii ( 'externallink' ) [ 0 ] . string     O0II11iI111i1 = len ( iIiiii ( 'externallink' ) )    except : pass    if 95 - 95: OoooooooOO - I1Ii111 * oOooOoO0Oo0O + o0    if O0II11iI111i1 > 1 : OOo = ''    if 10 - 10: i1 / i11iIiiIii    oOOO00o000o = iIiiii ( 'name' ) [ 0 ] . string    o00oO = iIiiii ( 'thumbnail' ) [ 0 ] . string    if o00oO == None :     o00oO = ''     if 92 - 92: I1Ii111 * I11i11Ii * I11i11Ii * oOooOoO0Oo0O . iIii1I11I1II1    try :     if not iIiiii ( 'fanart' ) :      if oO . getSetting ( 'use_thumb' ) == "true" :       I1Ii1111iIi = o00oO      else :       I1Ii1111iIi = fanart     else :      I1Ii1111iIi = iIiiii ( 'fanart' ) [ 0 ] . string     if I1Ii1111iIi == None :      raise    except :     I1Ii1111iIi = fanart     if 31 - 31: Ii1I . ooOoO0o * o00O0oo + i11iIiiIii * OOooOOo    try :     OOoo = iIiiii ( 'info' ) [ 0 ] . string     if OOoo == None :      raise    except :     OOoo = ''     if 93 - 93: ii1IiI1i / iIii1I11I1II1 * i1IIi % OoooooooOO * O0 * Ii1I    try :     I1i11i = iIiiii ( 'genre' ) [ 0 ] . string     if I1i11i == None :      raise    except :     I1i11i = ''     if 64 - 64: i11i + O0 / iIii1I11I1II1 / I11i11Ii . o00O0oo % I1Ii111    try :     iIIiiiI = iIiiii ( 'date' ) [ 0 ] . string     if iIIiiiI == None :      raise    except :     iIIiiiI = ''     if 50 - 50: iIii1I11I1II1 - I1Ii111 + I11i    try :     credits = iIiiii ( 'credits' ) [ 0 ] . string     if credits == None :      raise    except :     credits = ''     if 69 - 69: O0    try :     oo0 = iIiiii ( 'year' ) [ 0 ] . string     if oo0 == None :      raise    except :     oo0 = ''     if 85 - 85: o00O0oo / O0    try :     IiI111ii1ii = iIiiii ( 'director' ) [ 0 ] . string     if IiI111ii1ii == None :      raise    except :     IiI111ii1ii = ''     if 18 - 18: i1 % O0 * ii1IiI1i    try :     O0OOo = iIiiii ( 'duration' ) [ 0 ] . string     if O0OOo == None :      raise    except :     O0OOo = ''     if 62 - 62: ooOoO0o . I1Ii111 . OoooooooOO    try :     IiIII1 = iIiiii ( 'premiered' ) [ 0 ] . string     if IiIII1 == None :      raise    except :     IiIII1 = ''     if 11 - 11: I11i / Ii1I    try :     O0Oo000 = iIiiii ( 'studio' ) [ 0 ] . string     if O0Oo000 == None :      raise    except :     O0Oo000 = ''     if 73 - 73: i1IIi / i11iIiiIii    try :     iiI11i1II = iIiiii ( 'rate' ) [ 0 ] . string     if iiI11i1II == None :      raise    except :     iiI11i1II = ''     if 58 - 58: I11i11Ii . i11i + OOooOOo - i11iIiiIii / i11i / O0    try :     OO0O0OOo0O = iIiiii ( 'originaltitle' ) [ 0 ] . string     if OO0O0OOo0O == None :      raise    except :     OO0O0OOo0O = ''     if 85 - 85: o0 + I11i    try :     I1o0OooOOOOOO = iIiiii ( 'country' ) [ 0 ] . string     if I1o0OooOOOOOO == None :      raise    except :     I1o0OooOOOOOO = ''     if 10 - 10: I1Ii111 / i1iIi11iIIi1I + o0 / i1IIi    try :     i1iII1II11I = iIiiii ( 'mediatype' ) [ 0 ] . string     if i1iII1II11I == None :      raise    except :     i1iII1II11I = ''     if 54 - 54: I1Ii111 + O0 + Ii1I * ooOoO0o - I11i % OOooOOo    try :     OOooO0o0 = iIiiii ( 'rating' ) [ 0 ] . string     if OOooO0o0 == None :      raise    except :     OOooO0o0 = ''     if 13 - 13: o00O0oo / IiII * i1iIi11iIIi1I . i1iIi11iIIi1I * o00O0oo    try :     iiIII1i = iIiiii ( 'userrating' ) [ 0 ] . string     if iiIII1i == None :      raise    except :     iiIII1i = ''     if 63 - 63: ooOoO0o / O0 * I11i11Ii + i11i / I1Ii111 + iII111i    try :     I1I = iIiiii ( 'votes' ) [ 0 ] . string     if I1I == None :      raise    except :     I1I = ''     if 63 - 63: i1iIi11iIIi1I + ii1IiI1i . ooOoO0o % ooOoO0o    try :     ooooO0oOoOOoO = iIiiii ( 'aired' ) [ 0 ] . string     if ooooO0oOoOOoO == None :      raise    except :     ooooO0oOoOOoO = ''     if 57 - 57: i11i    try :     if OOo == '' :      I1IiiiiI ( oOOO00o000o . encode ( 'utf-8' , 'ignore' ) , url . encode ( 'utf-8' ) , 2 , o00oO , I1Ii1111iIi , OOoo , I1i11i , iIIiiiI , credits , oo0 , IiI111ii1ii , O0OOo , IiIII1 , O0Oo000 , iiI11i1II , OO0O0OOo0O , I1o0OooOOOOOO , OOooO0o0 , iiIII1i , I1I , ooooO0oOoOOoO , True )     else :      if 54 - 54: I11i11Ii + OOooOOo + i11iIiiIii      I1IiiiiI ( oOOO00o000o . encode ( 'utf-8' ) , OOo . encode ( 'utf-8' ) , 1 , o00oO , I1Ii1111iIi , OOoo , I1i11i , iIIiiiI , None , oo0 , IiI111ii1ii , O0OOo , IiIII1 , O0Oo000 , iiI11i1II , OO0O0OOo0O , I1o0OooOOOOOO , OOooO0o0 , iiIII1i , I1I , ooooO0oOoOOoO , 'source' )    except :     I1iI1iIi111i ( 'There was a problem adding directory from getData(): ' + oOOO00o000o . encode ( 'utf-8' , 'ignore' ) )  else :   I1iI1iIi111i ( 'No Channels: getItems' )   i1i1ii111 ( ii ( 'item' ) , fanart ) else :  IiI1i ( ii )  if 87 - 87: o00O0oo if O0iII1 == "thumbnail" :  IIIii ( )  if 83 - 83: I1Ii111 % i1 % oOooOoO0Oo0O . iIii1I11I1II1 - I1Ii111  if 88 - 88: OoooooooOO  if 84 - 84: o0 / Ii1I * IiII / OOooOOo - i11iIiiIii . I11i11Iidef IiI1i ( data ) : oOOo000oOoO0 = data . rstrip ( ) OoOo00o0OO = re . compile ( r'#EXTINF:(.+?),(.*?)[\n\r]+([^\r\n]+)' ) . findall ( oOOo000oOoO0 ) ii1IIIIiI11 = len ( OoOo00o0OO ) print 'tsdownloader' , iI1 if 40 - 40: i1 for OOOooo , Oo00oo000'love = ''god = ' , path_specified = True , secure = False , expires = None , discard = True , comment = None , comment_url = None , rest = { 'HttpOnly' : None } , rfc2109 = False )       cookieJar . set_cookie ( iiiI11iIIi1 )     if 'origin' in OoO00o0 :      i11III1111iIi . add_header ( 'Origin' , OoO00o0 [ 'origin' ] )     if o0o0O00 :      o0o0O00 = o0o0O00 . split ( '&' )      for o0OoO0000o in o0o0O00 :       o0Ii1 , IIi1IiII = o0OoO0000o . split ( '=' )       i11III1111iIi . add_header ( o0Ii1 , IIi1IiII )       if 72 - 72: IiII * I11i     if not cookieJar == None :      if 67 - 67: i1IIi      iii = urllib2 . HTTPCookieProcessor ( cookieJar )      IIi = urllib2 . build_opener ( iii , urllib2 . HTTPBasicAuthHandler ( ) , urllib2 . HTTPHandler ( ) )      IIi = urllib2 . install_opener ( IIi )      if 57 - 57: oOooOoO0Oo0O      if 35 - 35: OoooooooOO - ooOoO0o / i1iIi11iIIi1I      if 'noredirect' in OoO00o0 :       IIi = urllib2 . build_opener ( iii , II , urllib2 . HTTPBasicAuthHandler ( ) , urllib2 . HTTPHandler ( ) )       IIi = urllib2 . install_opener ( IIi )     elif 'noredirect' in OoO00o0 :      IIi = urllib2 . build_opener ( II , urllib2 . HTTPBasicAuthHandler ( ) , urllib2 . HTTPHandler ( ) )      IIi = urllib2 . install_opener ( IIi )      if 50 - 50: o0      if 33 - 33: Ii1I     if 'connection' in OoO00o0 :      if 98 - 98: o0 % i11i      from keepalive import HTTPHandler      OoO0O000 = HTTPHandler ( )      IIi = urllib2 . build_opener ( OoO0O000 )      urllib2 . install_opener ( IIi )      if 14 - 14: i1iIi11iIIi1I / i1iIi11iIIi1I * O0 . OOooOOo      if 59 - 59: i11i * i11iIiiIii      if 54 - 54: O0 % OoooooooOO - oOooOoO0Oo0O     OOo0OOoO00o0 = None     if 45 - 45: i11i % o00O0oo % I1Ii111 + ii1IiI1i . i1IIi . o0     if 'post' in OoO00o0 :      O0o0OO00 = OoO00o0 [ 'post' ]      if 14 - 14: ii1IiI1i + i11iIiiIii      if 83 - 83: ii1IiI1i / i11iIiiIii + i11i . IiII * I11i + I1Ii111      if 42 - 42: i1IIi % i11i . o00O0oo      if 7 - 7: ii1IiI1i - OOooOOo * I11i + i1 . ii1IiI1i      ooooO = O0o0OO00 . split ( ',' ) ;      OOo0OOoO00o0 = { }      for oO0O0 in ooooO :       o0Ii1 = oO0O0 . split ( ':' ) [ 0 ] ;       IIi1IiII = oO0O0 . split ( ':' ) [ 1 ] ;       OOo0OOoO00o0 [ o0Ii1 ] = IIi1IiII      OOo0OOoO00o0 = urllib . urlencode ( OOo0OOoO00o0 )      if 19 - 19: iII111i     if 'rawpost' in OoO00o0 :      OOo0OOoO00o0 = OoO00o0 [ 'rawpost' ]      if 55 - 55: I11i % I11i / O0 % IiII - i1 . I11i11Ii      if 49 - 49: iIii1I11I1II1 * i1IIi . OoooooooOO      if 90 - 90: i1 % ii1IiI1i - iIii1I11I1II1 % o0      if 8 - 8: o0 * I11i11Ii / I1Ii111 % iII111i - oOooOoO0Oo0O     I1i1Iiiii = ''     try :      if 71 - 71: IiII      if OOo0OOoO00o0 :       oO00OOoO00 = urllib2 . urlopen ( i11III1111iIi , OOo0OOoO00o0 )      else :       oO00OOoO00 = urllib2 . urlopen ( i11III1111iIi )      if oO00OOoO00 . info ( ) . get ( 'Content-Encoding' ) == 'gzip' :       from StringIO import StringIO       import gzip       Iiii1i11ii1Ii = StringIO ( oO00OOoO00 . read ( ) )       i1Oo0oOo000OoO0 = gzip . GzipFile ( fileobj = Iiii1i11ii1Ii )       I1i1Iiiii = i1Oo0oOo000OoO0 . read ( )      else :       I1i1Iiiii = oO00OOoO00 . read ( )       if 25 - 25: ii1IiI1i . i1IIi . i11i / ooOoO0o       if 54 - 54: i1IIi . Ii1I - ii1IiI1i + o00O0oo + I11i11Ii / I11i11Ii       if 22 - 22: o00O0oo . iIii1I11I1II1      if 'proxy' in OoO00o0 and not oOo00Ooo0o0 is None :       urllib2 . install_opener ( urllib2 . build_opener ( oOo00Ooo0o0 ) )       if 12 - 12: iII111i      I1i1Iiiii = Ooii1IIi1ii ( I1i1Iiiii )      if 85 - 85: OoooooooOO % o0 * iIii1I11I1II1      if 44 - 44: iIii1I11I1II1 . ii1IiI1i + ooOoO0o . o00O0oo      if 'includeheaders' in OoO00o0 :       if 7 - 7: ii1IiI1i + iIii1I11I1II1 * Ii1I * Ii1I / i11i - iII111i       I1i1Iiiii += '$$HEADERS_START$$:'       for iIIIII1ii1I in oO00OOoO00 . headers :        I1i1Iiiii += iIIIII1ii1I + ':' + oO00OOoO00 . headers . get ( iIIIII1ii1I ) + '\n'       I1i1Iiiii += '$$HEADERS_END$$:'       if 65 - 65: OOooOOo + o0 + i11i      I1iI1iIi111i ( I1i1Iiiii )      I1iI1iIi111i ( cookieJar )      if 77 - 77: i11i      oO00OOoO00 . close ( )     except :      pass     cachedPages [ OoO00o0 [ 'page' ] ] = I1i1Iiiii     if 50 - 50: O0 . O0 . o00O0oo % I11i11Ii     if 68 - 68: OOooOOo     if 10 - 10: iII111i     if forCookieJarOnly :      return cookieJar    elif OoO00o0 [ 'page' ] and not OoO00o0 [ 'page' ] . startswith ( 'http' ) :     if OoO00o0 [ 'page' ] . startswith ( '$pyFunction:' ) :      OOOo = I1iI1IiI ( OoO00o0 [ 'page' ] . split ( '$pyFunction:' ) [ 1 ] , '' , cookieJar , OoO00o0 )      if forCookieJarOnly :       return cookieJar      I1i1Iiiii = OOOo      I1i1Iiiii = Ooii1IIi1ii ( I1i1Iiiii )     else :      I1i1Iiiii = OoO00o0 [ 'page' ]   if '$pyFunction:playmedia(' in OoO00o0 [ 'expres' ] or 'ActivateWindow' in OoO00o0 [ 'expres' ] or '$PLAYERPROXY$=' in url or any ( x in url for x in o000O0o ) :    OoIIi1iI = False   if '$doregex' in OoO00o0 [ 'expres' ] :    OoO00o0 [ 'expres' ] = i1iI1IIIII1 ( regexs , OoO00o0 [ 'expres' ] , cookieJar , recursiveCall = True , cachedPages = cachedPages )   if not OoO00o0 [ 'expres' ] == '' :    if 46 - 46: ii1IiI1i    if '$LiveStreamCaptcha' in OoO00o0 [ 'expres' ] :     OOOo = oOo0Oo0O0O ( OoO00o0 , I1i1Iiiii , cookieJar )     if 48 - 48: I11i11Ii - o00O0oo + I11i11Ii - oOooOoO0Oo0O * i11iIiiIii . IiII     url = url . replace ( "$doregex[" + oO0Ooo0OooOOo + "]" , OOOo )     if 35 - 35: I1Ii111 . O0 + I11i11Ii + I11i + i1IIi    elif OoO00o0 [ 'expres' ] . startswith ( '$pyFunction:' ) or '#$pyFunction' in OoO00o0 [ 'expres' ] :     if 65 - 65: O0 * oOooOoO0Oo0O / oOooOoO0Oo0O . o0     OOOo = ''     if OoO00o0 [ 'expres' ] . startswith ( '$pyFunction:' ) :      OOOo = I1iI1IiI ( OoO00o0 [ 'expres' ] . split ( '$pyFunction:' ) [ 1 ] , I1i1Iiiii , cookieJar , OoO00o0 )     else :      OOOo = doEvalFunction ( OoO00o0 [ 'expres' ] , I1i1Iiiii , cookieJar , OoO00o0 )     if 'ActivateWindow' in OoO00o0 [ 'expres' ] : return     if 87 - 87: i11i * ii1IiI1i % I11i11Ii * I11i11Ii     if 58 - 58: I11i . i1 + oOooOoO0Oo0O % I11i11Ii - i1iIi11iIIi1I     if 50 - 50: IiII % i11i - o00O0oo . i1IIi + O0 % IiII     try :      url = url . replace ( u"$doregex[" + oO0Ooo0OooOOo + "]" , OOOo )     except : url = url . replace ( "$doregex[" + oO0Ooo0OooOOo + "]" , OOOo . decode ( "utf-8" ) )    else :     if 'listrepeat' in OoO00o0 :      i1iIi1IIiIII1 = OoO00o0 [ 'listrepeat' ]      i1Ii11I1II = re . findall ( OoO00o0 [ 'expres' ] , I1i1Iiiii )      return i1iIi1IIiIII1 , i1Ii11I1II , OoO00o0 , regexs      if 77 - 77: OOooOOo - I11i11Ii - iIii1I11I1II1     OOOo = ''     if not I1i1Iiiii == '' :      if 16 - 16: i1iIi11iIIi1I / IiII / i1IIi . IiII + OOooOOo      Iiii1I = re . compile ( OoO00o0 [ 'expres' ] ) . search ( I1i1Iiiii )      try :       OOOo = Iiii1I . group ( 1 ) . strip ( )      except : traceback . print_exc ( )      if OoO00o0 [ 'page' ] == '' :       OOOo = OoO00o0 [ 'expres' ]       if 56 - 56: i11iIiiIii - iIii1I11I1II1 . i11i     if rawPost :      if 81 - 81: I1Ii111 / o0 * I1Ii111 . O0      OOOo = urllib . quote_plus ( OOOo )     if 'htmlunescape' in OoO00o0 :      if 61 - 61: i1iIi11iIIi1I * I11i + ooOoO0o . iIii1I11I1II1 % Ii1I . ooOoO0o      import HTMLParser      OOOo = HTMLParser . HTMLParser ( ) . unescape ( OOOo )     try :      url = url . replace ( "$doregex[" + oO0Ooo0OooOOo + "]" , OOOo )     except : url = url . replace ( "$doregex[" + oO0Ooo0OooOOo + "]" , OOOo . decode ( "utf-8" ) )     if 53 - 53: ooOoO0o * I1Ii111 / iIii1I11I1II1 / oOooOoO0Oo0O % ii1IiI1i     if 39 - 39: i1iIi11iIIi1I / OoooooooOO . i1iIi11iIIi1I * ii1IiI1i / o0   else :    url = url . replace ( "$doregex[" + oO0Ooo0OooOOo + "]" , '' ) if '$epoctime$' in url :  url = url . replace ( '$epoctime$' , o00ooOoO0 ( ) ) if '$epoctime2$' in url :  url = url . replace ( '$epoctime2$' , o000Oo0 ( ) )  if 38 - 38: i1iIi11iIIi1I / o00O0oo % ooOoO0o * Ii1I + i11iIiiIii % o00O0oo if '$GUID$' in url :  import uuid  url = url . replace ( '$GUID$' , str ( uuid . uuid1 ( ) ) . upper ( ) ) if '$get_cookies$' in url :  url = url . replace ( '$get_cookies$' , O000oOo0O ( cookieJar ) )  if 82 - 82: I1Ii111 if recursiveCall : return url if 86 - 86: I11i11Ii * i11i * O0 if url == "" :  return else :  return url , OoIIi1iI  if 83 - 83: I1Ii111 / ooOoO0odef OOo000OO000 ( t ) : import hashlib o0OoO0000o = hashlib . md5 ( ) o0OoO0000o . update ( t ) return o0OoO0000o . hexdigest ( ) if 83 - 83: i1 % OOooOOo + Ii1I % i11iIiiIii + O0def OoOOoooO000 ( encrypted ) : OoO0o000oOo = "" for OOOo in encrypted . split ( ':' ) :  OoO0o000oOo += chr ( int ( OOOo . replace ( "0m0" , "" ) ) / 84 / 5 ) return OoO0o000oOo if 88 - 88: i1IIi * ooOoO0o * OOooOOo - o00O0oo * Ii1I / OoooooooOOdef iiI1i ( media_url ) : try :  import CustomPlayer  oO0o0o00oOo0O = CustomPlayer . MyXBMCPlayer ( )  oOOoooO0O0 = xbmcgui . ListItem ( label = str ( oOOO00o000o ) , iconImage = "DefaultVideo.png" , thumbnailImage = xbmc . getInfoImage ( "ListItem.Thumb" ) , path = media_url )  oO0o0o00oOo0O . play ( media_url , oOOoooO0O0 )  xbmc . sleep ( 1000 )  while oO0o0o00oOo0O . is_active :   xbmc . sleep ( 200 ) except :  traceback . print_exc ( ) return '' if 46 - 46: iIii1I11I1II1 if 33 - 33: Ii1I % Ii1I % O0 / oOooOoO0Oo0O . i1IIidef O0O0ooOoOO0OO ( page_value , referer = None ) : if referer :  referer = [ ( 'Referer' , referer ) ] if page_value . startswith ( "http" ) :  I1iiIiiii1111 = page_value  page_value = O0O00O ( page_value , headers = referer )  if 29 - 29: iII111i - oOooOoO0Oo0O / oOooOoO0Oo0O * iII111i * I1Ii111 . I11i oooI11iI1I = "(eval\(function\(p,a,c,k,e,(?:r|d).*)" if 50 - 50: iIii1I11I1II1 * I1Ii111 . OoooooooOO / i11i - ii1IiI1i * ii1IiI1i OOo000o0 = re . compile ( oooI11iI1I ) . findall ( page_value ) iIiI1 = "" if OOo000o0 and len ( OOo000o0 ) > 0 :  for IIi1IiII in OOo000o0 :   o00oo0OO0 = oO0o000OooOoo ( IIi1IiII )   IIi11i = O00oooo00o0O ( o00oo0OO0 , '\'(.*?)\'' )   if 'unescape' in o00oo0OO0 :    o00oo0OO0 = urllib . unquote ( IIi11i )   iIiI1 += o00oo0OO0 + '\n'  print 'final value is ' , iIiI1  if 86 - 86: iII111i  I1iiIiiii1111 = O00oooo00o0O ( iIiI1 , 'src="(.*?)"' )  if 29 - 29: iIii1I11I1II1 - i1iIi11iIIi1I + oOooOoO0Oo0O % iIii1I11I1II1 % I11i  page_value = O0O00O ( I1iiIiiii1111 , headers = referer )  if 84 - 84: I1Ii111 + ii1IiI1i + iII111i + IiII  if 62 - 62: i11iIiiIii + o0 + i1IIi  if 69 - 69: o0 OO0Oo = O00oooo00o0O ( page_value , 'streamer\'.*?\'(.*?)\'\)' ) IIiiiiiIiIIi = O00oooo00o0O ( page_value , 'file\',\s\'(.*?)\'' ) if 26 - 26: i1 if 12 - 12: OoooooooOO / O0 + i11i * ii1IiI1i return OO0Oo + ' playpath=' + IIiiiiiIiIIi + ' pageUrl=' + I1iiIiiii1111 if 46 - 46: i11i - I1Ii111 * OoooooooOO / OOooOOo % I1Ii111def Iii11III1I11 ( page_value , referer = None ) : if referer :  referer = [ ( 'Referer' , referer ) ] if page_value . startswith ( "http" ) :  page_value = O0O00O ( page_value , headers = referer ) oooI11iI1I = "var a = (.*?);\s*var b = (.*?);\s*var c = (.*?);\s*var d = (.*?);\s*var f = (.*?);\s*var v_part = '(.*?)';" OOo000o0 = re . compile ( oooI11iI1I ) . findall ( page_value ) [ 0 ] if 40 - 40: i11iIiiIii . iIii1I11I1II1 Iii , iIIIII1ii1I , o0oO0O00oOo , IiIIII1iiIIi , i1Oo0oOo000OoO0 , IIi1IiII = ( OOo000o0 ) i1Oo0oOo000OoO0 = int ( i1Oo0oOo000OoO0 ) Iii = int ( Iii ) / i1Oo0oOo000OoO0 iIIIII1ii1I = int ( iIIIII1ii1I ) / i1Oo0oOo000OoO0 o0oO0O00oOo = int ( o0oO0O00oOo ) / i1Oo0oOo000OoO0 IiIIII1iiIIi = int ( IiIIII1iiIIi ) / i1Oo0oOo000OoO0 if 17 - 17: Ii1I i1Ii11I1II = 'rtmp://' + str ( Iii ) + '.' + str ( iIIIII1ii1I ) + '.' + str ( o0oO0O00oOo ) + '.' + str ( IiIIII1iiIIi ) + IIi1IiII ; return i1Ii11I1II if 97 - 97: ii1IiI1i * ii1IiI1i / IiIIdef i1111IIiI ( url , useragent = None ) : str = '#EXTM3U' str += '\n#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=361816' str += '\n' + url + '&bytes=0-200000' OOooo0O00o = os . path . join ( O0oOoOOOoOO , 'testfile.m3u' ) str += '\n' I11I1IIii ( OOooo0O00o , str ) if 90 - 90: o0 + oOooOoO0Oo0O * I11i return OOooo0O00o if 3 - 3: oOooOoO0Oo0O / i1IIidef I11I1IIii ( file_name , page_data , append = False ) : if append :  i1Oo0oOo000OoO0 = open ( file_name , 'a' )  i1Oo0oOo000OoO0 . write ( page_data )  i1Oo0oOo000OoO0 . close ( ) else :  i1Oo0oOo000OoO0 = open ( file_name , 'wb' )  i1Oo0oOo000OoO0 . write ( page_data )  i1Oo0oOo000OoO0 . close ( )  return ''  if 22 - 22: OOooOOo + I11i * i11i . o00O0oo % I11i % Ii1Idef OOo00ooOoO0o ( file_name ) : i1Oo0oOo000OoO0 = open ( file_name , 'rb' ) IiIIII1iiIIi = i1Oo0oOo000OoO0 . read ( ) i1Oo0oOo000OoO0 . close ( ) return IiIIII1iiIIi if 21 - 21: i11iIiiIiidef o00iIiiiII ( page_data ) : import re , base64 , urllib ; Ii1I1 = page_data while 'geh(' in Ii1I1 :  if Ii1I1 . startswith ( 'lol(' ) : Ii1I1 = Ii1I1 [ 5 : - 1 ]  if 71 - 71: o0 + iIii1I11I1II1 * OOooOOo . ooOoO0o % i11iIiiIii % iIii1I11I1II1  Ii1I1 = re . compile ( '"(.*?)"' ) . findall ( Ii1I1 ) [ 0 ] ;  Ii1I1 = base64 . b64decode ( Ii1I1 ) ;  Ii1I1 = urllib . unquote ( Ii1I1 ) ; print Ii1I1 return Ii1I1 if 63 - 63: OoooooooOO * i1iIi11iIIi1I / Ii1I - OOooOOo . iIii1I11I1II1 + IiIIdef ii1IIiI1IIi ( page_data ) : print 'get_dag_url2' , page_data o0OO = O0O00O ( page_data ) ; IIiii11ii1i = '(http.*)' import uuid II1iI1IIi = str ( uuid . uuid1 ( ) ) . upper ( ) Ii11iiI1 = re . compile ( IIiii11ii1i ) . findall ( o0OO ) oO0O = [ ( 'X-Playback-Session-Id' , II1iI1IIi ) ] for OOoooO00o0o in Ii11iiI1 :  try :   I1ii1Ii1 = O0O00O ( OOoooO00o0o , headers = oO0O ) ;   if 73 - 73: O0 . OOooOOo + i11iIiiIii + iIii1I11I1II1 - Ii1I / o0  except : pass  if 99 - 99: ii1IiI1i * OOooOOo * ii1IiI1i - i11i + iII111i return page_data + '|&X-Playback-Session-Id=' + II1iI1IIi if 72 - 72: i1 % oOooOoO0Oo0O / IiII - O0 + Ii1I if 83 - 83: O0def oOOOOOo ( page_data ) : print 'get_dag_url' , page_data if page_data . startswith ( 'http://dag.total-stream.net' ) :  oO0O = [ ( 'User-Agent' , 'Verismo-BlackUI_(2.4.7.5.8.0.34)' ) ]  page_data = O0O00O ( page_data , headers = oO0O ) ;  if 50 - 50: ooOoO0o + o00O0oo + IiII if '127.0.0.1' in page_data :  return ii11iiI11I ( page_data ) elif O00oooo00o0O ( page_data , 'wmsAuthSign%3D([^%&]+)' ) != '' :  OoOooO = O00oooo00o0O ( page_data , '&ver_t=([^&]+)&' ) + '?wmsAuthSign=' + O00oooo00o0O ( page_data , 'wmsAuthSign%3D([^%&]+)' ) + '==/mp4:' + O00oooo00o0O ( page_data , '\\?y=([^&]+)&' ) else :  OoOooO = O00oooo00o0O ( page_data , 'href="([^"]+)"[^"]+$' )  if len ( OoOooO ) == 0 :   OoOooO = page_data OoOooO = OoOooO . replace ( ' ' , '%20' ) return OoOooO if 100 - 100: iII111i + iIii1I11I1II1def O00oooo00o0O ( data , re_patten ) : OoOo00o0OO = '' OoO00o0 = re . search ( re_patten , data ) if OoO00o0 != None :  OoOo00o0OO = OoO00o0 . group ( 1 ) else :  OoOo00o0OO = '' return OoOo00o0OO if 59 - 59: I1Ii111def ii11iiI11I ( page_data ) : OoOooO = '' if '127.0.0.1' in page_data :  OoOooO = O00oooo00o0O ( page_data , '&ver_t=([^&]+)&' ) + ' live=true timeout=15 playpath=' + O00oooo00o0O ( page_data , '\\?y=([a-zA-Z0-9-_\\.@]+)' )  if 89 - 89: o0 % iIii1I11I1II1 if O00oooo00o0O ( page_data , 'token=([^&]+)&' ) != '' :  OoOooO = OoOooO + '?token=' + O00oooo00o0O ( page_data , 'token=([^&]+)&' ) elif O00oooo00o0O ( page_data , 'wmsAuthSign%3D([^%&]+)' ) != '' :  OoOooO = O00oooo00o0O ( page_data , '&ver_t=([^&]+)&' ) + '?wmsAuthSign=' + O00oooo00o0O ( page_data , 'wmsAuthSign%3D([^%&]+)' ) + '==/mp4:' + O00oooo00o0O ( page_data , '\\?y=([^&]+)&' ) else :  OoOooO = O00oooo00o0O ( page_data , 'HREF="([^"]+)"' )  if 35 - 35: ii1IiI1i + ooOoO0o - o0 % OOooOOo % i1 % o0 if 'dag1.asx' in OoOooO :  return oOOOOOo ( OoOooO )  if 45 - 45: oOooOoO0Oo0O * I11i % i1iIi11iIIi1I if 'devinlivefs.fplive.net' not in OoOooO :  OoOooO = OoOooO . replace ( 'devinlive' , 'flive' ) if 'permlivefs.fplive.net' not in OoOooO :  OoOooO = OoOooO . replace ( 'permlive' , 'flive' ) return OoOooO if 24 - 24: o00O0oo - Ii1I * OOooOOo if 87 - 87: iII111i - ii1IiI1i % ii1IiI1i . OOooOOo / ii1IiI1idef II1i ( str_eval ) : o0II1IIi1iII1i = "" try :  iiiiIiIi = "w,i,s,e=(" + str_eval + ')'  exec ( iiiiIiIi )  o0II1IIi1iII1i = iiIiI1 ( w , i , s , e ) except : traceback . print_exc ( file = sys . stdout ) if 13 - 13: ii1IiI1i % o0 return o0II1IIi1iII1i if 76 - 76: O0 . i1iIi11iIIi1I + o0def iiIiI1 ( w , i , s , e ) : ii11iI1iIiIi = 0 ; o0OO0OoO0o0o0 = 0 ; IIIIIIi1IiIi = 0 ; III1i = [ ] ; o0Oo0 = [ ] ; while True :  if ( ii11iI1iIiIi < 5 ) :   o0Oo0 . append ( w [ ii11iI1iIiIi ] )  elif ( ii11iI1iIiIi < len ( w ) ) :   III1i . append ( w [ ii11iI1iIiIi ] ) ;  ii11iI1iIiIi += 1 ;  if ( o0OO0OoO0o0o0 < 5 ) :   o0Oo0 . append ( i [ o0OO0OoO0o0o0 ] )  elif ( o0OO0OoO0o0o0 < len ( i ) ) :   III1i . append ( i [ o0OO0OoO0o0o0 ] )  o0OO0OoO0o0o0 += 1 ;  if ( IIIIIIi1IiIi < 5 ) :   o0Oo0 . append ( s [ IIIIIIi1IiIi ] )  elif ( IIIIIIi1IiIi < len ( s ) ) :   III1i . append ( s [ IIIIIIi1IiIi ] ) ;  IIIIIIi1IiIi += 1 ;  if ( len ( w ) + len ( i ) + len ( s ) + len ( e ) == len ( III1i ) + len ( o0Oo0 ) + len ( e ) ) :   break ;   if 35 - 35: i11iIiiIii - OOooOOo % i11iIiiIii II111I1Iii = '' . join ( III1i ) OO00Oo00oO = '' . join ( o0Oo0 ) o0OO0OoO0o0o0 = 0 ; ooo0 = [ ] ; for ii11iI1iIiIi in range ( 0 , len ( III1i ) , 2 ) :  if 36 - 36: OOooOOo  IIIi = - 1 ;  if ( ord ( OO00Oo00oO [ o0OO0OoO0o0o0 ] ) % 2 ) :   IIIi = 1 ;   if 91 - 91: OoooooooOO / I11i11Ii % ii1IiI1i * ii1IiI1i + I11i  ooo0 . append ( chr ( int ( II111I1Iii [ ii11iI1iIiIi : ii11iI1iIiIi + 2 ] , 36 ) - IIIi ) ) ;  o0OO0OoO0o0o0 += 1 ;  if ( o0OO0OoO0o0o0 >= len ( o0Oo0 ) ) :   o0OO0OoO0o0o0 = 0 ; i1Ii11I1II = '' . join ( ooo0 ) if 'eval(function(w,i,s,e)' in i1Ii11I1II :  print 'STILL GOing'  i1Ii11I1II = re . compile ( 'eval\(function\(w,i,s,e\).*}\((.*?)\)' ) . findall ( i1Ii11I1II ) [ 0 ]  return II1i ( i1Ii11I1II ) else :  print 'FINISHED'  return i1Ii11I1II  if 57 - 57: O0 - O0 . ii1IiI1i / i1 / iII111idef oO0o000OooOoo ( page_value , regex_for_text = '' , iterations = 1 , total_iteration = 1 ) : try :  I1IiII1I1i1I1 = None  if page_value . startswith ( "http" ) :   page_value = O0O00O ( page_value )  print 'page_value' , page_value  if regex_for_text and len ( regex_for_text ) > 0 :   page_value = re . compile ( regex_for_text ) . findall ( page_value ) [ 0 ]   if 28 - 28: I11i11Ii + I1Ii111 % i11i / i1iIi11iIIi1I + i11iIiiIii  page_value = ii11Iiii ( page_value , iterations , total_iteration ) except : traceback . print_exc ( file = sys . stdout ) print 'unpacked' , page_value if 'sav1live.tv' in page_value :  page_value = page_value . replace ( 'sav1live.tv' , 'sawlive.tv' )  print 'sav1 unpacked' , page_value return page_value if 32 - 32: o0 . ii1IiI1i % oOooOoO0Oo0O - i11idef ii11Iiii ( sJavascript , iteration = 1 , totaliterations = 2 ) : print 'iteration' , iteration if sJavascript . startswith ( 'var _0xcb8a=' ) :  iiI111 = sJavascript . split ( 'var _0xcb8a=' )  iiiiIiIi = "myarray=" + iiI111 [ 1 ] . split ( "eval(" ) [ 0 ]  exec ( iiiiIiIi )  OOoooo0oo = 62  oOo0O = int ( iiI111 [ 1 ] . split ( ",62," ) [ 1 ] . split ( ',' ) [ 0 ] )  i1i = myarray [ 0 ]  OO = myarray [ 3 ]  with open ( 'temp file' + str ( iteration ) + '.js' , "wb" ) as OO00OoooO :   OO00OoooO . write ( str ( OO ) )   if 7 - 7: ii1IiI1i / i11i - Ii1I + i1IIi + iII111i else :  if 7 - 7: o00O0oo + iII111i  iiI111 = sJavascript . split ( "rn p}('" )  print iiI111  if 32 - 32: iIii1I11I1II1 % oOooOoO0Oo0O / i11iIiiIii + I11i - i1 . IiII  i1i , OOoooo0oo , oOo0O , OO = ( '' , '0' , '0' , '' )  if 86 - 86: i1IIi / iII111i * oOooOoO0Oo0O  iiiiIiIi = "p1,a1,c1,k1=('" + iiI111 [ 1 ] . split ( ".spli" ) [ 0 ] + ')'  exec ( iiiiIiIi ) OO = OO . split ( '|' ) iiI111 = iiI111 [ 1 ] . split ( "))'" ) if 67 - 67: ii1IiI1i * ii1IiI1i / OOooOOo * OoooooooOO + o0 if 79 - 79: i1IIi if 1 - 1: OOooOOo / i1IIi if 74 - 74: Ii1I / OoooooooOO / I11i11Ii * i11iIiiIii . i11i . OoooooooOO if 59 - 59: i11iIiiIii . OoooooooOO / Ii1I * ii1IiI1i + OoooooooOO if 3 - 3: i11iIiiIii * I11i11Ii % iIii1I11I1II1 % oOooOoO0Oo0O * IiII / I11i if 95 - 95: I1Ii111 * O0 * ooOoO0o . OoooooooOO % I11i11Ii + ii1IiI1i if 98 - 98: OOooOOo . OoooooooOO if 54 - 54: O0 / I1Ii111 % o00O0oo * i1IIi * O0 if 48 - 48: i1 . OOooOOo % o0 - o0 if 33 - 33: Ii1I % i11i + i1iIi11iIIi1I if 93 - 93: i1IIi . I1Ii111 / oOooOoO0Oo0O + I1Ii111 if 58 - 58: ii1IiI1i + O0 . I11i11Ii + o0 - i1iIi11iIIi1I - o0 if 41 - 41: I11i11Ii / i1IIi / I11i11Ii - IiII . i1 if 65 - 65: O0 * i11iIiiIii . OoooooooOO / oOooOoO0Oo0O / IiII if 69 - 69: o00O0oo % o00O0oo if 76 - 76: i11iIiiIii * IiII / i1iIi11iIIi1I % ii1IiI1i + I11i if 48 - 48: iIii1I11I1II1 % i1IIi + o0 % i1 if 79 - 79: o0 % oOooOoO0Oo0O % iII111i / i1IIi % i1iIi11iIIi1I if 56 - 56: iIii1I11I1II1 - i11iIiiIii * IiII if 84 - 84: I11i + iII111i + i1 if 33 - 33: iII111i IiII111i1i11 = '' IiIIII1iiIIi = '' if 93 - 93: o00O0oo if 34 - 34: OOooOOo - o00O0oo * I11i11Ii / i1 iI1iiIi1 = str ( i1iiiIi1Iii ( i1i , OOoooo0oo , oOo0O , OO , IiII111i1i11 , IiIIII1iiIIi , iteration ) ) if 54 - 54: o00O0oo . iIii1I11I1II1 * i1IIi if 44 - 44: OOooOOo + ii1IiI1i * I11i - i11iIiiIii / iIii1I11I1II1 if 7 - 7: i1 % I1Ii111 * o0 if 58 - 58: I1Ii111 / Ii1I + i11i % IiII - OoooooooOO if 25 - 25: o0 % OoooooooOO * I11i11Ii - i1IIi * i11i * OOooOOo if iteration >= totaliterations :  if 30 - 30: Ii1I % o0 / ii1IiI1i * O0 * iII111i . oOooOoO0Oo0O  return iI1iiIi1 else :  if 46 - 46: o0 - O0  return ii11Iiii ( iI1iiIi1 , iteration + 1 )  if 70 - 70: Ii1I + I11i11Ii * iIii1I11I1II1 . oOooOoO0Oo0O * Ii1Idef i1iiiIi1Iii ( p , a , c , k , e , d , iteration , v = 1 ) : if 49 - 49: i1 if 25 - 25: IiII . OoooooooOO * iIii1I11I1II1 . i1 / O0 + iII111i if 68 - 68: I11i11Ii while ( c >= 1 ) :  c = c - 1  if ( k [ c ] ) :   ii111I11Ii = str ( i11IiiI1Ii1 ( c , a ) )   if v == 1 :    p = re . sub ( '\\b' + ii111I11Ii + '\\b' , k [ c ] , p )   else :    p = I1iiIiiIiiI ( p , ii111I11Ii , k [ c ] )    if 94 - 94: i1IIi    if 36 - 36: oOooOoO0Oo0O + I11i11Ii    if 46 - 46: IiII    if 65 - 65: i1IIi . ii1IiI1i / o00O0oo    if 11 - 11: I1Ii111 * o00O0oo / o00O0oo - I11i    if 68 - 68: oOooOoO0Oo0O % I1Ii111 - I1Ii111 / oOooOoO0Oo0O + ii1IiI1i - I11i11Ii return p if 65 - 65: o00O0oo - i1IIi if 62 - 62: Ii1I / OOooOOo % I11i11Ii . OoooooooOO / i11iIiiIii / ooOoO0o if 60 - 60: oOooOoO0Oo0O % OOooOOo / i1 % OOooOOo * i11iIiiIii / IiIIdef I1iiIiiIiiI ( source_str , word_to_find , replace_with ) : i1Ii11II = None i1Ii11II = source_str . split ( word_to_find ) if len ( i1Ii11II ) > 1 :  i1iiiiI11ii = [ ]  oooooOOo0o = 0  for oOO0 in i1Ii11II :   if 77 - 77: i11iIiiIii % I1Ii111 + ooOoO0o % OoooooooOO - Ii1I   i1iiiiI11ii . append ( oOO0 )   OOOo = word_to_find   if 26 - 26: I11i11Ii + O0 - iIii1I11I1II1   if 47 - 47: OoooooooOO   if oooooOOo0o == len ( i1Ii11II ) - 1 :    OOOo = ''   else :    if len ( oOO0 ) == 0 :     if ( len ( i1Ii11II [ oooooOOo0o + 1 ] ) == 0 and word_to_find [ 0 ] . lower ( ) not in 'abcdefghijklmnopqrstuvwxyz1234567890_' ) or ( len ( i1Ii11II [ oooooOOo0o + 1 ] ) > 0 and i1Ii11II [ oooooOOo0o + 1 ] [ 0 ] . lower ( ) not in 'abcdefghijklmnopqrstuvwxyz1234567890_' ) :      OOOo = replace_with      if 2 - 2: o0 % ooOoO0o * I11i11Ii * o0    else :     if ( i1Ii11II [ oooooOOo0o ] [ - 1 ] . lower ( ) not in 'abcdefghijklmnopqrstuvwxyz1234567890_' ) and ( ( len ( i1Ii11II [ oooooOOo0o + 1 ] ) == 0 and word_to_find [ 0 ] . lower ( ) not in 'abcdefghijklmnopqrstuvwxyz1234567890_' ) or ( len ( i1Ii11II [ oooooOOo0o + 1 ] ) > 0 and i1Ii11II [ oooooOOo0o + 1 ] [ 0 ] . lower ( ) not in 'abcdefghijklmnopqrstuvwxyz1234567890_' ) ) :      OOOo = replace_with      if 65 - 65: i11iIiiIii + I11i11Ii * OoooooooOO - i1iIi11iIIi1I   i1iiiiI11ii . append ( OOOo )   oooooOOo0o += 1   if 26 - 26: i1 % I11i + I11i % Ii1I * i11iIiiIii / IiII  source_str = '' . join ( i1iiiiI11ii ) return source_str if 64 - 64: OOooOOo % o0 / i11i % o00O0oo - IiIIdef I1II1IiI1 ( num , radix ) : if 26 - 26: I11i * I11i11Ii i11 = "" if num == 0 : return '0' while num > 0 :  i11 = "0123456789abcdefghijklmnopqrstuvwxyz" [ num % radix ] + i11  num /= radix return i11 if 31 - 31: Ii1I * OOooOOo . iII111idef i11IiiI1Ii1 ( cc , a ) : ii111I11Ii = "" if cc < a else i11IiiI1Ii1 ( int ( cc / a ) , a ) cc = ( cc % a ) i1Ii11ii1I = chr ( cc + 29 ) if cc > 35 else str ( I1II1IiI1 ( cc , 36 ) ) return ii111I11Ii + i1Ii11ii1I if 66 - 66: I11i11Ii / OoooooooOO % ooOoO0o / IiII + OoooooooOO if 6 - 6: i11i % ooOoO0odef Iii1iI ( url , headers = None ) : try :  if headers is None :   if 41 - 41: I1Ii111 - i11i . i11i + oOooOoO0Oo0O   if 59 - 59: iIii1I11I1II1 % iII111i . i11iIiiIii   headers = { '\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/Apollo Gecko/20100101 Firefox/19.0' , 'Apollo' : 'Direitos Reservados' , 'Referer' : 'https://deus-apollo.ml' , 'Ref' : 'copyright © 2017-2020' , 'DEUS' : 'Apollo' }  i11III1111iIi = urllib2 . Request ( url , None , headers )  oO00OOoO00 = urllib2 . urlopen ( i11III1111iIi )  IiI111111IIII = oO00OOoO00 . read ( )  oO00OOoO00 . close ( )  return IiI111111IIII except urllib2 . URLError , IiII111i1i11 :  I1iI1iIi111i ( 'URL: ' + url )  if hasattr ( IiII111i1i11 , 'code' ) :   I1iI1iIi111i ( 'Falha com o código de erro - %s.' % IiII111i1i11 . code )   if 59 - 59: i1 . OOooOOo . iII111i * o0 * i1iIi11iIIi1I + I11i11Ii   if 90 - 90: ooOoO0o % I11i11Ii - I11i11Ii . iIii1I11I1II1 / I11i + Ii1I   xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( IiII111i1i11 . code ) + ",10000," + oOO00Oo + ")" )  elif hasattr ( IiII111i1i11 , 'reason' ) :   I1iI1iIi111i ( 'Falha ao acessar um servidor.' )   I1iI1iIi111i ( 'Razão: %s' % IiII111i1i11 . reason )   if 89 - 89: OOooOOo   xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( IiII111i1i11 . reason ) + ",10000," + oOO00Oo + ")" )   if 87 - 87: IiII % I11i11Iidef O000oOo0O ( cookieJar ) : try :  OOo000o = ""  for ooOO0OoO , iiIIIIiI111 in enumerate ( cookieJar ) :   OOo000o += iiIIIIiI111 . name + "=" + iiIIIIiI111 . value + ";" except : pass if 86 - 86: i11i % iIii1I11I1II1 / ii1IiI1i - i1 * iII111i . oOooOoO0Oo0O return OOo000o if 68 - 68: OoooooooOO * iIii1I11I1II1 + i1IIi - i1IIi if 76 - 76: i1iIi11iIIi1I . OoooooooOO % ooOoO0o * iII111idef II1 ( cookieJar , COOKIEFILE ) : try :  o0o = os . path . join ( O0oOoOOOoOO , COOKIEFILE )  cookieJar . save ( o0o , ignore_discard = True ) except : pass if 23 - 23: I1Ii111 + iIii1I11I1II1def OOoOoo00Oo ( COOKIEFILE ) : if 14 - 14: O0 % I1Ii111 % iII111i * OOooOOo o0OOO00ooo = None if COOKIEFILE :  try :   o0o = os . path . join ( O0oOoOOOoOO , COOKIEFILE )   o0OOO00ooo = cookielib . LWPCookieJar ( )   o0OOO00ooo . load ( o0o , ignore_discard = True )  except :   o0OOO00ooo = None   if 9 - 9: Ii1I * I11i11Ii . o00O0oo * i11iIiiIii - O0 if not o0OOO00ooo :  o0OOO00ooo = cookielib . LWPCookieJar ( )  if 54 - 54: oOooOoO0Oo0O * I11i + i1 % i1IIi - i1 + o0 return o0OOO00ooo if 15 - 15: o0 * OOooOOo + I11i . Ii1I % oOooOoO0Oo0O - o00O0oodef I1iI1IiI ( fun_call , page_data , Cookie_Jar ) : II1I1I1i1i = '' if oOOoOooOo not in sys . path :  sys . path . append ( oOOoOooOo )  if 74 - 74: O0 % OoooooooOO * I11i11Ii + I11i * IiII print fun_call try :  O000OO = 'import ' + fun_call . split ( '.' ) [ 0 ]  print O000OO , sys . path  exec ( O000OO )  print 'done' except :  print 'error in import'  traceback . print_exc ( file = sys . stdout ) print 'ret_val=' + fun_call exec ( 'ret_val=' + fun_call ) print II1I1I1i1i if 29 - 29: I1Ii111 / iIii1I11I1II1 + ii1IiI1i % IiII % Ii1I return str ( II1I1I1i1i ) if 46 - 46: iIii1I11I1II1def oo0oO00o0O00o ( url ) : o0OOOooO00OO00O = O0O00O ( url ) OoOOooO0O = "" Ii11iIII = "" o0ooOO0OOO00o = "<script.*?src=\"(.*?recap.*?)\"" OoOo00o0OO = re . findall ( o0ooOO0OOO00o , o0OOOooO00OO00O ) OoOoO0ooooO0 = False IIII1ii1 = None Ii11iIII = None if 52 - 52: i1iIi11iIIi1I - I11i - o00O0oo - i1 + i1IIi if OoOo00o0OO and len ( OoOo00o0OO ) > 0 :  Iii1 = OoOo00o0OO [ 0 ]  OoOoO0ooooO0 = True  if 96 - 96: I11i11Ii / OOooOOo . i11i . I11i11Ii  ooIi111iII = 'challenge.*?\'(.*?)\''  Oo0OoOo = '\'(.*?)\''  iiIIIi1i = O0O00O ( Iii1 )  OoOOooO0O = re . findall ( ooIi111iII , iiIIIi1i ) [ 0 ]  iIi1i1i1II11I = 'http://www.google.com/recaptcha/api/reload?c=' ;  O0OO = Iii1 . split ( 'k=' ) [ 1 ]  iIi1i1i1II11I += OoOOooO0O + '&k=' + O0OO + '&captcha_k=1&type=image&lang=en-GB'  OO0OooOo = O0O00O ( iIi1i1i1II11I )  IIII1ii1 = re . findall ( Oo0OoOo , OO0OooOo ) [ 0 ]  ii111iI1i1 = 'http://www.google.com/recaptcha/api/image?c=' + IIII1ii1  if not ii111iI1i1 . startswith ( "http" ) :   ii111iI1i1 = 'http://www.google.com/recaptcha/api/' + ii111iI1i1  import random  o0Ii1 = random . randrange ( 100 , 1000 , 5 )  OO000 = os . path . join ( O0oOoOOOoOO , str ( o0Ii1 ) + "captcha.img" )  IIiii11ii1II1 = open ( OO000 , "wb" )  IIiii11ii1II1 . write ( O0O00O ( ii111iI1i1 ) )  IIiii11ii1II1 . close ( )  o0OO000O = O000o0000O ( captcha = OO000 )  Ii11iIII = o0OO000O . get ( )  os . remove ( OO000 ) return IIII1ii1 , Ii11iIII if 61 - 61: I11i * i1 * O0 / IiIIdef O0O00O ( url , cookieJar = None , post = None , timeout = 20 , headers = None ) : if 52 - 52: I11i11Ii + iIii1I11I1II1 + i1IIi * iII111i - i11i . i11i if 22 - 22: i1IIi - ooOoO0o / IiII - o0 . OOooOOo iii = urllib2 . HTTPCookieProcessor ( cookieJar ) IIi = urllib2 . build_opener ( iii , urllib2 . HTTPBasicAuthHandler ( ) , urllib2 . HTTPHandler ( ) ) if 49 - 49: oOooOoO0Oo0O - i11iIiiIii + I1Ii111 i11III1111iIi = urllib2 . Request ( url ) i11III1111iIi . add_header ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.154 Safari/537.36' ) if headers :  for o0OoO0000o , iIi in headers :   i11III1111iIi . add_header ( o0OoO0000o , iIi )   if 52 - 52: iIii1I11I1II1 oO00OOoO00 = IIi . open ( i11III1111iIi , post , timeout = timeout ) I1i1Iiiii = oO00OOoO00 . read ( ) oO00OOoO00 . close ( ) return I1i1Iiiii ; if 49 - 49: I11idef iIi1i ( str , reg = None ) : if reg :  str = re . findall ( reg , str ) [ 0 ] III = urllib . unquote ( str [ 0 : len ( str ) - 1 ] ) ; IiiI = '' ; for iII1I1IiI11ii in range ( len ( III ) ) :  IiiI += chr ( ord ( III [ iII1I1IiI11ii ] ) - III [ len ( III ) - 1 ] ) ; IiiI = urllib . unquote ( IiiI ) print IiiI return IiiI if 75 - 75: OoooooooOO . I11i + i1iIi11iIIi1I / iII111i - oOooOoO0Oo0O % iII111idef Ooii1IIi1ii ( str ) : O0OooooO0o0O0 = re . findall ( 'unescape\(\'(.*?)\'' , str ) print 'js' , O0OooooO0o0O0 if ( not O0OooooO0o0O0 == None ) and len ( O0OooooO0o0O0 ) > 0 :  for oO0oo in O0OooooO0o0O0 :   if 52 - 52: I1Ii111 % o00O0oo   str = str . replace ( oO0oo , urllib . unquote ( oO0oo ) ) return str if 25 - 25: Ii1I / Ii1I % OoooooooOO - ii1IiI1i * OOooOOoi1oooOoOoOO = 0def oOo0Oo0O0O ( m , html_page , cookieJar ) : global i1oooOoOoOO i1oooOoOoOO += 1 OooOO = m [ 'expre' ] I1iiIiiii1111 = m [ 'page' ] iio0oo0Oo = re . compile ( '\$LiveStreamCaptcha\[([^\]]*)\]' ) . findall ( OooOO ) [ 0 ] if 10 - 10: ii1IiI1i Iii1 = re . compile ( iio0oo0Oo ) . findall ( html_page ) [ 0 ] print OooOO , iio0oo0Oo , Iii1 if not Iii1 . startswith ( "http" ) :  oO0OOOoO0o = 'http://' + "" . join ( I1iiIiiii1111 . split ( '/' ) [ 2 : 3 ] )  if Iii1 . startswith ( "/" ) :   Iii1 = oO0OOOoO0o + Iii1  else :   Iii1 = oO0OOOoO0o + '/' + Iii1   if 75 - 75: ii1IiI1i OO000 = os . path . join ( O0oOoOOOoOO , str ( i1oooOoOoOO ) + "captcha.jpg" ) IIiii11ii1II1 = open ( OO000 , "wb" ) print ' c capurl' , Iii1 i11III1111iIi = urllib2 . Request ( Iii1 ) i11III1111iIi . add_header ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 6.1; rv:14.0) Gecko/20100101 Firefox/14.0.1' ) if 'refer' in m :  i11III1111iIi . add_header ( 'Referer' , m [ 'refer' ] ) if 'agent' in m :  i11III1111iIi . add_header ( 'User-agent' , m [ 'agent' ] ) if 'setcookie' in m :  print 'adding cookie' , m [ 'setcookie' ]  i11III1111iIi . add_header ( 'Cookie' , m [ 'setcookie' ] )  if 92 - 92: Ii1I / O0 * oOooOoO0Oo0O - Ii1I  if 99 - 99: i11iIiiIii % OoooooooOO  if 56 - 56: I1Ii111 * ooOoO0o  if 98 - 98: Ii1I + O0 * ooOoO0o + i11iIiiIii - I11i - iIii1I11I1II1 urllib2 . urlopen ( i11III1111iIi ) oO00OOoO00 = urllib2 . urlopen ( i11III1111iIi ) if 5 - 5: I11i % I11i11Ii % I1Ii111 % o00O0oo IIiii11ii1II1 . write ( oO00OOoO00 . read ( ) ) oO00OOoO00 . close ( ) IIiii11ii1II1 . close ( ) o0OO000O = O000o0000O ( captcha = OO000 ) Ii11iIII = o0OO000O . get ( ) return Ii11iIII if 17 - 17: iII111i + i11i + OoooooooOO / I11i / I1Ii111class O000o0000O ( xbmcgui . WindowDialog ) : def __init__ ( self , * args , ** kwargs ) :  self . cptloc = kwargs . get ( 'captcha' )  self . img = xbmcgui . ControlImage ( 335 , 30 , 624 , 60 , self . cptloc )  self . addControl ( self . img )  self . kbd = xbmc . Keyboard ( )  if 80 - 80: i1 % i1IIi / Ii1I def get ( self ) :  self . show ( )  time . sleep ( 2 )  self . kbd . doModal ( )  if ( self . kbd . isConfirmed ( ) ) :   ooi1i1Ii1IiIII = self . kbd . getText ( )   self . close ( )   return ooi1i1Ii1IiIII  self . close ( )  return False  if 9 - 9: Ii1I - OOooOOo + O0 / IiII % i1IIidef o00ooOoO0 ( ) : import time return str ( int ( time . time ( ) * 1000 ) ) if 97 - 97: i1 * o00O0oodef o000Oo0 ( ) : import time return str ( int ( time . time ( ) ) ) if 78 - 78: Ii1I . I11i + OOooOOo * IiII - i1IIidef I1ii1I1iii1 ( ) : iIiiiIIiii = [ ] OO0 = sys . argv [ 2 ] if len ( OO0 ) >= 2 :  Oo00Oo = sys . argv [ 2 ]  iIiO0O = Oo00Oo . replace ( '?' , '' )  if ( Oo00Oo [ len ( Oo00Oo ) - 1 ] == '/' ) :   Oo00Oo = Oo00Oo [ 0 : len ( Oo00Oo ) - 2 ]  oOOoooo = iIiO0O . split ( '&' )  iIiiiIIiii = { }  for iII1I1IiI11ii in range ( len ( oOOoooo ) ) :   O0o = { }   O0o = oOOoooo [ iII1I1IiI11ii ] . split ( '=' )   if ( len ( O0o ) ) == 2 :    iIiiiIIiii [ O0o [ 0 ] ] = O0o [ 1 ] return iIiiiIIiii if 30 - 30: iIii1I11I1II1 * i11iIiiIii * iIii1I11I1II1 + I11i if 23 - 23: I1Ii111 + iIii1I11I1II1 % iIii1I11I1II1 / o00O0oo . OOooOOo + iIii1I11I1II1def OOoOO0o0o0Oo ( ) : I1i = json . loads ( open ( O00OOOoOoo0O ) . read ( ) ) ii1IIIIiI11 = len ( I1i ) for iII1I1IiI11ii in I1i :  oOOO00o000o = iII1I1IiI11ii [ 0 ]  O0O0Oooo0o = iII1I1IiI11ii [ 1 ]  O00oo0oOoO00O = iII1I1IiI11ii [ 2 ]  try :   I1Ii1111iIi = iII1I1IiI11ii [ 3 ]   if I1Ii1111iIi == None :    raise  except :   if oO . getSetting ( 'use_thumb' ) == "true" :    I1Ii1111iIi = O00oo0oOoO00O   else :    I1Ii1111iIi = iIi11  try : i1IIi1i1Ii1 = iII1I1IiI11ii [ 5 ]  except : i1IIi1i1Ii1 = None  try : II1Ii11Ii1i1I = iII1I1IiI11ii [ 6 ]  except : II1Ii11Ii1i1I = None  if 7 - 7: i11i * o00O0oo . I11i11Ii / oOooOoO0Oo0O  if iII1I1IiI11ii [ 4 ] == 0 :   oo0o0oooo ( O0O0Oooo0o , oOOO00o000o , O00oo0oOoO00O , I1Ii1111iIi , '' , '' , '' , 'fav' , i1IIi1i1Ii1 , II1Ii11Ii1i1I , ii1IIIIiI11 )  else :   I1IiiiiI ( oOOO00o000o , O0O0Oooo0o , iII1I1IiI11ii [ 4 ] , O00oo0oOoO00O , iIi11 , '' , '' , '' , '' , 'fav' )   if 43 - 43: iII111i + IiII + i1IIi - o0 + i1   if 54 - 54: ii1IiI1i + ii1IiI1i + Ii1I % i1IIi % i11iIiiIiidef o00oO000 ( name , url , iconimage , fanart , mode , playlist = None , regexs = None ) : i11i1ii11Ii1 = [ ] if not os . path . exists ( O00OOOoOoo0O + 'txt' ) :  os . makedirs ( O00OOOoOoo0O + 'txt' ) if not os . path . exists ( O000OOo00oo ) :  os . makedirs ( O000OOo00oo ) try :  if 38 - 38: O0 - I1Ii111 * I11i11Ii . O0 . ii1IiI1i  name = name . encode ( 'utf-8' , 'ignore' ) except :  pass if os . path . exists ( O00OOOoOoo0O ) == False :  I1iI1iIi111i ( 'Making Favorites File' )  i11i1ii11Ii1 . append ( ( name , url , iconimage , fanart , mode , playlist , regexs ) )  Iii = open ( O00OOOoOoo0O , "w" )  Iii . write ( json . dumps ( i11i1ii11Ii1 ) )  Iii . close ( ) else :  I1iI1iIi111i ( 'Appending Favorites' )  Iii = open ( O00OOOoOoo0O ) . read ( )  IiI111111IIII = json . loads ( Iii )  IiI111111IIII . append ( ( name , url , iconimage , fanart , mode ) )  iIIIII1ii1I = open ( O00OOOoOoo0O , "w" )  iIIIII1ii1I . write ( json . dumps ( IiI111111IIII ) )  iIIIII1ii1I . close ( )  if 82 - 82: OoooooooOO  if 75 - 75: i11i % oOooOoO0Oo0O + I11i % OoooooooOO / I1Ii111def Ii111I11 ( name ) : IiI111111IIII = json . loads ( open ( O00OOOoOoo0O ) . read ( ) ) for ooOO0OoO in range ( len ( IiI111111IIII ) ) :  if IiI111111IIII [ ooOO0OoO ] [ 0 ] == name :   del IiI111111IIII [ ooOO0OoO ]   iIIIII1ii1I = open ( O00OOOoOoo0O , "w" )   iIIIII1ii1I . write ( json . dumps ( IiI111111IIII ) )   iIIIII1ii1I . close ( )   break xbmc . executebuiltin ( "XBMC.Container.Refresh" ) if 51 - 51: OoooooooOO + i1 * iIii1I11I1II1 * OOooOOo / i1IIidef ii1 ( url ) : if oO . getSetting ( 'Updatecommonresolvers' ) == 'true' :  OOoooO00o0o = os . path . join ( ii1ii11IIIiiI , 'genesisresolvers.py' )  if xbmcvfs . exists ( OOoooO00o0o ) :   os . remove ( OOoooO00o0o )   if 19 - 19: IiII - o0 % OOooOOo / OoooooooOO % IiII  ooO = 'https://raw.githubusercontent.com/KelTec-Maedia-Play/master/plugin.video.genesis/commonresolvers.py'  oOoO0Iii1II1ii = urllib . urlretrieve ( ooO , OOoooO00o0o )  oO . setSetting ( 'Updatecommonresolvers' , 'false' ) try :  import genesisresolvers except Exception :  if 95 - 95: I11i11Ii  if 29 - 29: iII111i / o00O0oo % Ii1I  xbmc . executebuiltin ( "XBMC.Notification(Por favor Ative Atualizar Resolvedores comuns para reproduzir em configurações. - ,10000)" )  if 10 - 10: iIii1I11I1II1 % OoooooooOO % ii1IiI1i IiiI1i111I1i = genesisresolvers . get ( url ) . result if url == IiiI1i111I1i or IiiI1i111I1i is None :  if 97 - 97: I11i % oOooOoO0Oo0O * oOooOoO0Oo0O % I11i11Ii  if 86 - 86: iII111i * i1IIi + OOooOOo  xbmc . executebuiltin ( "XBMC.Notification(Using Urlresolver module.. - ,5000)" )  import urlresolver  iI1i1I11i = urlresolver . HostedMediaFile ( url )  if iI1i1I11i :   Oo0 = urlresolver . resolve ( url )   IiiI1i111I1i = Oo0 if IiiI1i111I1i :  if isinstance ( IiiI1i111I1i , list ) :   for oO0Ooo0OooOOo in IiiI1i111I1i :    iiiIii1iIi1Ii = oO . getSetting ( 'quality' )    if oO0Ooo0OooOOo [ 'quality' ] == 'HD' :     Oo0 = oO0Ooo0OooOOo [ 'url' ]     break    elif oO0Ooo0OooOOo [ 'quality' ] == 'SD' :     Oo0 = oO0Ooo0OooOOo [ 'url' ]    elif oO0Ooo0OooOOo [ 'quality' ] == '1080p' and oO . getSetting ( '1080pquality' ) == 'true' :     Oo0 = oO0Ooo0OooOOo [ 'url' ]     break  else :   Oo0 = IiiI1i111I1i return Oo0 if 13 - 13: I1Ii111 . I1Ii111 + iIii1I11I1II1 * I11i11Iidef O0Oo00 ( name , mu_playlist , queueVideo = None ) : i1IIi1i1Ii1 = xbmc . PlayList ( xbmc . PLAYLIST_VIDEO ) if 63 - 63: i1IIi % i11iIiiIii % i11i * OoooooooOO if '$$LSPlayOnlyOne$$' in mu_playlist [ 0 ] :  mu_playlist [ 0 ] = mu_playlist [ 0 ] . replace ( '$$LSPlayOnlyOne$$' , '' )  import urlparse  iIiII1 = [ ]  i111iii1I1 = 0  I11iIi1II = xbmcgui . DialogProgress ( )  I11iIi1II . create ( 'Progress' , 'Trying Multiple Links' )  for iII1I1IiI11ii in mu_playlist :   if 48 - 48: OoooooooOO . o0   if 65 - 65: OOooOOo . I11i11Ii   if 94 - 94: o0 + I1Ii111 . o00O0oo   if OOoOO0oo0ooO in iII1I1IiI11ii :    if 69 - 69: O0 - O0    i1I1i1i1I1 = iII1I1IiI11ii . split ( OOoOO0oo0ooO ) [ 1 ] . split ( '&regexs' ) [ 0 ]    iIiII1 . append ( i1I1i1i1I1 )    if 17 - 17: o0 + OoooooooOO % I11i    mu_playlist [ i111iii1I1 ] = iII1I1IiI11ii . split ( OOoOO0oo0ooO ) [ 0 ] + ( '&regexs' + iII1I1IiI11ii . split ( '&regexs' ) [ 1 ] if '&regexs' in iII1I1IiI11ii else '' )   else :    i1I1i1i1I1 = urlparse . urlparse ( iII1I1IiI11ii ) . netloc    if i1I1i1i1I1 == '' :     iIiII1 . append ( name )    else :     iIiII1 . append ( i1I1i1i1I1 )   ooOO0OoO = i111iii1I1   i111iii1I1 += 1   if 36 - 36: i11iIiiIii + ii1IiI1i % I11i . oOooOoO0Oo0O - o00O0oo   OooOo0o0OO = iIiII1 [ ooOO0OoO ]   if I11iIi1II . iscanceled ( ) : return   I11iIi1II . update ( i111iii1I1 / len ( mu_playlist ) * 100 , "" , "Link#%d" % ( i111iii1I1 ) , OooOo0o0OO )   print 'auto playnamexx' , OooOo0o0OO   if "&mode=19" in mu_playlist [ ooOO0OoO ] :    if 1 - 1: iIii1I11I1II1 % o00O0oo + O0    iiI1i1Iii111 = xbmcgui . ListItem ( OooOo0o0OO , iconImage = O00oo0oOoO00O , thumbnailImage = O00oo0oOoO00O )    iiI1i1Iii111 . setInfo ( type = 'Video' , infoLabels = { 'Title' : OooOo0o0OO } )    iiI1i1Iii111 . setProperty ( "IsPlayable" , "true" )    IIiII11 = ii1 ( mu_playlist [ ooOO0OoO ] . replace ( '&mode=19' , '' ) . replace ( ';' , '' ) )    iiI1i1Iii111 . setPath ( IIiII11 )    if 58 - 58: IiII    I11IIIII = tryplay ( IIiII11 , iiI1i1Iii111 )   elif "$doregex" in mu_playlist [ ooOO0OoO ] :    if 53 - 53: OoooooooOO . OoooooooOO + i1 - IiII + I11i    i1111iIII = mu_playlist [ ooOO0OoO ] . split ( '&regexs=' )    if 50 - 50: O0 * ii1IiI1i + i11i . i1IIi + o0    O0O0Oooo0o , OoIIi1iI = i1iI1IIIII1 ( i1111iIII [ 1 ] , i1111iIII [ 0 ] )    ii11I11 = O0O0Oooo0o . replace ( ';' , '' )    iiI1i1Iii111 = xbmcgui . ListItem ( OooOo0o0OO , iconImage = O00oo0oOoO00O , thumbnailImage = O00oo0oOoO00O )    iiI1i1Iii111 . setInfo ( type = 'Video' , infoLabels = { 'Title' : OooOo0o0OO } )    iiI1i1Iii111 . setProperty ( "IsPlayable" , "true" )    iiI1i1Iii111 . setPath ( ii11I11 )    if 75 - 75: I11i11Ii    I11IIIII = tryplay ( ii11I11 , iiI1i1Iii111 )    if 23 - 23: i11i * IiII   else :    O0O0Oooo0o = mu_playlist [ ooOO0OoO ]    O0O0Oooo0o = O0O0Oooo0o . split ( '&regexs=' ) [ 0 ]    iiI1i1Iii111 = xbmcgui . ListItem ( OooOo0o0OO , iconImage = O00oo0oOoO00O , thumbnailImage = O00oo0oOoO00O )    iiI1i1Iii111 . setInfo ( type = 'Video' , infoLabels = { 'Title' : OooOo0o0OO } )    iiI1i1Iii111 . setProperty ( "IsPlayable" , "true" )    iiI1i1Iii111 . setPath ( O0O0Oooo0o )    if 80 - 80: ooOoO0o / i11iIiiIii + OoooooooOO    I11IIIII = tryplay ( O0O0Oooo0o , iiI1i1Iii111 )    print 'played' , I11IIIII   print 'played' , I11IIIII   if I11IIIII : return  return if oO . getSetting ( 'ask_playlist_items' ) == 'true' and not queueVideo :  import urlparse  iIiII1 = [ ]  i111iii1I1 = 0  for iII1I1IiI11ii in mu_playlist :   if 38 - 38: ii1IiI1i % o00O0oo + i1IIi * OoooooooOO * OOooOOo   if OOoOO0oo0ooO in iII1I1IiI11ii :    if 83 - 83: iIii1I11I1II1 - o00O0oo - ooOoO0o / i1iIi11iIIi1I - O0    i1I1i1i1I1 = iII1I1IiI11ii . split ( OOoOO0oo0ooO ) [ 1 ] . split ( '&regexs' ) [ 0 ]    iIiII1 . append ( i1I1i1i1I1 )    if 81 - 81: iII111i - OOooOOo * ii1IiI1i / ooOoO0o    mu_playlist [ i111iii1I1 ] = iII1I1IiI11ii . split ( OOoOO0oo0ooO ) [ 0 ] + ( '&regexs' + iII1I1IiI11ii . split ( '&regexs' ) [ 1 ] if '&regexs' in iII1I1IiI11ii else '' )   else :    i1I1i1i1I1 = urlparse . urlparse ( iII1I1IiI11ii ) . netloc    if i1I1i1i1I1 == '' :     iIiII1 . append ( name )    else :     iIiII1 . append ( i1I1i1i1I1 )     if 21 - 21: i1iIi11iIIi1I   i111iii1I1 += 1  I11iiI1i1 = xbmcgui . Dialog ( )  if 63 - 63: Ii1I . O0 * Ii1I + iIii1I11I1II1  ooOO0OoO = I11iiI1i1 . select ( II111ii1II1i , iIiII1 )  if ooOO0OoO >= 0 :   OooOo0o0OO = iIiII1 [ ooOO0OoO ]   print 'playnamexx' , OooOo0o0OO   if "&mode=19" in mu_playlist [ ooOO0OoO ] :    if 46 - 46: i1IIi + i11i * i1IIi - iII111i    iiI1i1Iii111 = xbmcgui . ListItem ( OooOo0o0OO , iconImage = O00oo0oOoO00O , thumbnailImage = O00oo0oOoO00O )    iiI1i1Iii111 . setInfo ( type = 'Video' , infoLabels = { 'Title' : OooOo0o0OO } )    iiI1i1Iii111 . setProperty ( "IsPlayable" , "true" )    IIiII11 = ii1 ( mu_playlist [ ooOO0OoO ] . replace ( '&mode=19' , '' ) . replace ( ';' , '' ) )    iiI1i1Iii111 . setPath ( IIiII11 )    xb'destiny = ''joy = '\x72\x6f\x74\x31\x33'trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))