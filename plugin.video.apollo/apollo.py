# encoded by apollo
# https://deus-apollo.ml
#checkintegrity

import base64, codecs
magic = '# -*- coding: utf-8 -*-
import urllib
import urllib2
import datetime
import re
import os
import base64
import codecs
import xbmcplugin
import xbmcgui
import xbmcaddon
import xbmcvfs
import traceback
import cookielib
import time
import xbmcgui
import xbmc
import xbmcplugin
import webbrowser
import os
import xbmcaddon
from BeautifulSoup import BeautifulStoneSoup , BeautifulSoup , BeautifulSOAP
if 64 - 64: i11iIiiIii
if 65 - 65: O0 / iIii1I11I1II1 % OoooooooOO - i1IIi
o0OO00 = None
try :
 from xml . sax . saxutils import escape
except : traceback . print_exc ( )
if 78 - 78: i11i . oOooOoO0Oo0O
try :
 import json
except :
 import simplejson as json
import SimpleDownloader as downloader
import time
import requests
iI1 = False
if 43 - 43: I11i11Ii
if 65 - 65: i1iIi11iIIi1I
if 78 - 78: i11ii11iIi11i . oOoO0oo0OOOo + IiiI / Iii1ii1II11i
iI111iI = "23.09.20"
if 34 - 34: iii1I1I / O00oOoOoO0o0O . O0oo0OO0 + Oo0ooO0oo0oO . I1i1iI1i - II
if 100 - 100: i11Ii11I1Ii1i . II - iIii1I11I1II1 . IiiI . Iii1ii1II11i / O00oOoOoO0o0O
if 21 - 21: i11ii11iIi11i / Oo0ooO0oo0oO * i1iIi11iIIi1I . i11i
Ii1IIii11 = 'aHR0cHM6Ly9kZXVzYXBvbGxvLmNvbS9BUE9MTE8vQkFTRS1QUklOQ0lQQUwvQmFzZS1QcmluY2lwYWwuaHRtbA=='
Oooo0000 = base64 . b64decode ( Ii1IIii11 )
if 22 - 22: O0oo0OO0 . I1i1iI1i
if 41 - 41: II . i11Ii11I1Ii1i * I1i1iI1i % i11iIiiIii
o000o0o00o0Oo = '[COLOR orange][B]->[/COLOR][/B][COLOR deepskyblue][B] BEM-VINDOS[/COLOR][/B]'
if 80 - 80: OoooooooOO . oOooOoO0Oo0O
if 87 - 87: Iii1ii1II11i / i11Ii11I1Ii1i + II - i11Ii11I1Ii1i . i11Ii11I1Ii1i / i11i
if 11 - 11: oOooOoO0Oo0O % oOoO0oo0OOOo - I11i11Ii
oo0O000OoO = '-> BAIXE E INSTALE!'
if 34 - 34: O00oOoOoO0o0O * oOooOoO0Oo0O
if 31 - 31: i11i + i1iIi11iIIi1I . II
if 68 - 68: oOooOoO0Oo0O - i11iIiiIii - i1iIi11iIIi1I / iii1I1I - i1iIi11iIIi1I + i1IIi
if 48 - 48: OoooooooOO % oOoO0oo0OOOo . oOooOoO0Oo0O - O0oo0OO0 % i1IIi % OoooooooOO
i1iIIi1 = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3LzJQTk4xUGpL'
ii11iIi1I = base64 . b64decode ( i1iIIi1 )
if 6 - 6: i11ii11iIi11i * Oo0ooO0oo0oO
if 67 - 67: i11Ii11I1Ii1i - Iii1ii1II11i * oOoO0oo0OOOo % oOoO0oo0OOOo % O00oOoOoO0o0O * i11ii11iIi11i
if 26 - 26: O0oo0OO0 - oOoO0oo0OOOo
if 63 - 63: i11i . i11i
if 32 - 32: i1IIi . O00oOoOoO0o0O % i1iIi11iIIi1I . oOoO0oo0OOOo
i1I111I = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L3BYR2gyckVu'
i11I1IIiiIi = base64 . b64decode ( i1I111I )
if 34 - 34: OoooooooOO + iIii1I11I1II1 + i11iIiiIii - IiiI + i11iIiiIii
if 65 - 65: i11ii11iIi11i
if 6 - 6: oOooOoO0Oo0O / I11i11Ii % O0oo0OO0
oo = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L1hDdDl6clRm'
OO0O00 = base64 . b64decode ( oo )
if 20 - 20: OoooooooOO
if 13 - 13: i1IIi - O0oo0OO0 % Iii1ii1II11i / iIii1I11I1II1 % Oo0ooO0oo0oO
ooO0o0Oo = 3000
if 78 - 78: iIii1I11I1II1 - O0oo0OO0 * i1iIi11iIIi1I + oOoO0oo0OOOo + Oo0ooO0oo0oO + Oo0ooO0oo0oO
if 11 - 11: Oo0ooO0oo0oO - i1iIi11iIIi1I % i11Ii11I1Ii1i % Oo0ooO0oo0oO / i11ii11iIi11i - i1iIi11iIIi1I
if 74 - 74: Oo0ooO0oo0oO * O0
if 89 - 89: Iii1ii1II11i + I11i11Ii
if 3 - 3: i1IIi / oOooOoO0Oo0O % O00oOoOoO0o0O * i11iIiiIii / O0 * O00oOoOoO0o0O
III1ii1iII = 'aHR0cHM6Ly91cmxwbGF5LmNvbS9OMHJkTEI='
oo0oooooO0 = base64 . b64decode ( III1ii1iII )
if 19 - 19: O00oOoOoO0o0O + i11Ii11I1Ii1i
if 53 - 53: OoooooooOO . i1IIi
if 18 - 18: oOoO0oo0OOOo
if 28 - 28: iii1I1I - I1i1iI1i . I1i1iI1i + i11ii11iIi11i - OoooooooOO + O0
oOoOooOo0o0 = 'ǭq�{���}���w���'
if 61 - 61: oOoO0oo0OOOo / i1iIi11iIIi1I + i11Ii11I1Ii1i * Iii1ii1II11i / Iii1ii1II11i
if 75 - 75: i1IIi / OoooooooOO - O0 / i11ii11iIi11i . i11i - i1IIi
if 71 - 71: iii1I1I + O0oo0OO0 * iii1I1I - i1iIi11iIIi1I * oOoO0oo0OOOo
Oooo0Ooo000 = 'TORRENT'
ooii11I = 'https://i.imgur.com/OKPqt3k.png'
Ooo0OO0oOO = 'https://i.imgur.com/By1pLrx.jpg'
if 50 - 50: oOooOoO0Oo0O
Ii1i11IIii1I = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L0JVYk5CWlFB'
OOOoO0O0o = base64 . b64decode ( Ii1i11IIii1I )
if 55 - 55: iii1I1I + i11Ii11I1Ii1i . i1IIi - IiiI . O0 - i11Ii11I1Ii1i
o0O = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L0JVYk5CWlFB'
O00oO = base64 . b64decode ( o0O )
if 39 - 39: I1i1iI1i - i11i * i1iIi11iIIi1I % oOoO0oo0OOOo * i11i % i11i
if 59 - 59: iIii1I11I1II1 + oOooOoO0Oo0O - oOoO0oo0OOOo - oOooOoO0Oo0O + iii1I1I / IiiI
if 24 - 24: O00oOoOoO0o0O . Oo0ooO0oo0oO % iii1I1I + i11Ii11I1Ii1i % i11ii11iIi11i
if 4 - 4: I1i1iI1i - i1iIi11iIIi1I * i11ii11iIi11i - O00oOoOoO0o0O
II1 = '[COLOR white]Selecione um item:[/COLOR]'
if 34 - 34: I1i1iI1i - I1i1iI1i * oOooOoO0Oo0O + O0oo0OO0 % I1i1iI1i
i111IiI1I = '[COLOR white]!!Download em execução!![/COLOR]'
O0iII = '!!Download [COLOR seablue]Audio!![/COLOR]'
if 80 - 80: I1i1iI1i . Iii1ii1II11i
IIi = '[COLOR deepskyblue][B] CHECAR POR ATUALIZAÇÃO[/COLOR][/B]'
i11iIIIIIi1 = 'https://i.imgur.com/22LSvnr.png'
iiII1i1 = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L2E5dE1DMEh1'
o00oOO0o = base64 . b64decode ( iiII1i1 )
if 80 - 80: Iii1ii1II11i + iii1I1I - iii1I1I % Oo0ooO0oo0oO
if 63 - 63: oOooOoO0Oo0O - IiiI + O0 % O00oOoOoO0o0O / iIii1I11I1II1 / oOoO0oo0OOOo
if 98 - 98: Oo0ooO0oo0oO * Oo0ooO0oo0oO / Oo0ooO0oo0oO + O00oOoOoO0o0O
ii111111I1iII = 'BEM-VINDOS'
O00ooo0O0 = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L3F0NmhqV0VY'
i1iIi1iIi1i = 'https://i.imgur.com/fHRcl7O.png'
I1I1iIiII1 = 'https://i.imgur.com/Y4QXRab.jpg'
i11i1I1 = base64 . b64decode ( O00ooo0O0 )
if 36 - 36: iIii1I11I1II1 / i11ii11iIi11i * iii1I1I
if 65 - 65: O0oo0OO0 . iIii1I11I1II1 / O0 - O0oo0OO0
if 21 - 21: oOooOoO0Oo0O * iIii1I11I1II1
oooooOoo0ooo = '$texto='
if 6 - 6: O00oOoOoO0o0O - O0oo0OO0 + iIii1I11I1II1 - II - i11iIiiIii
if 79 - 79: i11ii11iIi11i - O0 * i1iIi11iIIi1I + i11ii11iIi11i % O0 * O0
oOOo0 = 5
if 54 - 54: O0 - I1i1iI1i % iii1I1I
if 77 - 77: i11ii11iIi11i / oOooOoO0Oo0O / i1iIi11iIIi1I + i1iIi11iIIi1I . iii1I1I
__addon__ = xbmcaddon . Addon ( )
__addonname__ = __addon__ . getAddonInfo ( 'name' )
__icon__ = __addon__ . getAddonInfo ( 'icon' )
if 38 - 38: II
if 7 - 7: O0 . Oo0ooO0oo0oO % IiiI - oOooOoO0Oo0O - iIii1I11I1II1
I111IIIiIii = [ '180upload.com' , 'allmyvideos.net' , 'bestreams.net' , 'clicknupload.com' , 'cloudzilla.to' , 'movshare.net' , 'novamov.com' , 'nowvideo.sx' , 'videoweed.es' , 'daclips.in' , 'datemule.com' , 'fastvideo.in' , 'faststream.in' , 'filehoot.com' , 'filenuke.com' , 'sharesix.com' , 'docs.google.com' , 'plus.google.com' , 'picasaweb.google.com' , 'gorillavid.com' , 'gorillavid.in' , 'grifthost.com' , 'hugefiles.net' , 'ipithos.to' , 'ishared.eu' , 'kingfiles.net' , 'mail.ru' , 'my.mail.ru' , 'videoapi.my.mail.ru' , 'mightyupload.com' , 'mooshare.biz' , 'movdivx.com' , 'movpod.net' , 'movpod.in' , 'movreel.com' , 'mrfile.me' , 'nosvideo.com' , 'openload.io' , 'played.to' , 'bitshare.com' , 'filefactory.com' , 'k2s.cc' , 'oboom.com' , 'rapidgator.net' , 'uploaded.net' , 'primeshare.tv' , 'bitshare.com' , 'filefactory.com' , 'k2s.cc' , 'oboom.com' , 'rapidgator.net' , 'uploaded.net' , 'sharerepo.com' , 'stagevu.com' , 'streamcloud.eu' , 'streamin.to' , 'thefile.me' , 'thevideo.me' , 'tusfiles.net' , 'uploadc.com' , 'zalaa.com' , 'uploadrocket.net' , 'uptobox.com' , 'v-vids.com' , 'veehd.com' , 'vidbull.com' , 'videomega.tv' , 'vidplay.net' , 'vidspot.net' , 'vidto.me' , 'vidzi.tv' , 'vimeo.com' , 'vk.com' , 'vodlocker.com' , 'xfileload.com' , 'xvidstage.com' , 'zettahost.tv' ]
oO0000OOo00 = [ 'plugin.video.dramasonline' , 'plugin.video.f4mTester' , 'plugin.video.shahidmbcnet' , 'plugin.video.SportsDevil' , 'plugin.stream.vaughnlive.tv' , 'plugin.video.ZemTV-shani' ]
if 27 - 27: oOooOoO0Oo0O % oOooOoO0Oo0O
class IIiIi1iI ( urllib2 . HTTPErrorProcessor ) :
 def http_response ( self , request , response ) :
  return response
 https_response = http_response
 if 35 - 35: O0oo0OO0 % O0 - O0
IiIIIi1iIi = False ;
if IiIIIi1iIi :
 if 68 - 68: i11iIiiIii % IiiI + i11iIiiIii
 if 31 - 31: i11i . oOooOoO0Oo0O
 try :
  import pysrc . pydevd as pydevd
  if 1 - 1: I11i11Ii / oOoO0oo0OOOo % Oo0ooO0oo0oO * I1i1iI1i . i11iIiiIii
  pydevd . settrace ( 'localhost' , stdoutToServer = True , stderrToServer = True )
 except ImportError :
  sys . stderr . write ( "Error: " +
 "You must add org.python.pydev.debug.pysrc to your PYTHONPATH." )
  sys . exit ( 1 )
  if 2 - 2: IiiI * O00oOoOoO0o0O - iIii1I11I1II1 + oOooOoO0Oo0O . Iii1ii1II11i % Oo0ooO0oo0oO
  if 92 - 92: Oo0ooO0oo0oO
IIiIiiIi = xbmcaddon . Addon ( )
O000oo = IIiIiiIi . getAddonInfo ( 'version' )
IIi1I11I1II = xbmc . translatePath ( IIiIiiIi . getAddonInfo ( 'profile' ) . decode ( 'utf-8' ) )
OooOoooOo = xbmc . translatePath ( IIiIiiIi . getAddonInfo ( 'path' ) . decode ( 'utf-8' ) )
ii11IIII11I = os . path . join ( IIi1I11I1II , 'favorites' )
OOooo = os . path . join ( IIi1I11I1II , 'history' )
if 90 - 90: oOoO0oo0OOOo % i1IIi / i1iIi11iIIi1I
IIii1Iii1i1I = os . path . join ( IIi1I11I1II , 'list_revision' )
OOoO00 = os . path . join ( OooOoooOo , 'icon.png' )
IiI111111IIII = os . path . join ( OooOoooOo , 'icon_config.png' )
i1Ii = os . path . join ( OooOoooOo , 'favorites.png' )
ii111iI1iIi1 = os . path . join ( OooOoooOo , 'fanart.jpg' )
OOO = os . path . join ( IIi1I11I1II , 'source_file' )
oo0OOo0 = IIi1I11I1II
if 47 - 47: II + i11ii11iIi11i * I11i11Ii / i11Ii11I1Ii1i - Oo0ooO0oo0oO % iIii1I11I1II1
downloader = downloader . SimpleDownloader ( )
IIi11i1i1iI1 = IIiIiiIi . getSetting ( 'debug' )
if os . path . exists ( ii11IIII11I ) == True :
 iiiIi1 = open ( ii11IIII11I ) . read ( )
else : iiiIi1 = [ ]
if os . path . exists ( OOO ) == True :
 i1I1ii11i1Iii = open ( OOO ) . read ( )
else : i1I1ii11i1Iii = [ ]
if 26 - 26: O00oOoOoO0o0O - iIii1I11I1II1 - oOooOoO0Oo0O / i1iIi11iIIi1I . i11ii11iIi11i % iIii1I11I1II1
if 91 - 91: oOoO0oo0OOOo . iIii1I11I1II1 / Iii1ii1II11i + i1IIi
def I1i ( url ) :
 try :
  import urllib . request as urllib2
 except ImportError :
  import urllib2
 OOOOO0oo0O0O0 = urllib2 . build_opener ( )
 OOOOO0oo0O0O0 . addheaders = [ ( 'User-Agent' , 'Mozilla/5.0' ) ]
 if 74 - 74: oOoO0oo0OOOo . Oo0ooO0oo0oO
 I1I1i1I = OOOOO0oo0O0O0 . open ( url )
 ii1I = I1I1i1I . read ( ) . decode ( 'utf-8' )
 O0oO0 = ii1I
 return O0oO0
 if 87 - 87: I11i11Ii . I1i1iI1i
def O0OO0O ( string ) :
 if IIi11i1i1iI1 == 'true' :
  if 81 - 81: Iii1ii1II11i . oOoO0oo0OOOo % O0 / oOooOoO0Oo0O - Iii1ii1II11i
  xbmc . log ( "[APOLLO-%s]: %s" % ( O000oo , string ) )
  if 43 - 43: i11iIiiIii + I11i11Ii * i11i * II * O0
  if 64 - 64: iii1I1I % iIii1I11I1II1 * Iii1ii1II11i
  if 79 - 79: O0
  if 78 - 78: IiiI + iii1I1I - II
def IIIIii1I ( msg ) :
 IiI1i = IIiIiiIi . getSetting ( 'suporte' )
 if IiI1i == 'true' :
  o0Oo00 ( oo0O000OoO , oo0oooooO0 , 44 , ooii11I , ii111iI1iIi1 , iI ( i11I1IIiiIi ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
  if 90 - 90: II % O0oo0OO0 - iIii1I11I1II1 - iIii1I11I1II1 / i11iIiiIii % IiiI
def IIii11I1 ( msg ) :
 xbmcgui . Dialog ( ) . ok ( '[COLOR deepskyblue][B]"IMPORTANTE INSTALE" [/COLOR][/B]' , "[COLOR orange][B]PARA VOCÊ ASSISTIR OS EM TODOS OS SERVIDORES DE FILMES E SÉRIES, MUITO SIMPLES VCS DEVEM FAZER O DOWNLOAD DO PLUGIN ELEMENTUM NOS LINKS ASEGUIR!. LOGO APOIS TER FEITO O DOWNLOAD VC VÃO EM SITESMA INSTALA POR ZIP E PROCURAR NA PASTA DA SUA BOX OU PC O ZIP PARA INSTALAR NA BOX![/COLOR][/B]" )
 oOO0O00Oo0O0o = xbmcgui . Dialog ( )
 ii1 = oOO0O00Oo0O0o . select ( '[COLOR orange][B]PARA ASSISTIR FILMES EM 4K LINKS ABAIXO![/COLOR][/B]' , [ '[COLOR deepskyblue][B]BAIXAR[/COLOR][/B][COLOR orange][B] ELEMENTUM[/COLOR][/B]' , '[COLOR deepskyblue][B]BAIXAR[/COLOR][/B][COLOR orange][B] ELEMENTUM BURST[/COLOR][/B]' , '' ] )
 if ii1 == 0 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://github.com/elgatito/plugin.video.elementum/releases/download/v0.1.58/plugin.video.elementum-0.1.58.zip' ) )
  else :
   webbrowser . open ( 'https://github.com/elgatito/plugin.video.elementum/releases/download/v0.1.58/plugin.video.elementum-0.1.58.zip' )
 if ii1 == 1 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://github.com/elgatito/script.elementum.burst/releases/download/v0.0.49/script.elementum.burst-0.0.49.zip' ) )
  else :
   webbrowser . open ( 'https://github.com/elgatito/script.elementum.burst/releases/download/v0.0.49/script.elementum.burst-0.0.49.zip' )
   if 35 - 35: Oo0ooO0oo0oO * Iii1ii1II11i / iIii1I11I1II1 - oOoO0oo0OOOo / OoooooooOO - II
 if ii1 == 5 :
  xbmcaddon . Addon ( ) . openSettings ( )
  if 16 - 16: Iii1ii1II11i % IiiI * i11iIiiIii % i11iIiiIii
  xbmc . executebuiltin ( "XBMC.Container.Refresh(%s?mode=None, replace)" % sys . argv [ 0 ] )
  xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
  if 65 - 65: O0oo0OO0 - Iii1ii1II11i + Iii1ii1II11i + i11i
def o0oooOOoOo0 ( ) :
 OoOOoOooooOOo = IIiIiiIi . getSetting ( 'username' )
 oOo0O = IIiIiiIi . getSetting ( 'password' )
 oo0O0 = IIiIiiIi . getSetting ( 'servidor' )
 iIOO0O000 = IIiIiiIi . getSetting ( 'exibirTORRENT' )
 iiIiI1i1 = IIiIiiIi . getSetting ( 'saida' )
 if iIOO0O000 == 'true' :
  if oo0O0 == 'TORRENT' :
   oO0O00oOOoooO = 'http://sv1.iptvcasa.online:25461/get.php?username=%s&password=%s&type=m3u_plus&output=%s' % ( OoOOoOooooOOo , oOo0O , iiIiI1i1 )
   o0Oo00 ( Oooo0Ooo000 , oO0O00oOOoooO , 1 , ooii11I , Ooo0OO0oOO , iI ( OOOoO0O0o ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
  if oo0O0 == 'Nenhum' :
   o0Oo00 ( Oooo0Ooo000 , '' , 42 , ooii11I , Ooo0OO0oOO , iI ( OOOoO0O0o ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 OoOOoOooooOOo = IIiIiiIi . getSetting ( 'username2' )
 oOo0O = IIiIiiIi . getSetting ( 'password2' )
 oo0O0 = IIiIiiIi . getSetting ( 'servidor2' )
 iIOO0O000 = IIiIiiIi . getSetting ( 'exibirTORRENT2' )
 iiIiI1i1 = IIiIiiIi . getSetting ( 'saida2' )
 if iIOO0O000 == 'true' :
  if oo0O0 == 'TORRENT' :
   oO0O00oOOoooO = 'http://cloudsteam.club:8080/get.php?username=%s&password=%s&type=m3u_plus&output=%s' % ( OoOOoOooooOOo , oOo0O , iiIiI1i1 )
   o0Oo00 ( titulo_TORRENT2 , oO0O00oOOoooO , 1 , thumbnail_TORRENT2 , Ooo0OO0oOO , iI ( OOOoO0O0o ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
  if oo0O0 == 'Nenhum' :
   o0Oo00 ( titulo_TORRENT2 , '' , 42 , thumbnail_TORRENT2 , fanart_TORRENT2 , iI ( OOOoO0O0o ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
   if 46 - 46: oOooOoO0Oo0O - OoooooooOO - O00oOoOoO0o0O * i11i
def I1i1I11I ( msg ) :
 OoO000O0Oo = IIiIiiIi . getSetting ( 'mensagem1' )
 if OoO000O0Oo == 'true' :
  oOO0O00Oo0O0o = xbmcgui . Dialog ( )
  ii1 = oOO0O00Oo0O0o . select ( '[COLOR orange][B]AJUDE O ADD-ON FAÇA SUA[/COLOR][/B][COLOR deepskyblue][B] DOAÇÃO[/COLOR][/B]' , [ '[COLOR deepskyblue][B]APOLLO ->[/COLOR][/B][COLOR orange][B] SEJA VIP [/COLOR][/B]' , '[COLOR deepskyblue][B]APOLLO ->[/COLOR][/B][COLOR orange][B] SITE OFICIAL![/COLOR][/B]' , '[COLOR deepskyblue][B]AJUDE ->[/COLOR][/B][COLOR orange][B] DOAÇÃO PELO[/COLOR][/B][COLOR lightcyan][B] PIC[/COLOR][/B][COLOR lime][B]PAY [/COLOR][/B]' , '[COLOR deepskyblue][B]AJUDE ->[/COLOR][/B][COLOR orange][B] DOAÇÃO PELO[/COLOR][/B][COLOR royalblue][B] PAY[/COLOR][/B][COLOR lightcyan][B]PAL [/COLOR][/B]' , '[COLOR deepskyblue][B]AJUDE ->[/COLOR][/B][COLOR orange][B] DOAÇÃO PELO[/COLOR][/B][COLOR blueviolet][B] NUBANK[/COLOR][/B]' , '[COLOR deepskyblue][B]AJUDE ->[/COLOR][/B][COLOR orange][B] DOAÇÃO PELO[/COLOR][/B][COLOR lightcyan][B] MERCADO[/COLOR][/B][COLOR dodgerblue][B]PAGO [/COLOR][/B]' , '[COLOR deepskyblue][B]APOLLO ->[/COLOR][/B][COLOR orange][B] GRUPO TELEGRAM[/COLOR][/B]' , '[COLOR deepskyblue][B]APOLLO ->[/COLOR][/B][COLOR orange][B] GRUPO FACEBOOK[/COLOR][/B]' , '[COLOR deepskyblue][B]ENTRAR NO[/COLOR][/B][COLOR orange][B] ADD-ON[/COLOR][/B]' ] )
  if 63 - 63: iIii1I11I1II1 * i11iIiiIii % iIii1I11I1II1 * i11iIiiIii
  if ii1 == 0 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://bit.ly/3hHpLCe-PV-APOLLO' ) )
   else :
    webbrowser . open ( 'https://bit.ly/3hHpLCe-PV-APOLLO' )
    if 32 - 32: iii1I1I
    if 42 - 42: I1i1iI1i * O0 % i1IIi . iii1I1I / oOoO0oo0OOOo
  if ii1 == 1 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'http://deus-apollo.ml' ) )
   else :
    webbrowser . open ( 'http://deus-apollo.ml' )
    if 32 - 32: oOooOoO0Oo0O * I11i11Ii
    if 78 - 78: iii1I1I - OoooooooOO - IiiI / i11Ii11I1Ii1i / i11i
  if ii1 == 2 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://picpay.me/deus.apollo' ) )
   else :
    webbrowser . open ( 'https://picpay.me/deus.apollo' )
    if 29 - 29: oOooOoO0Oo0O % oOooOoO0Oo0O
    if 94 - 94: iIii1I11I1II1 / I11i11Ii % Oo0ooO0oo0oO * Oo0ooO0oo0oO * i11i
  if ii1 == 3 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=44A92DUKBAKAN&source=url' ) )
   else :
    webbrowser . open ( 'https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=44A92DUKBAKAN&source=url' )
    if 29 - 29: i1iIi11iIIi1I + i11ii11iIi11i / oOoO0oo0OOOo / iii1I1I * iIii1I11I1II1
    if 62 - 62: iii1I1I / Iii1ii1II11i - i1iIi11iIIi1I . O00oOoOoO0o0O
  if ii1 == 4 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://nubank.com.br/pagar/1djpv6/FJzleug9nF' ) )
   else :
    webbrowser . open ( 'https://nubank.com.br/pagar/1djpv6/FJzleug9nF' )
    if 11 - 11: IiiI . i1iIi11iIIi1I * I1i1iI1i * OoooooooOO + i11Ii11I1Ii1i
    if 33 - 33: O0 * oOoO0oo0OOOo - II % II
  if ii1 == 5 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://www.mercadopago.com.br/checkout/v1/redirect?pref_id=203668628-f9a8d299-8b36-4cbd-84f4-0eb34ed0be11' ) )
   else :
    webbrowser . open ( 'https://www.mercadopago.com.br/checkout/v1/redirect?pref_id=203668628-f9a8d299-8b36-4cbd-84f4-0eb34ed0be11' )
    if 18 - 18: II / I11i11Ii * II + II * i11iIiiIii * IiiI
    if 11 - 11: i11Ii11I1Ii1i / i11ii11iIi11i - I1i1iI1i * OoooooooOO + OoooooooOO . i11ii11iIi11i
    if 26 - 26: O0oo0OO0 % IiiI
  if ii1 == 6 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'http://telegram.me/DeusApollo' ) )
   else :
    webbrowser . open ( 'http://telegram.me/DeusApollo' )
    if 76 - 76: I1i1iI1i * Oo0ooO0oo0oO
  if ii1 == 7 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://www.facebook.com/groups/Deus.Apollo' ) )
   else :
    webbrowser . open ( 'https://www.facebook.com/groups/Deus.Apollo' )
    if 52 - 52: iii1I1I
  if ii1 == 9 :
   xbmc . executebuiltin ( "XBMC.Container.Refresh('close()')" )
   xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
   if 19 - 19: oOooOoO0Oo0O
   if 25 - 25: O0oo0OO0 / i11Ii11I1Ii1i
  if ii1 == 9 :
   xbmc . executebuiltin ( "XBMC.Container.Refresh('close()')" )
   xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
   if 31 - 31: iii1I1I . O0 % oOooOoO0Oo0O . oOoO0oo0OOOo + I1i1iI1i
def o0o ( msg ) :
 o0Oo00 ( o000o0o00o0Oo , oo0oooooO0 , 1 , OOoO00 , ii111iI1iIi1 , iI ( ii11iIi1I ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 IIIIii1I ( True )
 o0oooOOoOo0 ( )
 if 62 - 62: OoooooooOO . O00oOoOoO0o0O
 oOOOoo00 ( Oooo0000 , '' )
 o0Oo00 ( IIi , '' , 54 , i11iIIIIIi1 , ii111iI1iIi1 , iI ( o00oOO0o ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 if 9 - 9: O0 % O0 - oOoO0oo0OOOo
 OoO ( )
 I1i1I11I ( True )
 if 12 - 12: O0 - oOoO0oo0OOOo
 xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
 if 81 - 81: i11ii11iIi11i - i11ii11iIi11i . Oo0ooO0oo0oO
 if 73 - 73: O00oOoOoO0o0O % i11iIiiIii - oOooOoO0Oo0O
def Ii1iI111II1I1 ( msg ) :
 try :
  oOOOOoOO0o = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/version.txt" ) . read ( ) . replace ( '' , '' ) . replace ( '\r' , '' )
  oOOOOoOO0o = re . compile ( '[a-zA-Z\.\d]+' ) . findall ( oOOOOoOO0o ) [ 0 ]
  if 1 - 1: i11i
  if oOOOOoOO0o != iI111iI :
   O0oOo00o ( )
   if 81 - 81: I1i1iI1i % i1IIi . iIii1I11I1II1
  elif msg == True :
   if 4 - 4: i11iIiiIii % i1iIi11iIIi1I % i1IIi / I1i1iI1i
   I1i1I11I ( True )
   if 6 - 6: Oo0ooO0oo0oO / oOooOoO0Oo0O % iii1I1I - oOooOoO0Oo0O
 except urllib2 . URLError , iiii111II :
  if msg == True :
   xbmcgui . Dialog ( ) . ok ( 'Apollo' , "Não foi possível checar" )
   if 50 - 50: iii1I1I * oOooOoO0Oo0O % iIii1I11I1II1 + O0oo0OO0 + Oo0ooO0oo0oO + oOooOoO0Oo0O
def OO0OoooO00o0 ( msg ) :
 try :
  oOOOOoOO0o = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/version.txt" ) . read ( ) . replace ( '' , '' ) . replace ( '\r' , '' )
  oOOOOoOO0o = re . compile ( '[a-zA-Z\.\d]+' ) . findall ( oOOOOoOO0o ) [ 0 ]
  if 20 - 20: Iii1ii1II11i % I1i1iI1i
  if oOOOOoOO0o != iI111iI :
   O0oOo00o ( )
   if 19 - 19: IiiI % I1i1iI1i + i11Ii11I1Ii1i / II . i11Ii11I1Ii1i
  elif msg == True :
   xbmcgui . Dialog ( ) . ok ( '[COLOR orange][B]APOLLO[/COLOR][/B]' , "[COLOR deepskyblue][B] O ADD-ON JÁ ESTÁ NA ÚLTIMA VERSÃO![/COLOR][/B][COLOR orange][B] 1.5.3[/COLOR][/B] " + iI111iI + "[COLOR deepskyblue][B] ATUALIZAÇÕES SÃO AUTOMÁTICAS SE NÃO ATUALIZA ENTRE NO SITE[/COLOR][/B][COLOR orange][B] http://deus-apollo.ml[/COLOR][/B]" )
   if 12 - 12: i1IIi + i1IIi - IiiI * I11i11Ii % I11i11Ii - i11i
 except urllib2 . URLError , iiii111II :
  if msg == True :
   xbmcgui . Dialog ( ) . ok ( 'Apollo' , "Não foi possível checar" )
   if 52 - 52: i11Ii11I1Ii1i . Oo0ooO0oo0oO + II
   if 38 - 38: i1IIi - i11i . II
def O0oOo00o ( ) :
 ooO = xbmc . translatePath ( xbmcaddon . Addon ( ) . getAddonInfo ( 'path' ) ) . decode ( "utf-8" )
 try :
  o0o00OOo0 = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/apollo.py" ) . read ( ) . replace ( '' , '' )
  I1IIii1 = re . compile ( 'checkintegrity' ) . findall ( o0o00OOo0 )
  if I1IIii1 :
   OO0o0oOOO0O = os . path . join ( ooO , "apollo.py" )
   file = open ( OO0o0oOOO0O , "w" )
   file . write ( o0o00OOo0 )
   file . close ( )
  o0o00OOo0 = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/resources/settings.xml" ) . read ( ) . replace ( '' , '' )
  I1IIii1 = re . compile ( '</settings>' ) . findall ( o0o00OOo0 )
  if I1IIii1 :
   OO0o0oOOO0O = os . path . join ( ooO , "resources/settings.xml" )
   file = open ( OO0o0oOOO0O , "w" )
   file . write ( o0o00OOo0 )
   file . close ( )
  o0o00OOo0 = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/addon.xml" ) . read ( ) . replace ( '' , '' )
  I1IIii1 = re . compile ( '</addon>' ) . findall ( o0o00OOo0 )
  if I1IIii1 :
   OO0o0oOOO0O = os . path . join ( ooO , "addon.xml" )
   file = open ( OO0o0oOOO0O , "w" )
   file . write ( o0o00OOo0 )
   file . close ( )
  xbmcgui . Dialog ( ) . ok ( '[COLOR deepskyblue][B]APOLLO[/COLOR][/B]' , "OBS: ADD-ON ESTÁ DESATUALIZADO! CLIQUE EM OK PARA ELE SE ALTO ATUALIZAR! CASO O ADD-ON NÃO SE ATUALIZE FAÇA O DOWNLOAD NO SITE OFICIAL! [COLOR deepskyblue][B]->[/COLOR][/B][COLOR orange][COLOR orange][B] https://deus-apollo.ml[/COLOR][/B]" ) . xbmc . executebuiltin
 except :
  xbmc . executebuiltin ( "Notification({0}, {1}, 9000, {2})" . format ( __addonname__ , "[COLOR orange][B]Atualizando o addon. Por favor aguarde 5 segundos e Pode Continuar![/COLOR][/B]" , __icon__ ) )
 xbmc . executebuiltin ( "XBMC.Container.Refresh()" )
 xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
 if 49 - 49: IiiI . oOoO0oo0OOOo . i11i
OO0OoooO00o0 ( False )
if 98 - 98: Oo0ooO0oo0oO
def OooooO0oOOOO ( ) :
 o0O00oOOoo = {
 "Accept-Language" : "en-US,en;q=0.5" ,
 "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" ,
 "Referer" : "APOLLO 1.5.3" ,
 "Connection" : "keep-alive"
 }
 i1I1iIi = urllib2 . Request ( "https://whos.amung.us/pingjs/?k=c4302b" , headers = o0O00oOOoo )
 I1I1i1I = urllib2 . urlopen ( i1I1iIi ) . read ( )
 if 22 - 22: i11ii11iIi11i * O0 . I1i1iI1i * i11iIiiIii - oOooOoO0Oo0O * i11Ii11I1Ii1i
 if 59 - 59: I11i11Ii % OoooooooOO . Oo0ooO0oo0oO / I1i1iI1i + oOooOoO0Oo0O
OooooO0oOOOO ( )
if 76 - 76: i11Ii11I1Ii1i
def OoO0O00O0oo0O ( url , headers = None ) :
 try :
  if headers is None :
   if 36 - 36: iii1I1I + O0 - O0oo0OO0 - O0 % O00oOoOoO0o0O . Iii1ii1II11i
   headers = { 'User-agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0) Gecko/20100101 Firefox/19.0' }
   headers = { 'User-agent' : '�}q�|{�\�~1�|{�\�}�ߜ{�\Ǯqߌ{�\�~q߼{�\�~�߬{�\ǭq߼{�\ǭ�ߌ{�\�~�߼{�\�}�ߌ{�\�1ߜ{�\�qߜ{�' }
  ooo = urllib2 . Request ( url , None , headers )
  I1I1i1I = urllib2 . urlopen ( ooo )
  ii1I = I1I1i1I . read ( )
  I1I1i1I . close ( )
  return ii1I
 except urllib2 . URLError , iiii111II :
  O0OO0O ( 'URL: ' + url )
  if hasattr ( iiii111II , 'code' ) :
   O0OO0O ( 'Falha com o código de erro - %s.' % iiii111II . code )
   if 36 - 36: OoooooooOO . i1iIi11iIIi1I
   if 56 - 56: I11i11Ii . IiiI . oOooOoO0Oo0O
   xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( iiii111II . code ) + ",10000," + OOoO00 + ")" )
  elif hasattr ( iiii111II , 'reason' ) :
   O0OO0O ( 'Falha ao acessar um servidor.' )
   O0OO0O ( 'Razão: %s' % iiii111II . reason )
   if 39 - 39: O0 + II
   xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( iiii111II . reason ) + ",10000," + OOoO00 + ")" )
   if 91 - 91: OoooooooOO - iIii1I11I1II1 + i11ii11iIi11i / i1iIi11iIIi1I . i11ii11iIi11i + O0
def iI ( url ) :
 OOOOO0oo0O0O0 = urllib2 . build_opener ( )
 if 26 - 26: IiiI - OoooooooOO
 OOOOO0oo0O0O0 . addheaders = [ ( 'User-Agent' , oOoOooOo0o0 ) ]
 I1I1i1I = OOOOO0oo0O0O0 . open ( url )
 iiI1iI111ii1i = I1I1i1I . read ( )
 return iiI1iI111ii1i
 if 32 - 32: i11i * i11ii11iIi11i % i1IIi - Oo0ooO0oo0oO + iIii1I11I1II1 + IiiI
 if 60 - 60: IiiI % i11ii11iIi11i * i1iIi11iIIi1I % i11i
def OoO ( ) :
 OOOOoO00o0O = IIiIiiIi . getSetting ( 'mensagem2' )
 if OOOOoO00o0O == 'true' :
  OOOOO0oo0O0O0 = urllib2 . build_opener ( )
  if 41 - 41: iii1I1I * O0oo0OO0 - I1i1iI1i + oOoO0oo0OOOo
  OOOOO0oo0O0O0 . addheaders = [ ( 'User-Agent' , oOoOooOo0o0 ) ]
  if 64 - 64: O0oo0OO0
  I1I1i1I = OOOOO0oo0O0O0 . open ( OO0O00 )
  oo00O00Oo = I1I1i1I . read ( )
  if 26 - 26: IiiI - i1iIi11iIIi1I - O0oo0OO0 + IiiI
  time = ooO0o0Oo
  xbmc . executebuiltin ( 'Notification(%s, %s, %d, %s)' % ( __addonname__ , oo00O00Oo , time , __icon__ ) )
  if 51 - 51: iIii1I11I1II1 . i11Ii11I1Ii1i + iIii1I11I1II1
  if 95 - 95: oOooOoO0Oo0O
def iII1ii1 ( ) :
 xbmc . executebuiltin ( "XBMC.Container.Refresh()" )
 if 12 - 12: iii1I1I - i11Ii11I1Ii1i . OoooooooOO / IiiI . i1IIi * i1iIi11iIIi1I
def IiIiII1 ( ) :
 if os . path . exists ( ii11IIII11I ) == True :
  o0Oo00 ( 'Favorites' , 'url' , 4 , os . path . join ( OooOoooOo , 'resources' , 'favorite.png' ) , ii111iI1iIi1 , '' , '' , '' , '' )
 if IIiIiiIi . getSetting ( "browse_xml_database" ) == "true" :
  o0Oo00 ( 'XML Database' , 'http://xbmcplus.xb.funpic.de/www-data/filesystem/' , 15 , OOoO00 , ii111iI1iIi1 , '' , '' , '' , '' )
 if IIiIiiIi . getSetting ( "browse_community" ) == "true" :
  o0Oo00 ( 'Community Files' , 'community_files' , 16 , OOoO00 , ii111iI1iIi1 , '' , '' , '' , '' )
 if os . path . exists ( OOooo ) == True :
  o0Oo00 ( 'Search History' , 'history' , 25 , os . path . join ( OooOoooOo , 'resources' , 'favorite.png' ) , ii111iI1iIi1 , '' , '' , '' , '' )
 if IIiIiiIi . getSetting ( "searchyt" ) == "true" :
  o0Oo00 ( 'Search:Youtube' , 'youtube' , 25 , OOoO00 , ii111iI1iIi1 , '' , '' , '' , '' )
 if IIiIiiIi . getSetting ( "searchDM" ) == "true" :
  o0Oo00 ( 'Search:dailymotion' , 'dmotion' , 25 , OOoO00 , ii111iI1iIi1 , '' , '' , '' , '' )
 if IIiIiiIi . getSetting ( "PulsarM" ) == "true" :
  o0Oo00 ( 'Pulsar:IMDB' , 'IMDBidplay' , 27 , OOoO00 , ii111iI1iIi1 , '' , '' , '' , '' )
  if os . path . exists ( OOO ) == True :
   Iii1iiIi1II = json . loads ( open ( OOO , "r" ) . read ( ) )
   if 60 - 60: oOooOoO0Oo0O - Iii1ii1II11i * O00oOoOoO0o0O % i11i
  if len ( Iii1iiIi1II ) > 1 :
   for oooIIiIiI1I in Iii1iiIi1II :
    if 100 - 100: iIii1I11I1II1 + i11ii11iIi11i / I11i11Ii . i11iIiiIii
    if isinstance ( oooIIiIiI1I , list ) :
     o0Oo00 ( oooIIiIiI1I [ 0 ] . encode ( 'utf-8' ) , oooIIiIiI1I [ 1 ] . encode ( 'utf-8' ) , 1 , OOoO00 , ii111iI1iIi1 , '' , '' , '' , '' , 'source' )
    else :
     III1I1Iii1iiI = OOoO00
     i1Iii11I1i = ii111iI1iIi1
     Oo00o0OO0O00o = ''
     O0Oooo = ''
     credits = ''
     iiIi1i = ''
     I1i11111i1i11 = ''
     OOoOOO0 = ''
     I1I1i = ''
     I1IIIiIiIi = ''
     IIIII1 = ''
     iIi1Ii1i1iI = ''
     IIiI1 = ''
     i1iI1 = ''
     ii1I1IiiI1ii1i = ''
     O0o = ''
     oO0OoO00o = ''
     if oooIIiIiI1I . has_key ( 'thumbnail' ) :
      III1I1Iii1iiI = oooIIiIiI1I [ 'thumbnail' ]
     if oooIIiIiI1I . has_key ( 'fanart' ) :
      i1Iii11I1i = oooIIiIiI1I [ 'fanart' ]
     if oooIIiIiI1I . has_key ( 'description' ) :
      Oo00o0OO0O00o = oooIIiIiI1I [ 'description' ]
     if oooIIiIiI1I . has_key ( 'date' ) :
      O0Oooo = oooIIiIiI1I [ 'date' ]
     if oooIIiIiI1I . has_key ( 'genre' ) :
      II1iiiiII = oooIIiIiI1I [ 'genre' ]
     if oooIIiIiI1I . has_key ( 'credits' ) :
      credits = oooIIiIiI1I [ 'credits' ]
     if oooIIiIiI1I . has_key ( 'year' ) :
      iiIi1i = oooIIiIiI1I [ 'year' ]
     if oooIIiIiI1I . has_key ( 'director' ) :
      I1i11111i1i11 = oooIIiIiI1I [ 'director' ]
     if oooIIiIiI1I . has_key ( 'duration' ) :
      OOoOOO0 = oooIIiIiI1I [ 'duration' ]
     if oooIIiIiI1I . has_key ( 'premiered' ) :
      I1I1i = oooIIiIiI1I [ 'premiered' ]
     if oooIIiIiI1I . has_key ( 'studio' ) :
      I1IIIiIiIi = oooIIiIiI1I [ 'studio' ]
     if oooIIiIiI1I . has_key ( 'rate' ) :
      IIIII1 = oooIIiIiI1I [ 'rate' ]
     if oooIIiIiI1I . has_key ( 'originaltitle' ) :
      iIi1Ii1i1iI = oooIIiIiI1I [ 'originaltitle' ]
     if oooIIiIiI1I . has_key ( 'country' ) :
      IIiI1 = oooIIiIiI1I [ 'country' ]
     if oooIIiIiI1I . has_key ( 'rating' ) :
      i1iI1 = oooIIiIiI1I [ 'rating' ]
     if oooIIiIiI1I . has_key ( 'userrating' ) :
      ii1I1IiiI1ii1i = oooIIiIiI1I [ 'userrating' ]
     if oooIIiIiI1I . has_key ( 'votes' ) :
      O0o = oooIIiIiI1I [ 'votes' ]
     if oooIIiIiI1I . has_key ( 'aired' ) :
      oO0OoO00o = oooIIiIiI1I [ 'aired' ]
     o0Oo00 ( oooIIiIiI1I [ 'title' ] . encode ( 'utf-8' ) , oooIIiIiI1I [ 'url' ] . encode ( 'utf-8' ) , 1 , III1I1Iii1iiI , i1Iii11I1i , Oo00o0OO0O00o , II1iiiiII , O0Oooo , credits , iiIi1i , I1i11111i1i11 , OOoOOO0 , I1I1i , I1IIIiIiIi , IIIII1 , iIi1Ii1i1iI , IIiI1 , i1iI1 , ii1I1IiiI1ii1i , O0o , oO0OoO00o , 'source' )
     if 61 - 61: Oo0ooO0oo0oO % oOooOoO0Oo0O - oOoO0oo0OOOo - i11i % O0
  else :
   if len ( Iii1iiIi1II ) == 1 :
    if isinstance ( Iii1iiIi1II [ 0 ] , list ) :
     oOOOoo00 ( Iii1iiIi1II [ 0 ] [ 1 ] . encode ( 'utf-8' ) , ii111iI1iIi1 )
    else :
     oOOOoo00 ( Iii1iiIi1II [ 0 ] [ 'url' ] , Iii1iiIi1II [ 0 ] [ 'fanart' ] )
     if 90 - 90: iIii1I11I1II1 + IiiI + i11Ii11I1Ii1i - II * I1i1iI1i . IiiI
     if 37 - 37: i11Ii11I1Ii1i % i11iIiiIii % i11i . O0 . O0oo0OO0
def OO0oOOoo ( url = None ) :
 if url is None :
  if not IIiIiiIi . getSetting ( "new_file_source" ) == "" :
   oOOO00o000o = IIiIiiIi . getSetting ( 'new_file_source' ) . decode ( 'utf-8' )
  elif not IIiIiiIi . getSetting ( "new_url_source" ) == "" :
   oOOO00o000o = IIiIiiIi . getSetting ( 'new_url_source' ) . decode ( 'utf-8' )
 else :
  oOOO00o000o = url
 if oOOO00o000o == '' or oOOO00o000o is None :
  return
 O0OO0O ( 'Adding New Source: ' + oOOO00o000o . encode ( 'utf-8' ) )
 if 9 - 9: Iii1ii1II11i + O00oOoOoO0o0O / O00oOoOoO0o0O
 Ii1I11ii1i = None
 if 89 - 89: Oo0ooO0oo0oO . O0 / IiiI % i11ii11iIi11i . I11i11Ii
 ii1I = IiiI1i ( oOOO00o000o )
 print 'source_url' , oOOO00o000o
 if isinstance ( ii1I , BeautifulSOAP ) :
  if ii1I . find ( 'channels_info' ) :
   Ii1I11ii1i = ii1I . channels_info
  elif ii1I . find ( 'items_info' ) :
   Ii1I11ii1i = ii1I . items_info
 if Ii1I11ii1i :
  ooOOo00O00Oo = { }
  ooOOo00O00Oo [ 'url' ] = oOOO00o000o
  try : ooOOo00O00Oo [ 'title' ] = Ii1I11ii1i . title . string
  except : pass
  try : ooOOo00O00Oo [ 'thumbnail' ] = Ii1I11ii1i . thumbnail . string
  except : pass
  try : ooOOo00O00Oo [ 'fanart' ] = Ii1I11ii1i . fanart . string
  except : pass
  try : ooOOo00O00Oo [ 'genre' ] = Ii1I11ii1i . genre . string
  except : pass
  try : ooOOo00O00Oo [ 'description' ] = Ii1I11ii1i . description . string
  except : pass
  try : ooOOo00O00Oo [ 'date' ] = Ii1I11ii1i . date . string
  except : pass
  try : ooOOo00O00Oo [ 'credits' ] = Ii1I11ii1i . credits . string
  except : pass
  try : ooOOo00O00Oo [ 'year' ] = Ii1I11ii1i . year . string
  except : pass
  try : ooOOo00O00Oo [ 'director' ] = Ii1I11ii1i . director . string
  except : pass
  try : ooOOo00O00Oo [ 'premiered' ] = Ii1I11ii1i . premiered . string
  except : pass
  try : ooOOo00O00Oo [ 'studio' ] = Ii1I11ii1i . studio . string
  except : pass
  try : ooOOo00O00Oo [ 'rate' ] = Ii1I11ii1i . rate . string
  except : pass
  try : ooOOo00O00Oo [ 'originaltitle' ] = Ii1I11ii1i . originaltitle . string
  except : pass
  try : ooOOo00O00Oo [ 'country' ] = Ii1I11ii1i . country . string
  except : pass
  try : ooOOo00O00Oo [ 'rating' ] = Ii1I11ii1i . rating . string
  except : pass
  try : ooOOo00O00Oo [ 'userrating' ] = Ii1I11ii1i . userrating . string
  except : pass
  try : ooOOo00O00Oo [ 'votes' ] = Ii1I11ii1i . votes . string
  except : pass
  try : ooOOo00O00Oo [ 'aired' ] = Ii1I11ii1i . aired . string
  except : pass
 else :
  if '/' in oOOO00o000o :
   IiII1 = oOOO00o000o . split ( '/' ) [ - 1 ] . split ( '.' ) [ 0 ]
  if '\\' in oOOO00o000o :
   IiII1 = oOOO00o000o . split ( '\\' ) [ - 1 ] . split ( '.' ) [ 0 ]
  if '%' in IiII1 :
   IiII1 = urllib . unquote_plus ( IiII1 )
  I1iIi1iIiiIiI = xbmc . Keyboard ( IiII1 , 'Displayed Name, Rename?' )
  I1iIi1iIiiIiI . doModal ( )
  if ( I1iIi1iIiiIiI . isConfirmed ( ) == False ) :
   return
  I1i11ii = I1iIi1iIiiIiI . getText ( )
  if len ( I1i11ii ) == 0 :
   return
  ooOOo00O00Oo = { }
  ooOOo00O00Oo [ 'title' ] = I1i11ii
  ooOOo00O00Oo [ 'url' ] = oOOO00o000o
  ooOOo00O00Oo [ 'fanart' ] = i1Iii11I1i
  if 42 - 42: Oo0ooO0oo0oO + I1i1iI1i
 if os . path . exists ( OOO ) == False :
  o00oOoOo0 = [ ]
  o00oOoOo0 . append ( ooOOo00O00Oo )
  o0O0O0ooo0oOO = open ( OOO , "w" )
  o0O0O0ooo0oOO . write ( json . dumps ( o00oOoOo0 ) )
  o0O0O0ooo0oOO . close ( )
 else :
  Iii1iiIi1II = json . loads ( open ( OOO , "r" ) . read ( ) )
  Iii1iiIi1II . append ( ooOOo00O00Oo )
  o0O0O0ooo0oOO = open ( OOO , "w" )
  o0O0O0ooo0oOO . write ( json . dumps ( Iii1iiIi1II ) )
  o0O0O0ooo0oOO . close ( )
 IIiIiiIi . setSetting ( 'new_url_source' , "" )
 IIiIiiIi . setSetting ( 'new_file_source' , "" )
 if 97 - 97: oOooOoO0Oo0O / Oo0ooO0oo0oO
 xbmc . executebuiltin ( "XBMC.Notification(New source added.,5000," + OOoO00 + ")" )
 if not url is None :
  if 'xbmcplus.xb.funpic.de' in url :
   xbmc . executebuiltin ( "XBMC.Container.Update(%s?mode=14,replace)" % sys . argv [ 0 ] )
  elif 'community-links' in url :
   xbmc . executebuiltin ( "XBMC.Container.Update(%s?mode=10,replace)" % sys . argv [ 0 ] )
 else : IIiIiiIi . openSettings ( )
 if 71 - 71: i11i / i1IIi . IiiI % OoooooooOO . i11ii11iIi11i
 if 41 - 41: i1IIi * i11i / OoooooooOO . iii1I1I
def O0iII1 ( name ) :
 Iii1iiIi1II = json . loads ( open ( OOO , "r" ) . read ( ) )
 for IIII1i in range ( len ( Iii1iiIi1II ) ) :
  if isinstance ( Iii1iiIi1II [ IIII1i ] , list ) :
   if Iii1iiIi1II [ IIII1i ] [ 0 ] == name :
    del Iii1iiIi1II [ IIII1i ]
    o0O0O0ooo0oOO = open ( OOO , "w" )
    o0O0O0ooo0oOO . write ( json . dumps ( Iii1iiIi1II ) )
    o0O0O0ooo0oOO . close ( )
    break
  else :
   if Iii1iiIi1II [ IIII1i ] [ 'title' ] == name :
    del Iii1iiIi1II [ IIII1i ]
    o0O0O0ooo0oOO = open ( OOO , "w" )
    o0O0O0ooo0oOO . write ( json . dumps ( Iii1iiIi1II ) )
    o0O0O0ooo0oOO . close ( )
    break
 xbmc . executebuiltin ( "XBMC.Container.Refresh" )
 if 2 - 2: iIii1I11I1II1 * I11i11Ii % Iii1ii1II11i - i11i - Oo0ooO0oo0oO
 if 3 - 3: II
 if 45 - 45: II
def oO ( url , browse = False ) :
 if url is None :
  url = 'http://xbmcplus.xb.funpic.de/www-data/filesystem/'
 IIi1iiii1iI = BeautifulSoup ( OoO0O00O0oo0O ( url ) , convertEntities = BeautifulSoup . HTML_ENTITIES )
 for oooIIiIiI1I in IIi1iiii1iI ( 'a' ) :
  iIiiii = oooIIiIiI1I [ 'href' ]
  if not iIiiii . startswith ( '?' ) :
   O0000OOO0 = oooIIiIiI1I . string
   if O0000OOO0 not in [ 'Parent Directory' , 'recycle_bin/' ] :
    if iIiiii . endswith ( '/' ) :
     if browse :
      o0Oo00 ( O0000OOO0 , url + iIiiii , 15 , OOoO00 , i1Iii11I1i , '' , '' , '' )
     else :
      o0Oo00 ( O0000OOO0 , url + iIiiii , 14 , OOoO00 , i1Iii11I1i , '' , '' , '' )
    elif iIiiii . endswith ( '.xml' ) :
     if browse :
      o0Oo00 ( O0000OOO0 , url + iIiiii , 1 , OOoO00 , i1Iii11I1i , '' , '' , '' , '' , 'download' )
     else :
      if os . path . exists ( OOO ) == True :
       if O0000OOO0 in i1I1ii11i1Iii :
        o0Oo00 ( O0000OOO0 + ' (in use)' , url + iIiiii , 11 , OOoO00 , i1Iii11I1i , '' , '' , '' , '' , 'download' )
       else :
        o0Oo00 ( O0000OOO0 , url + iIiiii , 11 , OOoO00 , i1Iii11I1i , '' , '' , '' , '' , 'download' )
      else :
       o0Oo00 ( O0000OOO0 , url + iIiiii , 11 , OOoO00 , i1Iii11I1i , '' , '' , '' , '' , 'download' )
       if 51 - 51: oOooOoO0Oo0O / I1i1iI1i / O0oo0OO0
       if 6 - 6: O0oo0OO0 - i11Ii11I1Ii1i * iii1I1I . Oo0ooO0oo0oO / O0 * i11Ii11I1Ii1i
def II11iI111i1 ( browse = False ) :
 oO0O00oOOoooO = 'http://community-links.googlecode.com/svn/trunk/'
 IIi1iiii1iI = BeautifulSoup ( OoO0O00O0oo0O ( oO0O00oOOoooO ) , convertEntities = BeautifulSoup . HTML_ENTITIES )
 Oo00OoOo = IIi1iiii1iI ( 'ul' ) [ 0 ] ( 'li' ) [ 1 : ]
 for oooIIiIiI1I in Oo00OoOo :
  O0000OOO0 = oooIIiIiI1I ( 'a' ) [ 0 ] [ 'href' ]
  if browse :
   o0Oo00 ( O0000OOO0 , oO0O00oOOoooO + O0000OOO0 , 1 , OOoO00 , i1Iii11I1i , '' , '' , '' , '' , 'download' )
  else :
   o0Oo00 ( O0000OOO0 , oO0O00oOOoooO + O0000OOO0 , 11 , OOoO00 , i1Iii11I1i , '' , '' , '' , '' , 'download' )
   if 24 - 24: i11iIiiIii - II
   if 21 - 21: O00oOoOoO0o0O
def IiiI1i ( url , data = None ) :
 global o0OO00 , iI1
 iI1 = False
 if url . startswith ( 'http://' ) or url . startswith ( 'https://' ) :
  OoO00 = False
  if '$$TSDOWNLOADER$$' in url :
   iI1 = True
   url = url . replace ( "$$TSDOWNLOADER$$" , "" )
  if '$$LSProEncKey=' in url :
   OoO00 = url . split ( '$$LSProEncKey=' ) [ 1 ] . split ( '$$' ) [ 0 ]
   OO0Ooooo000Oo = '$$LSProEncKey=%s$$' % OoO00
   url = url . replace ( OO0Ooooo000Oo , "" )
  try :
   print 'myRequest' , url , data
   data = OoO0O00O0oo0O ( url )
   import gzip , binascii
   from StringIO import StringIO
   if 'tgjds' [ : : - 1 ] in data :
    data = data . split ( 'tgjds' [ : : - 1 ] )
    O0oOoo0o000O0 = StringIO ( binascii . unhexlify ( data [ 0 ] ) )
    o00oO0o0o = gzip . GzipFile ( fileobj = O0oOoo0o000O0 )
    data = o00oO0o0o . read ( )
  except :
   data = OoO0O00O0oo0O ( url )
  if OoO00 :
   import pyaes
   OoO00 = OoO00 . encode ( "ascii" )
   print OoO00
   oo0O0Ooooooo = 16 - len ( OoO00 )
   OoO00 = OoO00 + ( chr ( 0 ) * ( oo0O0Ooooooo ) )
   print repr ( OoO00 )
   data = base64 . b64decode ( data )
   I1IIIiI1I1ii1 = pyaes . new ( OoO00 , pyaes . MODE_ECB , IV = None )
   data = I1IIIiI1I1ii1 . decrypt ( data ) . split ( '\0' ) [ 0 ]
   if 30 - 30: O0 * OoooooooOO
  if re . search ( "#EXTM3U" , data ) or 'm3u' in url :
   if 38 - 38: I1i1iI1i - IiiI . i11ii11iIi11i - II . OoooooooOO
   return data
 elif data == None :
  if not '/' in url or not '\\' in url :
   if 89 - 89: iIii1I11I1II1
   url = os . path . join ( communityfiles , url )
  if xbmcvfs . exists ( url ) :
   if url . startswith ( "smb://" ) or url . startswith ( "nfs://" ) :
    i11iiiiI1i = xbmcvfs . copy ( url , os . path . join ( IIi1I11I1II , 'temp' , 'sorce_temp.txt' ) )
    if i11iiiiI1i :
     data = open ( os . path . join ( IIi1I11I1II , 'temp' , 'sorce_temp.txt' ) , "r" ) . read ( )
     xbmcvfs . delete ( os . path . join ( IIi1I11I1II , 'temp' , 'sorce_temp.txt' ) )
    else :
     O0OO0O ( "failed to copy from smb:" )
   else :
    data = open ( url , 'r' ) . read ( )
    if re . match ( "#EXTM3U" , data ) or 'm3u' in url :
     if 37 - 37: iii1I1I / OoooooooOO - i11iIiiIii
     return data
  else :
   O0OO0O ( "Soup Data not found!" )
   return
 if '<SetViewMode>' in data :
  try :
   o0OO00 = re . findall ( '<SetViewMode>(.*?)<' , data ) [ 0 ]
   xbmc . executebuiltin ( "Container.SetViewMode(%s)" % o0OO00 )
   print 'done setview' , o0OO00
  except : pass
 return BeautifulSOAP ( data , convertEntities = BeautifulStoneSoup . XML_ENTITIES )
 if 18 - 18: Oo0ooO0oo0oO . oOooOoO0Oo0O
 if 40 - 40: O0 - OoooooooOO - I1i1iI1i
def oOOOoo00 ( url , fanart , data = None ) :
 if 37 - 37: i11ii11iIi11i / i11i / O0
 OOOO00OO0O0 = "List"
 if 48 - 48: II
 IIi1iiii1iI = IiiI1i ( url , data )
 if 72 - 72: Oo0ooO0oo0oO * Iii1ii1II11i % O0oo0OO0 . OoooooooOO
 if isinstance ( IIi1iiii1iI , BeautifulSOAP ) :
  if len ( IIi1iiii1iI ( 'layoutype' ) ) > 0 :
   OOOO00OO0O0 = "thumbnail"
   if 99 - 99: iIii1I11I1II1 % i11Ii11I1Ii1i + i11Ii11I1Ii1i + Oo0ooO0oo0oO - II / II
  if len ( IIi1iiii1iI ( 'channels' ) ) > 0 :
   iiiI11 = IIi1iiii1iI ( 'channel' )
   for OOoO000 in iiiI11 :
    if 57 - 57: i11i
    if 54 - 54: I11i11Ii + Iii1ii1II11i + i11iIiiIii
    i1i1ii111 = ''
    IiI1ioO0oOOoo00000 = 0
    try :
     i1i1ii111 = OOoO000 ( 'externallink' ) [ 0 ] . string
     IiI1ioO0oOOoo00000 = len ( OOoO000 ( 'externallink' ) )
    except : pass
    if 52 - 52: oOooOoO0Oo0O
    if IiI1ioO0oOOoo00000 > 1 : i1i1ii111 = ''
    if 51 - 51: I1i1iI1i
    O0000OOO0 = OOoO000 ( 'name' ) [ 0 ] . string
    o00o = OOoO000 ( 'thumbnail' ) [ 0 ] . string
    if o00o == None :
     o00o = ''
     if 46 - 46: i11i % oOoO0oo0OOOo % iIii1I11I1II1 - I11i11Ii . OoooooooOO - I1i1iI1i
    try :
     if not OOoO000 ( 'fanart' ) :
      if IIiIiiIi . getSetting ( 'use_thumb' ) == "true" :
       o00 = o00o
      else :
       o00 = fanart
     else :
      o00 = OOoO000 ( 'fanart' ) [ 0 ] . string
     if o00 == None :
      raise
    except :
     o00 = fanart
     if 69 - 69: OoooooooOO + IiiI
    try :
     Oo00o0OO0O00o = OOoO000 ( 'info' ) [ 0 ] . string
     if Oo00o0OO0O00o == None :
      raise
    except :
     Oo00o0OO0O00o = ''
     if 97 - 97: iii1I1I - i1iIi11iIIi1I / O0oo0OO0 . i11iIiiIii % Iii1ii1II11i * Iii1ii1II11i
    try :
     II1iiiiII = OOoO000 ( 'genre' ) [ 0 ] . string
     if II1iiiiII == None :
      raise
    except :
     II1iiiiII = ''
     if 1 - 1: oOooOoO0Oo0O % i11Ii11I1Ii1i
    try :
     O0Oooo = OOoO000 ( 'date' ) [ 0 ] . string
     if O0Oooo == None :
      raise
    except :
     O0Oooo = ''
     if 65 - 65: oOooOoO0Oo0O + i11ii11iIi11i / iii1I1I
    try :
     credits = OOoO000 ( 'credits' ) [ 0 ] . string
     if credits == None :
      raise
    except :
     credits = ''
     if 83 - 83: oOoO0oo0OOOo . Oo0ooO0oo0oO - I11i11Ii
    try :
     iiIi1i = OOoO000 ( 'year' ) [ 0 ] . string
     if iiIi1i == None :
      raise
    except :
     iiIi1i = ''
     if 65 - 65: iIii1I11I1II1 / i11Ii11I1Ii1i . I1i1iI1i - i11i
    try :
     I1i11111i1i11 = OOoO000 ( 'director' ) [ 0 ] . string
     if I1i11111i1i11 == None :
      raise
    except :
     I1i11111i1i11 = ''
     if 72 - 72: iIii1I11I1II1 / I1i1iI1i % Oo0ooO0oo0oO % iii1I1I - O00oOoOoO0o0O % iii1I1I
    try :
     OOoOOO0 = OOoO000 ( 'duration' ) [ 0 ] . string
     if OOoOOO0 == None :
      raise
    except :
     OOoOOO0 = ''
     if 100 - 100: I11i11Ii + i11iIiiIii
    try :
     I1I1i = OOoO000 ( 'premiered' ) [ 0 ] . string
     if I1I1i == None :
      raise
    except :
     I1I1i = ''
     if 71 - 71: O00oOoOoO0o0O / oOoO0oo0OOOo / II % iii1I1I
    try :
     I1IIIiIiIi = OOoO000 ( 'studio' ) [ 0 ] . string
     if I1IIIiIiIi == None :
      raise
    except :
     I1IIIiIiIi = ''
     if 51 - 51: I1i1iI1i * O0 / i11i . O0oo0OO0 % iii1I1I / oOooOoO0Oo0O
    try :
     IIIII1 = OOoO000 ( 'rate' ) [ 0 ] . string
     if IIIII1 == None :
      raise
    except :
     IIIII1 = ''
     if 9 - 9: oOooOoO0Oo0O % oOooOoO0Oo0O % i11i
    try :
     iIi1Ii1i1iI = OOoO000 ( 'originaltitle' ) [ 0 ] . string
     if iIi1Ii1i1iI == None :
      raise
    except :
     iIi1Ii1i1iI = ''
     if 30 - 30: I1i1iI1i + II - I1i1iI1i . I1i1iI1i - i11i + O0
    try :
     IIiI1 = OOoO000 ( 'country' ) [ 0 ] . string
     if IIiI1 == None :
      raise
    except :
     IIiI1 = ''
     if 86 - 86: i1IIi
    try :
     IIi11IIiIii1 = OOoO000 ( 'mediatype' ) [ 0 ] . string
     if IIi11IIiIii1 == None :
      raise
    except :
     IIi11IIiIii1 = ''
     if 17 - 17: O0oo0OO0 + Iii1ii1II11i . i1iIi11iIIi1I - I11i11Ii * i11iIiiIii
    try :
     i1iI1 = OOoO000 ( 'rating' ) [ 0 ] . string
     if i1iI1 == None :
      raise
    except :
     i1iI1 = ''
     if 20 - 20: oOooOoO0Oo0O . OoooooooOO % iii1I1I
    try :
     ii1I1IiiI1ii1i = OOoO000 ( 'userrating' ) [ 0 ] . string
     if ii1I1IiiI1ii1i == None :
      raise
    except :
     ii1I1IiiI1ii1i = ''
     if 63 - 63: oOooOoO0Oo0O % iIii1I11I1II1
    try :
     O0o = OOoO000 ( 'votes' ) [ 0 ] . string
     if O0o == None :
      raise
    except :
     O0o = ''
     if 39 - 39: Oo0ooO0oo0oO / i11i / IiiI % oOooOoO0Oo0O
    try :
     oO0OoO00o = OOoO000 ( 'aired' ) [ 0 ] . string
     if oO0OoO00o == None :
      raise
    except :
     oO0OoO00o = ''
     if 89 - 89: II + OoooooooOO + II * i1IIi + iIii1I11I1II1 % O00oOoOoO0o0O
    try :
     if i1i1ii111 == '' :
      o0Oo00 ( O0000OOO0 . encode ( 'utf-8' , 'ignore' ) , url . encode ( 'utf-8' ) , 2 , o00o , o00 , Oo00o0OO0O00o , II1iiiiII , O0Oooo , credits , iiIi1i , I1i11111i1i11 , OOoOOO0 , I1I1i , I1IIIiIiIi , IIIII1 , iIi1Ii1i1iI , IIiI1 , i1iI1 , ii1I1IiiI1ii1i , O0o , oO0OoO00o , True )
     else :
      if 59 - 59: iii1I1I + i11iIiiIii
      o0Oo00 ( O0000OOO0 . encode ( 'utf-8' ) , i1i1ii111 . encode ( 'utf-8' ) , 1 , o00o , o00 , Oo00o0OO0O00o , II1iiiiII , O0Oooo , None , iiIi1i , I1i11111i1i11 , OOoOOO0 , I1I1i , I1IIIiIiIi , IIIII1 , iIi1Ii1i1iI , IIiI1 , i1iI1 , ii1I1IiiI1ii1i , O0o , oO0OoO00o , 'source' )
    except :
     O0OO0O ( 'There was a problem adding directory from getData(): ' + O0000OOO0 . encode ( 'utf-8' , '
love = ''
god = 'rd' in OoOO0o :
      ooo . add_header ( 'X-Forwarded-For' , OoOO0o [ 'x-forward' ] )
     if 'setcookie' in OoOO0o :
      if 18 - 18: iIii1I11I1II1 + iii1I1I + iIii1I11I1II1 . IiiI + II . i11Ii11I1Ii1i
      ooo . add_header ( 'Cookie' , OoOO0o [ 'setcookie' ] )
     if 'appendcookie' in OoOO0o :
      if 7 - 7: IiiI + iIii1I11I1II1 * O00oOoOoO0o0O * O00oOoOoO0o0O / i11i - O0oo0OO0
      oOOOo0o = OoOO0o [ 'appendcookie' ]
      oOOOo0o = oOOOo0o . split ( ';' )
      for iiiii11I1 in oOOOo0o :
       Ii1 , OOOo = iiiii11I1 . split ( '=' )
       I1iI1IiI , Ii1 = Ii1 . split ( ':' )
       i1i1Ii1I = cookielib . Cookie ( version = 0 , name = Ii1 , value = OOOo , port = None , port_specified = False , domain = I1iI1IiI , domain_specified = False , domain_initial_dot = False , path = '/' , path_specified = True , secure = False , expires = None , discard = True , comment = None , comment_url = None , rest = { 'HttpOnly' : None } , rfc2109 = False )
       cookieJar . set_cookie ( i1i1Ii1I )
     if 'origin' in OoOO0o :
      ooo . add_header ( 'Origin' , OoOO0o [ 'origin' ] )
     if oO00 :
      oO00 = oO00 . split ( '&' )
      for iiiii11I1 in oO00 :
       Ii1 , OOOo = iiiii11I1 . split ( '=' )
       ooo . add_header ( Ii1 , OOOo )
       if 11 - 11: iii1I1I - i11ii11iIi11i - oOoO0oo0OOOo * i11ii11iIi11i + i11Ii11I1Ii1i
     if not cookieJar == None :
      if 62 - 62: oOooOoO0Oo0O * i11iIiiIii . Oo0ooO0oo0oO
      I1iIIIiI = urllib2 . HTTPCookieProcessor ( cookieJar )
      OOOOO0oo0O0O0 = urllib2 . build_opener ( I1iIIIiI , urllib2 . HTTPBasicAuthHandler ( ) , urllib2 . HTTPHandler ( ) )
      OOOOO0oo0O0O0 = urllib2 . install_opener ( OOOOO0oo0O0O0 )
      if 60 - 60: oOooOoO0Oo0O . i11iIiiIii + i11ii11iIi11i / IiiI * i11i * iii1I1I
      if 59 - 59: I11i11Ii + Oo0ooO0oo0oO - iii1I1I . oOoO0oo0OOOo + oOooOoO0Oo0O % Iii1ii1II11i
      if 'noredirect' in OoOO0o :
       OOOOO0oo0O0O0 = urllib2 . build_opener ( I1iIIIiI , IIiIi1iI , urllib2 . HTTPBasicAuthHandler ( ) , urllib2 . HTTPHandler ( ) )
       OOOOO0oo0O0O0 = urllib2 . install_opener ( OOOOO0oo0O0O0 )
     elif 'noredirect' in OoOO0o :
      OOOOO0oo0O0O0 = urllib2 . build_opener ( IIiIi1iI , urllib2 . HTTPBasicAuthHandler ( ) , urllib2 . HTTPHandler ( ) )
      OOOOO0oo0O0O0 = urllib2 . install_opener ( OOOOO0oo0O0O0 )
      if 37 - 37: Oo0ooO0oo0oO + Oo0ooO0oo0oO % oOoO0oo0OOOo
      if 29 - 29: i11Ii11I1Ii1i
     if 'connection' in OoOO0o :
      if 41 - 41: O0 % Oo0ooO0oo0oO
      from keepalive import HTTPHandler
      i1 = HTTPHandler ( )
      OOOOO0oo0O0O0 = urllib2 . build_opener ( i1 )
      urllib2 . install_opener ( OOOOO0oo0O0O0 )
      if 48 - 48: iii1I1I % oOooOoO0Oo0O
      if 81 - 81: i1IIi - Iii1ii1II11i + i11ii11iIi11i
      if 77 - 77: O00oOoOoO0o0O . I1i1iI1i
     o0O0OO0OOOOOo = None
     if 16 - 16: i1iIi11iIIi1I / Oo0ooO0oo0oO / i1IIi . Oo0ooO0oo0oO + Iii1ii1II11i
     if 'post' in OoOO0o :
      Iiii1I = OoOO0o [ 'post' ]
      if 56 - 56: i11iIiiIii - iIii1I11I1II1 . i11i
      if 81 - 81: I1i1iI1i / i11ii11iIi11i * I1i1iI1i . O0
      if 61 - 61: i1iIi11iIIi1I * iii1I1I + II . iIii1I11I1II1 % O00oOoOoO0o0O . II
      if 53 - 53: II * I1i1iI1i / iIii1I11I1II1 / oOooOoO0Oo0O % IiiI
      IIii = Iiii1I . split ( ',' ) ;
      o0O0OO0OOOOOo = { }
      for oOOO0 in IIii :
       Ii1 = oOOO0 . split ( ':' ) [ 0 ] ;
       OOOo = oOOO0 . split ( ':' ) [ 1 ] ;
       o0O0OO0OOOOOo [ Ii1 ] = OOOo
      o0O0OO0OOOOOo = urllib . urlencode ( o0O0OO0OOOOOo )
      if 32 - 32: i11Ii11I1Ii1i % II * I11i11Ii
     if 'rawpost' in OoOO0o :
      o0O0OO0OOOOOo = OoOO0o [ 'rawpost' ]
      if 72 - 72: i11Ii11I1Ii1i . Oo0ooO0oo0oO - II - O0oo0OO0 % i1IIi
      if 56 - 56: I11i11Ii * Oo0ooO0oo0oO
      if 13 - 13: I11i11Ii * I11i11Ii * i11i * Oo0ooO0oo0oO . i1IIi / I1i1iI1i
      if 92 - 92: O0oo0OO0 * i11iIiiIii + Oo0ooO0oo0oO * II
     ii1 = ''
     try :
      if 48 - 48: O00oOoOoO0o0O * Oo0ooO0oo0oO * Oo0ooO0oo0oO
      if o0O0OO0OOOOOo :
       I1I1i1I = urllib2 . urlopen ( ooo , o0O0OO0OOOOOo )
      else :
       I1I1i1I = urllib2 . urlopen ( ooo )
      if I1I1i1I . info ( ) . get ( 'Content-Encoding' ) == 'gzip' :
       from StringIO import StringIO
       import gzip
       O0oOoo0o000O0 = StringIO ( I1I1i1I . read ( ) )
       o00oO0o0o = gzip . GzipFile ( fileobj = O0oOoo0o000O0 )
       ii1 = o00oO0o0o . read ( )
      else :
       ii1 = I1I1i1I . read ( )
       if 70 - 70: Iii1ii1II11i + O00oOoOoO0o0O % i11iIiiIii + O0
       if 65 - 65: iIii1I11I1II1 % Iii1ii1II11i + O0 / OoooooooOO
       if 52 - 52: O0oo0OO0 % iii1I1I * oOooOoO0Oo0O % O00oOoOoO0o0O + iii1I1I / Oo0ooO0oo0oO
      if 'proxy' in OoOO0o and not oOOO0ooo is None :
       urllib2 . install_opener ( urllib2 . build_opener ( oOOO0ooo ) )
       if 80 - 80: OoooooooOO + I1i1iI1i
      ii1 = O00O ( ii1 )
      if 63 - 63: OoooooooOO * OoooooooOO % i1iIi11iIIi1I + O0 / II + iIii1I11I1II1
      if 72 - 72: i11ii11iIi11i * iIii1I11I1II1 % O00oOoOoO0o0O
      if 'includeheaders' in OoOO0o :
       if 20 - 20: i11i % iIii1I11I1II1 + Iii1ii1II11i * i11i * i1iIi11iIIi1I % i1iIi11iIIi1I
       ii1 += '$$HEADERS_START$$:'
       for o0O0O0ooo0oOO in I1I1i1I . headers :
        ii1 += o0O0O0ooo0oOO + ':' + I1I1i1I . headers . get ( o0O0O0ooo0oOO ) + '\n'
       ii1 += '$$HEADERS_END$$:'
       if 15 - 15: Iii1ii1II11i / II
      O0OO0O ( ii1 )
      O0OO0O ( cookieJar )
      if 37 - 37: i11iIiiIii + oOooOoO0Oo0O . iii1I1I % O00oOoOoO0o0O % O00oOoOoO0o0O
      I1I1i1I . close ( )
     except :
      pass
     cachedPages [ OoOO0o [ 'page' ] ] = ii1
     if 26 - 26: O0
     if 34 - 34: i11Ii11I1Ii1i * II
     if 97 - 97: i11iIiiIii % Iii1ii1II11i / I11i11Ii / I11i11Ii
     if forCookieJarOnly :
      return cookieJar
    elif OoOO0o [ 'page' ] and not OoOO0o [ 'page' ] . startswith ( 'http' ) :
     if OoOO0o [ 'page' ] . startswith ( '$pyFunction:' ) :
      OoO00ooO = ii ( OoOO0o [ 'page' ] . split ( '$pyFunction:' ) [ 1 ] , '' , cookieJar , OoOO0o )
      if forCookieJarOnly :
       return cookieJar
      ii1 = OoO00ooO
      ii1 = O00O ( ii1 )
     else :
      ii1 = OoOO0o [ 'page' ]
   if '$pyFunction:playmedia(' in OoOO0o [ 'expres' ] or 'ActivateWindow' in OoOO0o [ 'expres' ] or '$PLAYERPROXY$=' in url or any ( x in url for x in oO0000OOo00 ) :
    ooOO00o00 = False
   if '$doregex' in OoOO0o [ 'expres' ] :
    OoOO0o [ 'expres' ] = i1II1i ( regexs , OoOO0o [ 'expres' ] , cookieJar , recursiveCall = True , cachedPages = cachedPages )
   if not OoOO0o [ 'expres' ] == '' :
    if 88 - 88: II % I1i1iI1i / O0oo0OO0 - oOooOoO0Oo0O / oOooOoO0Oo0O * i11Ii11I1Ii1i
    if '$LiveStreamCaptcha' in OoOO0o [ 'expres' ] :
     OoO00ooO = oO0ooooo0O00 ( OoOO0o , ii1 , cookieJar )
     if 5 - 5: i11ii11iIi11i % Oo0ooO0oo0oO + I1i1iI1i
     url = url . replace ( "$doregex[" + Ii11Iii + "]" , OoO00ooO )
     if 13 - 13: I1i1iI1i
    elif OoOO0o [ 'expres' ] . startswith ( '$pyFunction:' ) or '#$pyFunction' in OoOO0o [ 'expres' ] :
     if 19 - 19: i11i - I1i1iI1i
     OoO00ooO = ''
     if OoOO0o [ 'expres' ] . startswith ( '$pyFunction:' ) :
      OoO00ooO = ii ( OoOO0o [ 'expres' ] . split ( '$pyFunction:' ) [ 1 ] , ii1 , cookieJar , OoOO0o )
     else :
      OoO00ooO = doEvalFunction ( OoOO0o [ 'expres' ] , ii1 , cookieJar , OoOO0o )
     if 'ActivateWindow' in OoOO0o [ 'expres' ] : return
     if 59 - 59: oOoO0oo0OOOo * i1iIi11iIIi1I - O0oo0OO0 . iii1I1I
     if 89 - 89: iii1I1I
     if 69 - 69: i11Ii11I1Ii1i - OoooooooOO * O0
     try :
      url = url . replace ( u"$doregex[" + Ii11Iii + "]" , OoO00ooO )
     except : url = url . replace ( "$doregex[" + Ii11Iii + "]" , OoO00ooO . decode ( "utf-8" ) )
    else :
     if 'listrepeat' in OoOO0o :
      O0Oo0O0 = OoOO0o [ 'listrepeat' ]
      I1IiiIiii1 = re . findall ( OoOO0o [ 'expres' ] , ii1 )
      return O0Oo0O0 , I1IiiIiii1 , OoOO0o , regexs
      if 39 - 39: i11Ii11I1Ii1i / O0 * I1i1iI1i
     OoO00ooO = ''
     if not ii1 == '' :
      if 17 - 17: O0oo0OO0 / iIii1I11I1II1 - i1iIi11iIIi1I + oOooOoO0Oo0O % iii1I1I
      III1III11II = re . compile ( OoOO0o [ 'expres' ] ) . search ( ii1 )
      try :
       OoO00ooO = III1III11II . group ( 1 ) . strip ( )
      except : traceback . print_exc ( )
      if OoOO0o [ 'page' ] == '' :
       OoO00ooO = OoOO0o [ 'expres' ]
       if 43 - 43: oOooOoO0Oo0O
     if rawPost :
      if 47 - 47: OoooooooOO % i11ii11iIi11i
      OoO00ooO = urllib . quote_plus ( OoO00ooO )
     if 'htmlunescape' in OoOO0o :
      if 63 - 63: i1iIi11iIIi1I / i11ii11iIi11i * iIii1I11I1II1 . II
      import HTMLParser
      OoO00ooO = HTMLParser . HTMLParser ( ) . unescape ( OoO00ooO )
     try :
      url = url . replace ( "$doregex[" + Ii11Iii + "]" , OoO00ooO )
     except : url = url . replace ( "$doregex[" + Ii11Iii + "]" , OoO00ooO . decode ( "utf-8" ) )
     if 85 - 85: i11iIiiIii / i11iIiiIii . i1iIi11iIIi1I . O0
     if 67 - 67: i11i / oOoO0oo0OOOo . iii1I1I . OoooooooOO
   else :
    url = url . replace ( "$doregex[" + Ii11Iii + "]" , '' )
 if '$epoctime$' in url :
  url = url . replace ( '$epoctime$' , oooo ( ) )
 if '$epoctime2$' in url :
  url = url . replace ( '$epoctime2$' , iii1IIiI ( ) )
  if 19 - 19: I1i1iI1i . IiiI / i11ii11iIi11i
 if '$GUID$' in url :
  import uuid
  url = url . replace ( '$GUID$' , str ( uuid . uuid1 ( ) ) . upper ( ) )
 if '$get_cookies$' in url :
  url = url . replace ( '$get_cookies$' , O00oo ( cookieJar ) )
  if 75 - 75: iIii1I11I1II1 * i11iIiiIii - OoooooooOO . i11ii11iIi11i
 if recursiveCall : return url
 if 70 - 70: Iii1ii1II11i * Iii1ii1II11i + I11i11Ii * iii1I1I % oOooOoO0Oo0O + iIii1I11I1II1
 if url == "" :
  return
 else :
  return url , ooOO00o00
  if 2 - 2: i11iIiiIii
def OOOO ( t ) :
 import hashlib
 iiiii11I1 = hashlib . md5 ( )
 iiiii11I1 . update ( t )
 return iiiii11I1 . hexdigest ( )
 if 63 - 63: oOooOoO0Oo0O / i11ii11iIi11i + OoooooooOO . O00oOoOoO0o0O . i11Ii11I1Ii1i
def IiI1iiI11 ( encrypted ) :
 OOoOOOO00 = ""
 for OoO00ooO in encrypted . split ( ':' ) :
  OOoOOOO00 += chr ( int ( OoO00ooO . replace ( "0m0" , "" ) ) / 84 / 5 )
 return OOoOOOO00
 if 49 - 49: i1iIi11iIIi1I - O0 / i1iIi11iIIi1I * i11ii11iIi11i + II
def Ii ( media_url ) :
 try :
  import CustomPlayer
  ii1IOoo000000 = CustomPlayer . MyXBMCPlayer ( )
  Oo00ooOoO = xbmcgui . ListItem ( label = str ( O0000OOO0 ) , iconImage = "DefaultVideo.png" , thumbnailImage = xbmc . getInfoImage ( "ListItem.Thumb" ) , path = media_url )
  ii1IOoo000000 . play ( media_url , Oo00ooOoO )
  xbmc . sleep ( 1000 )
  while ii1IOoo000000 . is_active :
   xbmc . sleep ( 200 )
 except :
  traceback . print_exc ( )
 return ''
 if 100 - 100: i11iIiiIii / i11iIiiIii
 if 89 - 89: Oo0ooO0oo0oO . i11iIiiIii * O0
def Iiii1 ( page_value , referer = None ) :
 if referer :
  referer = [ ( 'Referer' , referer ) ]
 if page_value . startswith ( "http" ) :
  iI111II1ii = page_value
  page_value = I1I1 ( page_value , headers = referer )
  if 62 - 62: Oo0ooO0oo0oO * iIii1I11I1II1 . I1i1iI1i - OoooooooOO * i11i
 IiIIi1II1i = "(eval\(function\(p,a,c,k,e,(?:r|d).*)"
 if 81 - 81: O0 - O0oo0OO0 + I11i11Ii
 oOo0OOO00Oo = re . compile ( IiIIi1II1i ) . findall ( page_value )
 i1i1IiIiIi1Ii = ""
 if oOo0OOO00Oo and len ( oOo0OOO00Oo ) > 0 :
  for OOOo in oOo0OOO00Oo :
   i1ii1ii1II1 = IIIiI1Ii11 ( OOOo )
   i11IiI1I = oOO ( i1ii1ii1II1 , '\'(.*?)\'' )
   if 'unescape' in i1ii1ii1II1 :
    i1ii1ii1II1 = urllib . unquote ( i11IiI1I )
   i1i1IiIiIi1Ii += i1ii1ii1II1 + '\n'
  print 'final value is ' , i1i1IiIiIi1Ii
  if 70 - 70: i1iIi11iIIi1I % oOooOoO0Oo0O / oOooOoO0Oo0O . O00oOoOoO0o0O % i11Ii11I1Ii1i . i11i
  iI111II1ii = oOO ( i1i1IiIiIi1Ii , 'src="(.*?)"' )
  if 10 - 10: O0oo0OO0 - i11iIiiIii . IiiI % i1IIi
  page_value = I1I1 ( iI111II1ii , headers = referer )
  if 78 - 78: iIii1I11I1II1 * I11i11Ii . I11i11Ii - iii1I1I . iIii1I11I1II1
  if 30 - 30: i11Ii11I1Ii1i + i11Ii11I1Ii1i % I1i1iI1i - oOoO0oo0OOOo - IiiI
  if 36 - 36: O00oOoOoO0o0O % iii1I1I
 OoO0 = oOO ( page_value , 'streamer\'.*?\'(.*?)\'\)' )
 i1ii1IIIII = oOO ( page_value , 'file\',\s\'(.*?)\'' )
 if 52 - 52: i11ii11iIi11i / i1iIi11iIIi1I + II
 if 49 - 49: iIii1I11I1II1 % O00oOoOoO0o0O . O00oOoOoO0o0O . iIii1I11I1II1 * i11ii11iIi11i / O00oOoOoO0o0O
 return OoO0 + ' playpath=' + i1ii1IIIII + ' pageUrl=' + iI111II1ii
 if 95 - 95: Iii1ii1II11i * iIii1I11I1II1 + IiiI
def i1iI1i ( page_value , referer = None ) :
 if referer :
  referer = [ ( 'Referer' , referer ) ]
 if page_value . startswith ( "http" ) :
  page_value = I1I1 ( page_value , headers = referer )
 IiIIi1II1i = "var a = (.*?);\s*var b = (.*?);\s*var c = (.*?);\s*var d = (.*?);\s*var f = (.*?);\s*var v_part = '(.*?)';"
 oOo0OOO00Oo = re . compile ( IiIIi1II1i ) . findall ( page_value ) [ 0 ]
 if 59 - 59: I1i1iI1i
 i1ii11 , o0O0O0ooo0oOO , iIIIi1i1I11i , oOoO0OOO00O , o00oO0o0o , OOOo = ( oOo0OOO00Oo )
 o00oO0o0o = int ( o00oO0o0o )
 i1ii11 = int ( i1ii11 ) / o00oO0o0o
 o0O0O0ooo0oOO = int ( o0O0O0ooo0oOO ) / o00oO0o0o
 iIIIi1i1I11i = int ( iIIIi1i1I11i ) / o00oO0o0o
 oOoO0OOO00O = int ( oOoO0OOO00O ) / o00oO0o0o
 if 73 - 73: oOoO0oo0OOOo % i1iIi11iIIi1I + I1i1iI1i + oOooOoO0Oo0O
 I1IiiIiii1 = 'rtmp://' + str ( i1ii11 ) + '.' + str ( o0O0O0ooo0oOO ) + '.' + str ( iIIIi1i1I11i ) + '.' + str ( oOoO0OOO00O ) + OOOo ;
 return I1IiiIiii1
 if 80 - 80: i1IIi + oOoO0oo0OOOo + I1i1iI1i * O00oOoOoO0o0O
def OO00OoOoOO ( url , useragent = None ) :
 str = '#EXTM3U'
 str += '\n#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=361816'
 str += '\n' + url + '&bytes=0-200000'
 OOO = os . path . join ( IIi1I11I1II , 'testfile.m3u' )
 str += '\n'
 II1i ( OOO , str )
 if 94 - 94: O0oo0OO0 . i1IIi
 return OOO
 if 71 - 71: Oo0ooO0oo0oO + i1iIi11iIIi1I - I1i1iI1i . i1iIi11iIIi1I . I1i1iI1i + oOooOoO0Oo0O
def II1i ( file_name , page_data , append = False ) :
 if append :
  o00oO0o0o = open ( file_name , 'a' )
  o00oO0o0o . write ( page_data )
  o00oO0o0o . close ( )
 else :
  o00oO0o0o = open ( file_name , 'wb' )
  o00oO0o0o . write ( page_data )
  o00oO0o0o . close ( )
  return ''
  if 26 - 26: O0
def iiiIi ( file_name ) :
 o00oO0o0o = open ( file_name , 'rb' )
 oOoO0OOO00O = o00oO0o0o . read ( )
 o00oO0o0o . close ( )
 return oOoO0OOO00O
 if 62 - 62: O0 . I11i11Ii
def iI1ii ( page_data ) :
 import re , base64 , urllib ;
 O0OooOO = page_data
 while 'geh(' in O0OooOO :
  if O0OooOO . startswith ( 'lol(' ) : O0OooOO = O0OooOO [ 5 : - 1 ]
  if 49 - 49: I1i1iI1i / i11Ii11I1Ii1i / iii1I1I
  O0OooOO = re . compile ( '"(.*?)"' ) . findall ( O0OooOO ) [ 0 ] ;
  O0OooOO = base64 . b64decode ( O0OooOO ) ;
  O0OooOO = urllib . unquote ( O0OooOO ) ;
 print O0OooOO
 return O0OooOO
 if 25 - 25: oOooOoO0Oo0O % O0 + i1IIi - i11Ii11I1Ii1i
def III1IiI1i1i ( page_data ) :
 print 'get_dag_url2' , page_data
 o0OOOOOo0 = I1I1 ( page_data ) ;
 oooOoO = '(http.*)'
 import uuid
 O0Oo0 = str ( uuid . uuid1 ( ) ) . upper ( )
 iIIIi1IiI11I1 = re . compile ( oooOoO ) . findall ( o0OOOOOo0 )
 O0Ooo000 = [ ( 'X-Playback-Session-Id' , O0Oo0 ) ]
 for IIi11iI1Iii in iIIIi1IiI11I1 :
  try :
   IiIi1i = I1I1 ( IIi11iI1Iii , headers = O0Ooo000 ) ;
   if 50 - 50: II / i1IIi % OoooooooOO
  except : pass
  if 83 - 83: IiiI * IiiI + iii1I1I
 return page_data + '|&X-Playback-Session-Id=' + O0Oo0
 if 57 - 57: O0 - O0 . IiiI / oOoO0oo0OOOo / O0oo0OO0
 if 20 - 20: iii1I1I * i11i - i11ii11iIi11i - Iii1ii1II11i * II
def I1i1II1 ( page_data ) :
 print 'get_dag_url' , page_data
 if page_data . startswith ( 'http://dag.total-stream.net' ) :
  O0Ooo000 = [ ( 'User-Agent' , 'Verismo-BlackUI_(2.4.7.5.8.0.34)' ) ]
  page_data = I1I1 ( page_data , headers = O0Ooo000 ) ;
  if 89 - 89: i1iIi11iIIi1I / i1iIi11iIIi1I
 if '127.0.0.1' in page_data :
  return iIIIiiiiIiI1III ( page_data )
 elif oOO ( page_data , 'wmsAuthSign%3D([^%&]+)' ) != '' :
  iIiI = oOO ( page_data , '&ver_t=([^&]+)&' ) + '?wmsAuthSign=' + oOO ( page_data , 'wmsAuthSign%3D([^%&]+)' ) + '==/mp4:' + oOO ( page_data , '\\?y=([^&]+)&' )
 else :
  iIiI = oOO ( page_data , 'href="([^"]+)"[^"]+$' )
  if len ( iIiI ) == 0 :
   iIiI = page_data
 iIiI = iIiI . replace ( ' ' , '%20' )
 return iIiI
 if 80 - 80: Iii1ii1II11i % Iii1ii1II11i % O0 - i11iIiiIii . Oo0ooO0oo0oO / O0
def oOO ( data , re_patten ) :
 ooO0oO00O0o = ''
 OoOO0o = re . search ( re_patten , data )
 if OoOO0o != None :
  ooO0oO00O0o = OoOO0o . group ( 1 )
 else :
  ooO0oO00O0o = ''
 return ooO0oO00O0o
 if 13 - 13: oOooOoO0Oo0O + O0 - IiiI % I11i11Ii / O0oo0OO0 . i1IIi
def iIIIiiiiIiI1III ( page_data ) :
 iIiI = ''
 if '127.0.0.1' in page_data :
  iIiI = oOO ( page_data , '&ver_t=([^&]+)&' ) + ' live=true timeout=15 playpath=' + oOO ( page_data , '\\?y=([a-zA-Z0-9-_\\.@]+)' )
  if 60 - 60: I11i11Ii . I1i1iI1i % oOooOoO0Oo0O - II
 if oOO ( page_data , 'token=([^&]+)&' ) != '' :
  iIiI = iIiI + '?token=' + oOO ( page_data , 'token=([^&]+)&' )
 elif oOO ( page_data , 'wmsAuthSign%3D([^%&]+)' ) != '' :
  iIiI = oOO ( page_data , '&ver_t=([^&]+)&' ) + '?wmsAuthSign=' + oOO ( page_data , 'wmsAuthSign%3D([^%&]+)' ) + '==/mp4:' + oOO ( page_data , '\\?y=([^&]+)&' )
 else :
  iIiI = oOO ( page_data , 'HREF="([^"]+)"' )
  if 79 - 79: OoooooooOO / IiiI . O0
 if 'dag1.asx' in iIiI :
  return I1i1II1 ( iIiI )
  if 79 - 79: Iii1ii1II11i - i11i
 if 'devinlivefs.fplive.net' not in iIiI :
  iIiI = iIiI . replace ( 'devinlive' , 'flive' )
 if 'permlivefs.fplive.net' not in iIiI :
  iIiI = iIiI . replace ( 'permlive' , 'flive' )
 return iIiI
 if 43 - 43: i1IIi + O0 % i1iIi11iIIi1I / O0oo0OO0 * oOooOoO0Oo0O
 if 89 - 89: oOooOoO0Oo0O . I11i11Ii + IiiI . O0 % oOoO0oo0OOOo
def Ooo00O0 ( str_eval ) :
 OoO0OOoO0 = ""
 try :
  iiI11i = "w,i,s,e=(" + str_eval + ')'
  exec ( iiI11i )
  OoO0OOoO0 = o0Oo ( w , i , s , e )
 except : traceback . print_exc ( file = sys . stdout )
 if 4 - 4: i11i
 return OoO0OOoO0
 if 20 - 20: i11iIiiIii % OoooooooOO . I1i1iI1i / O00oOoOoO0o0O
def o0Oo ( w , i , s , e ) :
 Ii11 = 0 ;
 I1i1ii = 0 ;
 O0000oo00oOOO = 0 ;
 oOIii11111iiI = [ ] ;
 o0OOOOoO = [ ] ;
 while True :
  if ( Ii11 < 5 ) :
   o0OOOOoO . append ( w [ Ii11 ] )
  elif ( Ii11 < len ( w ) ) :
   oOIii11111iiI . append ( w [ Ii11 ] ) ;
  Ii11 += 1 ;
  if ( I1i1ii < 5 ) :
   o0OOOOoO . append ( i [ I1i1ii ] )
  elif ( I1i1ii < len ( i ) ) :
   oOIii11111iiI . append ( i [ I1i1ii ] )
  I1i1ii += 1 ;
  if ( O0000oo00oOOO < 5 ) :
   o0OOOOoO . append ( s [ O0000oo00oOOO ] )
  elif ( O0000oo00oOOO < len ( s ) ) :
   oOIii11111iiI . append ( s [ O0000oo00oOOO ] ) ;
  O0000oo00oOOO += 1 ;
  if ( len ( w ) + len ( i ) + len ( s ) + len ( e ) == len ( oOIii11111iiI ) + len ( o0OOOOoO ) + len ( e ) ) :
   break ;
   if 70 - 70: i11i + II + i11iIiiIii - i1IIi / I1i1iI1i
 iI1IIiiIIIII = '' . join ( oOIii11111iiI )
 i1iIii = '' . join ( o0OOOOoO )
 I1i1ii = 0 ;
 o0 = [ ] ;
 for Ii11 in range ( 0 , len ( oOIii11111iiI ) , 2 ) :
  if 52 - 52: II % O0 . i1IIi . OoooooooOO
  i1i111111ii = - 1 ;
  if ( ord ( i1iIii [ I1i1ii ] ) % 2 ) :
   i1i111111ii = 1 ;
   if 83 - 83: i1iIi11iIIi1I + iii1I1I - oOoO0oo0OOOo + iIii1I11I1II1 % I11i11Ii
  o0 . append ( chr ( int ( iI1IIiiIIIII [ Ii11 : Ii11 + 2 ] , 36 ) - i1i111111ii ) ) ;
  I1i1ii += 1 ;
  if ( I1i1ii >= len ( o0OOOOoO ) ) :
   I1i1ii = 0 ;
 I1IiiIiii1 = '' . join ( o0 )
 if 'eval(function(w,i,s,e)' in I1IiiIiii1 :
  print 'STILL GOing'
  I1IiiIiii1 = re . compile ( 'eval\(function\(w,i,s,e\).*}\((.*?)\)' ) . findall ( I1IiiIiii1 ) [ 0 ]
  return Ooo00O0 ( I1IiiIiii1 )
 else :
  print 'FINISHED'
  return I1IiiIiii1
  if 23 - 23: oOoO0oo0OOOo + O0oo0OO0 % i11ii11iIi11i % oOooOoO0Oo0O % OoooooooOO
def IIIiI1Ii11 ( page_value , regex_for_text = '' , iterations = 1 , total_iteration = 1 ) :
 try :
  OOOOoo00OO0O0Ooo0 = None
  if page_value . startswith ( "http" ) :
   page_value = I1I1 ( page_value )
  print 'page_value' , page_value
  if regex_for_text and len ( regex_for_text ) > 0 :
   page_value = re . compile ( regex_for_text ) . findall ( page_value ) [ 0 ]
   if 93 - 93: i11Ii11I1Ii1i
  page_value = II11iIIii ( page_value , iterations , total_iteration )
 except : traceback . print_exc ( file = sys . stdout )
 print 'unpacked' , page_value
 if 'sav1live.tv' in page_value :
  page_value = page_value . replace ( 'sav1live.tv' , 'sawlive.tv' )
  print 'sav1 unpacked' , page_value
 return page_value
 if 57 - 57: O0 * IiiI . i11iIiiIii
def II11iIIii ( sJavascript , iteration = 1 , totaliterations = 2 ) :
 print 'iteration' , iteration
 if sJavascript . startswith ( 'var _0xcb8a=' ) :
  oo0o = sJavascript . split ( 'var _0xcb8a=' )
  iiI11i = "myarray=" + oo0o [ 1 ] . split ( "eval(" ) [ 0 ]
  exec ( iiI11i )
  IioOooOOo00ooO = 62
  o0OO0oooo = int ( oo0o [ 1 ] . split ( ",62," ) [ 1 ] . split ( ',' ) [ 0 ] )
  I11II1i1 = myarray [ 0 ]
  IiI1ii11I1 = myarray [ 3 ]
  with open ( 'temp file' + str ( iteration ) + '.js' , "wb" ) as I1i1iI :
   I1i1iI . write ( str ( IiI1ii11I1 ) )
   if 30 - 30: O00oOoOoO0o0O % i11ii11iIi11i / IiiI * O0 * O0oo0OO0 . oOooOoO0Oo0O
 else :
  if 46 - 46: i11ii11iIi11i - O0
  oo0o = sJavascript . split ( "rn p}('" )
  print oo0o
  if 70 - 70: O00oOoOoO0o0O + I11i11Ii * iIii1I11I1II1 . oOooOoO0Oo0O * O00oOoOoO0o0O
  I11II1i1 , IioOooOOo00ooO , o0OO0oooo , IiI1ii11I1 = ( '' , '0' , '0' , '' )
  if 49 - 49: oOoO0oo0OOOo
  iiI11i = "p1,a1,c1,k1=('" + oo0o [ 1 ] . split ( ".spli" ) [ 0 ] + ')'
  exec ( iiI11i )
 IiI1ii11I1 = IiI1ii11I1 . split ( '|' )
 oo0o = oo0o [ 1 ] . split ( "))'" )
 if 25 - 25: Oo0ooO0oo0oO . OoooooooOO * iIii1I11I1II1 . oOoO0oo0OOOo / O0 + O0oo0OO0
 if 68 - 68: I11i11Ii
 if 22 - 22: iii1I1I
 if 22 - 22: Oo0ooO0oo0oO * O00oOoOoO0o0O - I11i11Ii * O0 / i11iIiiIii
 if 78 - 78: I11i11Ii * O0 / i11Ii11I1Ii1i + OoooooooOO + iii1I1I
 if 23 - 23: Oo0ooO0oo0oO % OoooooooOO / iIii1I11I1II1 + IiiI / i1IIi / oOoO0oo0OOOo
 if 94 - 94: i1IIi
 if 36 - 36: oOooOoO0Oo0O + I11i11Ii
 if 46 - 46: Oo0ooO0oo0oO
 if 65 - 65: i1IIi . IiiI / i11Ii11I1Ii1i
 if 11 - 11: I1i1iI1i * i11Ii11I1Ii1i / i11Ii11I1Ii1i - iii1I1I
 if 68 - 68: oOooOoO0Oo0O % I1i1iI1i - I1i1iI1i / oOooOoO0Oo0O + IiiI - I11i11Ii
 if 65 - 65: i11Ii11I1Ii1i - i1IIi
 if 62 - 62: O00oOoOoO0o0O / Iii1ii1II11i % I11i11Ii . OoooooooOO / i11iIiiIii / II
 if 60 - 60: oOooOoO0Oo0O % Iii1ii1II11i / oOoO0oo0OOOo % Iii1ii1II11i * i11iIiiIii / Oo0ooO0oo0oO
 if 34 - 34: II - iii1I1I
 if 25 - 25: Iii1ii1II11i % oOooOoO0Oo0O + i11iIiiIii + O0 * OoooooooOO
 if 64 - 64: i1IIi
 if 10 - 10: II % O0 / oOooOoO0Oo0O % O00oOoOoO0o0O
 if 25 - 25: i11i / i1iIi11iIIi1I
 if 64 - 64: O0 % i11Ii11I1Ii1i
 if 40 - 40: oOoO0oo0OOOo + O00oOoOoO0o0O
 iiii111II = ''
 oOoO0OOO00O = ''
 if 77 - 77: i11iIiiIii % I1i1iI1i + II % OoooooooOO - O00oOoOoO0o0O
 if 26 - 26: I11i11Ii + O0 - iIii1I11I1II1
 iiI1 = str ( I1IIIIIi1IIiI ( I11II1i1 , IioOooOOo00ooO , o0OO0oooo , IiI1ii11I1 , iiii111II , oOoO0OOO00O , iteration ) )
 if 26 - 26: oOoO0oo0OOOo % iii1I1I + iii1I1I % O00oOoOoO0o0O * i11iIiiIii / Oo0ooO0oo0oO
 if 64 - 64: Iii1ii1II11i % i11ii11iIi11i / i11i % i11Ii11I1Ii1i - Oo0ooO0oo0oO
 if 2 - 2: II - IiiI + oOoO0oo0OOOo * i1iIi11iIIi1I / Oo0ooO0oo0oO
 if 26 - 26: iii1I1I * I11i11Ii
 if 31 - 31: O00oOoOoO0o0O * Iii1ii1II11i . O0oo0OO0
 if iteration >= totaliterations :
  if 35 - 35: O00oOoOoO0o0O
  return iiI1
 else :
  if 94 - 94: i11Ii11I1Ii1i / i11iIiiIii % O0
  return II11iIIii ( iiI1 , iteration + 1 )
  if 70 - 70: O00oOoOoO0o0O - I11i11Ii / OoooooooOO % OoooooooOO
def I1IIIIIi1IIiI ( p , a , c , k , e , d , iteration , v = 1 ) :
 if 95 - 95: OoooooooOO % OoooooooOO . O0oo0OO0
 if 26 - 26: Iii1ii1II11i + I1i1iI1i - i11i . i11i + IiiI + i11ii11iIi11i
 if 68 - 68: O0
 while ( c >= 1 ) :
  c = c - 1
  if ( k [ c ] ) :
   o0oOoO00 = str ( oOO000 ( c , a ) )
   if v == 1 :
    p = re . sub ( '\\b' + o0oOoO00 + '\\b' , k [ c ] , p )
   else :
    p = OoOooO ( p , o0oOoO00 , k [ c ] )
    if 70 - 70: iIii1I11I1II1 * I1i1iI1i - iii1I1I / I11i11Ii % Iii1ii1II11i
    if 66 - 66: OoooooooOO + i11Ii11I1Ii1i * Oo0ooO0oo0oO
    if 2 - 2: Oo0ooO0oo0oO . i1iIi11iIIi1I / Iii1ii1II11i
    if 41 - 41: i1iIi11iIIi1I . II * I1i1iI1i * II
    if 74 - 74: iIii1I11I1II1 / oOoO0oo0OOOo
    if 58 - 58: iIii1I11I1II1 - oOooOoO0Oo0O % oOoO0oo0OOOo % OoooooooOO * iIii1I11I1II1 + iii1I1I
 return p
 if 25 - 25: iii1I1I % O0
 if 44 - 44: II . O0oo0OO0 * i11i / I1i1iI1i + iIii1I11I1II1
 if 14 - 14: O0 % I1i1iI1i % O0oo0OO0 * Iii1ii1II11i
def OoOooO ( source_str , word_to_find , replace_with ) :
 o0OOO00ooo = None
 o0OOO00ooo = source_str . split ( word_to_find )
 if len ( o0OOO00ooo ) > 1 :
  I1iI11IiiI11i = [ ]
  IIIiIIIi11I = 0
  for II1O0o00 in o0OOO00ooo :
   if 48 - 48: O00oOoOoO0o0O + i11Ii11I1Ii1i + Oo0ooO0oo0oO / O00oOoOoO0o0O / Oo0ooO0oo0oO
   I1iI11IiiI11i . append ( II1O0o00 )
   OoO00ooO = word_to_find
   if 71 - 71: I1i1iI1i
   if 18 - 18: i11Ii11I1Ii1i + Oo0ooO0oo0oO - i11Ii11I1Ii1i
   if IIIiIIIi11I == len ( o0OOO00ooo ) - 1 :
    OoO00ooO = ''
   else :
    if len ( II1O0o00 ) == 0 :
     if ( len ( o0OOO00ooo [ IIIiIIIi11I + 1 ] ) == 0 and word_to_find [ 0 ] . lower ( ) not in 'abcdefghijklmnopqrstuvwxyz1234567890_' ) or ( len ( o0OOO00ooo [ IIIiIIIi11I + 1 ] ) > 0 and o0OOO00ooo [ IIIiIIIi11I + 1 ] [ 0 ] . lower ( ) not in 'abcdefghijklmnopqrstuvwxyz1234567890_' ) :
      OoO00ooO = replace_with
      if 55 - 55: i11Ii11I1Ii1i % I11i11Ii % oOoO0oo0OOOo
    else :
     if ( o0OOO00ooo [ IIIiIIIi11I ] [ - 1 ] . lower ( ) not in 'abcdefghijklmnopqrstuvwxyz1234567890_' ) and ( ( len ( o0OOO00ooo [ IIIiIIIi11I + 1 ] ) == 0 and word_to_find [ 0 ] . lower ( ) not in 'abcdefghijklmnopqrstuvwxyz1234567890_' ) or ( len ( o0OOO00ooo [ IIIiIIIi11I + 1 ] ) > 0 and o0OOO00ooo [ IIIiIIIi11I + 1 ] [ 0 ] . lower ( ) not in 'abcdefghijklmnopqrstuvwxyz1234567890_' ) ) :
      OoO00ooO = replace_with
      if 29 - 29: I1i1iI1i / iIii1I11I1II1 + IiiI % Oo0ooO0oo0oO % O00oOoOoO0o0O
   I1iI11IiiI11i . append ( OoO00ooO )
   IIIiIIIi11I += 1
   if 46 - 46: iIii1I11I1II1
  source_str = '' . join ( I1iI11IiiI11i )
 return source_str
 if 70 - 70: i1IIi . O00oOoOoO0o0O
def oO00o0O00o ( num , radix ) :
 if 98 - 98: i11Ii11I1Ii1i . iii1I1I
 i1i1IIIIIIIi = ""
 if num == 0 : return '0'
 while num > 0 :
  i1i1IIIIIIIi = "0123456789abcdefghijklmnopqrstuvwxyz" [ num % radix ] + i1i1IIIIIIIi
  num /= radix
 return i1i1IIIIIIIi
 if 60 - 60: i1iIi11iIIi1I - i1IIi . iii1I1I + iii1I1I * iii1I1I + O0oo0OO0
def oOO000 ( cc , a ) :
 o0oOoO00 = "" if cc < a else oOO000 ( int ( cc / a ) , a )
 cc = ( cc % a )
 OOoOOooO0OoO = chr ( cc + 29 ) if cc > 35 else str ( oO00o0O00o ( cc , 36 ) )
 return o0oOoO00 + OOoOOooO0OoO
 if 58 - 58: O0oo0OO0 % OoooooooOO
 if 49 - 49: IiiI + O0 . O0oo0OO0 * OoooooooOO
def OoO0O00O0oo0O ( url , headers = None ) :
 try :
  if headers is None :
   if 82 - 82: IiiI
   if 54 - 54: oOoO0oo0OOOo + O00oOoOoO0o0O - iIii1I11I1II1 % i11Ii11I1Ii1i % I1i1iI1i
   headers = { '\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/Apollo Gecko/20100101 Firefox/19.0' , 'Apollo' : 'Direitos Reservados' , 'Referer' : 'https://deus-apollo.ml' , 'Ref' : 'copyright © 2017-2020' , 'DEUS' : 'Apollo' }
  ooo = urllib2 . Request ( url , None , headers )
  I1I1i1I = urllib2 . urlopen ( ooo )
  ii1I = I1I1i1I . read ( )
  I1I1i1I . close ( )
  return ii1I
 except urllib2 . URLError , iiii111II :
  O0OO0O ( 'URL: ' + url )
  if hasattr ( iiii111II , 'code' ) :
   O0OO0O ( 'Falha com o código de erro - %s.' % iiii111II . code )
   if 19 - 19: IiiI / iIii1I11I1II1 % i1IIi . OoooooooOO
   if 57 - 57: i11Ii11I1Ii1i . I11i11Ii - i1iIi11iIIi1I - i11iIiiIii * II / oOoO0oo0OOOo
   xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( iiii111II . code ) + ",10000," + OOoO00 + ")" )
  elif hasattr ( iiii111II , 'reason' ) :
   O0OO0O ( 'Falha ao acessar um servidor.' )
   O0OO0O ( 'Razão: %s' % iiii111II . reason )
   if 79 - 79: IiiI + oOoO0oo0OOOo % I11i11Ii * oOoO0oo0OOOo
   xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( iiii111II . reason ) + ",10000," + OOoO00 + ")" )
   if 21 - 21: Oo0ooO0oo0oO
def O00oo ( cookieJar ) :
 try :
  i11Ii = ""
  for IIII1i , iiiI1IiiI in enumerate ( cookieJar ) :
   i11Ii += iiiI1IiiI . name + "=" + iiiI1IiiI . value + ";"
 except : pass
 if 70 - 70: O00oOoOoO0o0O . iii1I1I * I11i11Ii / iii1I1I
 return i11Ii
 if 83 - 83: OoooooooOO + i1iIi11iIIi1I * Iii1ii1II11i . O0
 if 13 - 13: oOoO0oo0OOOo
def I11i11i1 ( cookieJar , COOKIEFILE ) :
 try :
  I11 = os . path . join ( IIi1I11I1II , COOKIEFILE )
  cookieJar . save ( I11 , ignore_discard = True )
 except : pass
 if 7 - 7: oOooOoO0Oo0O + I1i1iI1i / i11iIiiIii / I11i11Ii
def oo000oO ( COOKIEFILE ) :
 if 97 - 97: II . O00oOoOoO0o0O / oOooOoO0Oo0O
 o00OO0o0 = None
 if COOKIEFILE :
  try :
   I11 = os . path . join ( IIi1I11I1II , COOKIEFILE )
   o00OO0o0 = cookielib . LWPCookieJar ( )
   o00OO0o0 . load ( I11 , ignore_discard = True )
  except :
   o00OO0o0 = None
   if 39 - 39: i11Ii11I1Ii1i % IiiI - Oo0ooO0oo0oO
 if not o00OO0o0 :
  o00OO0o0 = cookielib . LWPCookieJar ( )
  if 48 - 48: i11iIiiIii
 return o00OO0o0
 if 52 - 52: iIii1I11I1II1
def ii ( fun_call , page_data , Cookie_Jar ) :
 I1OO0o = ''
 if oo0OOo0 not in sys . path :
  sys . path . append ( oo0OOo0 )
  if 99 - 99: i11i - II + Oo0ooO0oo0oO * I1i1iI1i / II
 print fun_call
 try :
  ii1o0 = 'import ' + fun_call . split ( '.' ) [ 0 ]
  print ii1o0 , sys . path
  exec ( ii1o0 )
  print 'done'
 except :
  print 'error in import'
  traceback . print_exc ( file = sys . stdout )
 print 'ret_val=' + fun_call
 exec ( 'ret_val=' + fun_call )
 print I1OO0o
 if 56 - 56: i11Ii11I1Ii1i * oOoO0oo0OOOo + O00oOoOoO0o0O
 return str ( I1OO0o )
 if 48 - 48: I1i1iI1i * i1iIi11iIIi1I % II - O00oOoOoO0o0O
def Oo0000OOO0 ( url ) :
 Ooo0O0OO = I1I1 ( url )
 iiI1iiii1Iii = ""
 OoOOOOOoOo0 = ""
 iIi = "<script.*?src=\"(.*?recap.*?)\""
 ooO0oO00O0o = re . findall ( iIi , Ooo0O0OO )
 oOo = False
 ooOo0o = None
 OoOOOOOoOo0 = None
 if 44 - 44: I11i11Ii . I11i11Ii + OoooooooOO * i11iIiiIii / O00oOoOoO0o0O + II
 if ooO0oO00O0o and len ( ooO0oO00O0o ) > 0 :
  iIiII11 = ooO0oO00O0o [ 0 ]
  oOo = True
  if 33 - 33: oOoO0oo0OOOo * Oo0ooO0oo0oO * iIii1I11I1II1 + i11iIiiIii . OoooooooOO
  O0O0 = 'challenge.*?\'(.*?)\''
  oO0oo = '\'(.*?)\''
  o00o0o000Oo = I1I1 ( iIiII11 )
  iiI1iiii1Iii = re . findall ( O0O0 , o00o0o000Oo ) [ 0 ]
  Oooo00OOo = 'http://www.google.com/recaptcha/api/reload?c=' ;
  iIiII = iIiII11 . split ( 'k=' ) [ 1 ]
  Oooo00OOo += iiI1iiii1Iii + '&k=' + iIiII + '&captcha_k=1&type=image&lang=en-GB'
  OooOO = I1I1 ( Oooo00OOo )
  ooOo0o = re . findall ( oO0oo , OooOO ) [ 0 ]
  iio0oo0Oo = 'http://www.google.com/recaptcha/api/image?c=' + ooOo0o
  if not iio0oo0Oo . startswith ( "http" ) :
   iio0oo0Oo = 'http://www.google.com/recaptcha/api/' + iio0oo0Oo
  import random
  Ii1 = random . randrange ( 100 , 1000 , 5 )
  i1i1I1II = os . path . join ( IIi1I11I1II , str ( Ii1 ) + "captcha.img" )
  o0o0oO = open ( i1i1I1II , "wb" )
  o0o0oO . write ( I1I1 ( iio0oo0Oo ) )
  o0o0oO . close ( )
  O00o = o0o0ooOo00 ( captcha = i1i1I1II )
  OoOOOOOoOo0 = O00o . get ( )
  os . remove ( i1i1I1II )
 return ooOo0o , OoOOOOOoOo0
 if 91 - 91: i1iIi11iIIi1I * II % i1iIi11iIIi1I . oOoO0oo0OOOo * IiiI . iii1I1I
def I1I1 ( url , cookieJar = None , post = None , timeout = 20 , headers = None ) :
 if 13 - 13: IiiI
 if 80 - 80: I11i11Ii % I1i1iI1i % OoooooooOO * I11i11Ii % O0oo0OO0
 I1iIIIiI = urllib2 . HTTPCookieProcessor ( cookieJar )
 OOOOO0oo0O0O0 = urllib2 . build_opener ( I1iIIIiI , urllib2 . HTTPBasicAuthHandler ( ) , urllib2 . HTTPHandler ( ) )
 if 41 - 41: OoooooooOO / i1IIi
 ooo = urllib2 . Request ( url )
 ooo . add_header ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.154 Safari/537.36' )
 if headers :
  for iiiii11I1 , OO0Ooo0Oooo in headers :
   ooo . add_header ( iiiii11I1 , OO0Ooo0Oooo )
   if 4 - 4: I1i1iI1i
 I1I1i1I = OOOOO0oo0O0O0 . open ( ooo , post , timeout = timeout )
 ii1 = I1I1i1I . read ( )
 I1I1i1I . close ( )
 return ii1 ;
 if 93 - 93: Iii1ii1II11i % i1IIi
def OOo0 ( str , reg = None ) :
 if reg :
  str = re . findall ( reg , str ) [ 0 ]
 OOoo00 = urllib . unquote ( str [ 0 : len ( str ) - 1 ] ) ;
 I1I1O0O = '' ;
 for oooIIiIiI1I in range ( len ( OOoo00 ) ) :
  I1I1O0O += chr ( ord ( OOoo00 [ oooIIiIiI1I ] ) - OOoo00 [ len ( OOoo00 ) - 1 ] ) ;
 I1I1O0O = urllib . unquote ( I1I1O0O )
 print I1I1O0O
 return I1I1O0O
 if 66 - 66: IiiI - i1IIi % IiiI / O0oo0OO0 % i1IIi . O00oOoOoO0o0O
def O00O ( str ) :
 Iiio0OoooO = re . findall ( 'unescape\(\'(.*?)\'' , str )
 print 'js' , Iiio0OoooO
 if ( not Iiio0OoooO == None ) and len ( Iiio0OoooO ) > 0 :
  for ooOO0 in Iiio0OoooO :
   if 81 - 81: i11iIiiIii + O0oo0OO0 % i11iIiiIii - i1IIi
   str = str . replace ( ooOO0 , urllib . unquote ( ooOO0 ) )
 return str
 if 9 - 9: Iii1ii1II11i
Ii1I1iIIIiiii = 0
def oO0ooooo0O00 ( m , html_page , cookieJar ) :
 global Ii1I1iIIIiiii
 Ii1I1iIIIiiii += 1
 O0oIi1iIiIi1I11 = m [ 'expre' ]
 iI111II1ii = m [ 'page' ]
 ii1I11 = re . compile ( '\$LiveStreamCaptcha\[([^\]]*)\]' ) . findall ( O0oIi1iIiIi1I11 ) [ 0 ]
 if 90 - 90: oOoO0oo0OOOo / iii1I1I - iii1I1I . oOooOoO0Oo0O
 iIiII11 = re . compile ( ii1I11 ) . findall ( html_page ) [ 0 ]
 print O0oIi1iIiIi1I11 , ii1I11 , iIiII11
 if not iIiII11 . startswith ( "http" ) :
  o0OOoo0oOoO00 = 'http://' + "" . join ( iI111II1ii . split ( '/' ) [ 2 : 3 ] )
  if iIiII11 . startswith ( "/" ) :
   iIiII11 = o0OOoo0oOoO00 + iIiII11
  else :
   iIiII11 = o0OOoo0oOoO00 + '/' + iIiII11
   if 48 - 48: IiiI
 i1i1I1II = os . path . join ( IIi1I11I1II , str ( Ii1I1iIIIiiii ) + "captcha.jpg" )
 o0o0oO = open ( i1i1I1II , "wb" )
 print ' c capurl' , iIiII11
 ooo = urllib2 . Request ( iIiII11 )
 ooo . add_header ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 6.1; rv:14.0) Gecko/20100101 Firefox/14.0.1' )
 if 'refer' in m :
  ooo . add_header ( 'Referer' , m [ 'refer' ] )
 if 'agent' in m :
  ooo . add_header ( 'User-agent' , m [ 'agent' ] )
 if 'setcookie' in m :
  print 'adding cookie' , m [ 'setcookie' ]
  ooo . add_header ( 'Cookie' , m [ 'setcookie' ] )
  if 96 - 96: i11Ii11I1Ii1i . OoooooooOO
  if 39 - 39: iii1I1I + i1iIi11iIIi1I
  if 80 - 80: iii1I1I % i1iIi11iIIi1I / i11ii11iIi11i
  if 54 - 54: I11i11Ii % i1iIi11iIIi1I - iii1I1I - O00oOoOoO0o0O
 urllib2 . urlopen ( ooo )
 I1I1i1I = urllib2 . urlopen ( ooo )
 if 71 - 71: i11Ii11I1Ii1i . i11iIiiIii
 o0o0oO . write ( I1I1i1I . read ( ) )
 I1I1i1I . close ( )
 o0o0oO . close ( )
 O00o = o0o0ooOo00 ( captcha = i1i1I1II )
 OoOOOOOoOo0 = O00o . get ( )
 return OoOOOOOoOo0
 if 56 - 56: O0 * Oo0ooO0oo0oO + Oo0ooO0oo0oO * iIii1I11I1II1 / i11Ii11I1Ii1i * II
class o0o0ooOo00 ( xbmcgui . WindowDialog ) :
 def __init__ ( self , * args , ** kwargs ) :
  self . cptloc = kwargs . get ( 'captcha' )
  self . img = xbmcgui . ControlImage ( 335 , 30 , 624 , 60 , self . cptloc )
  self . addControl ( self . img )
  self . kbd = xbmc . Keyboard ( )
  if 25 - 25: iIii1I11I1II1 . O00oOoOoO0o0O * i11iIiiIii + I11i11Ii * O00oOoOoO0o0O
 def get ( self ) :
  self . show ( )
  time . sleep ( 2 )
  self . kbd . doModal ( )
  if ( self . kbd . isConfirmed ( ) ) :
   o0oOooO0oo00 = self . kbd . getText ( )
   self . close ( )
   return o0oOooO0oo00
  self . close ( )
  return False
  if 70 - 70: oOooOoO0Oo0O + O0oo0OO0
def oooo ( ) :
 import time
 return str ( int ( time . time ( ) * 1000 ) )
 if 70 - 70: I1i1iI1i . i11iIiiIii
def iii1IIiI ( ) :
 import time
 return str ( int ( time . time ( ) ) )
 if 76 - 76: Oo0ooO0oo0oO . I1i1iI1i % Oo0ooO0oo0oO - II
def Oo0O0oo ( ) :
 o0O0 = [ ]
 oO0o0 = sys . argv [ 2 ]
 if len ( oO0o0 ) >= 2 :
  ooOoOoO0 = sys . argv [ 2 ]
  Iii1II1ii = ooOoOoO0 . replace ( '?' , '' )
  if ( ooOoOoO0 [ len ( ooOoOoO0 ) - 1 ] == '/' ) :
   ooOoOoO0 = ooOoOoO0 [ 0 : len ( ooOoOoO0 ) - 2 ]
  ooOo00 = Iii1II1ii . split ( '&' )
  o0O0 = { }
  for oooIIiIiI1I in range ( len ( ooOo00 ) ) :
   OO0 = { }
   OO0 = ooOo00 [ oooIIiIiI1I ] . split ( '=' )
   if ( len ( OO0 ) ) == 2 :
    o0O0 [ OO0 [ 0 ] ] = OO0 [ 1 ]
 return o0O0
 if 11 - 11: IiiI . IiiI + i11i * i11ii11iIi11i . I1i1iI1i
 if 10 - 10: Oo0ooO0oo0oO * O0oo0OO0 - i11Ii11I1Ii1i . O00oOoOoO0o0O - iii1I1I
def oOO0O00OoOo ( ) :
 ii1II = json . loads ( open ( ii11IIII11I ) . read ( ) )
 ooOO00oOOo000 = len ( ii1II )
 for oooIIiIiI1I in ii1II :
  O0000OOO0 = oooIIiIiI1I [ 0 ]
  oO0O00oOOoooO = oooIIiIiI1I [ 1 ]
  I1i1I11 = oooIIiIiI1I [ 2 ]
  try :
   o00 = oooIIiIiI1I [ 3 ]
   if o00 == None :
    raise
  except :
   if IIiIiiIi . getSetting ( 'use_thumb' ) == "true" :
    o00 = I1i1I11
   else :
    o00 = i1Iii11I1i
  try : iIIIiI = oooIIiIiI1I [ 5 ]
  except : iIIIiI = None
  try : O0OoOoO00O = oooIIiIiI1I [ 6 ]
  except : O0OoOoO00O = None
  if 9 - 9: oOooOoO0Oo0O
  if oooIIiIiI1I [ 4 ] == 0 :
   oo0o0000Oo0 ( oO0O00oOOoooO , O0000OOO0 , I1i1I11 , o00 , '' , '' , '' , 'fav' , iIIIiI , O0OoOoO00O , ooOO00oOOo000 )
  else :
   o0Oo00 ( O0000OOO0 , oO0O00oOOoooO , oooIIiIiI1I [ 4 ] , I1i1I11 , i1Iii11I1i , '' , '' , '' , '' , 'fav' )
   if 94 - 94: i11i
   if 37 - 37: OoooooooOO
def oo0OooO ( name , url , iconimage , fanart , mode , playlist = None , regexs = None ) :
 I11iI1 = [ ]
 if not os . path . exists ( ii11IIII11I + 'txt' ) :
  os . makedirs ( ii11IIII11I + 'txt' )
 if not os . path . exists ( OOooo ) :
  os . makedirs ( OOooo )
 try :
  if 96 - 96: oOoO0oo0OOOo % I1i1iI1i / iii1I1I
  name = name . encode ( 'utf-8' , 'ignore' )
 except :
  pass
 if os . path . exists ( ii11IIII11I ) == False :
  O0OO0O ( 'Making Favorites File' )
  I11iI1 . append ( ( name , url , iconimage , fanart , mode , playlist , regexs ) )
  i1ii11 = open ( ii11IIII11I , "w" )
  i1ii11 . write ( json . dumps ( I11iI1 ) )
  i1ii11 . close ( )
 else :
  O0OO0O ( 'Appending Favorites' )
  i1ii11 = open ( ii11IIII11I ) . read ( )
  ii1I = json . loads ( i1ii11 )
  ii1I . append ( ( name , url , iconimage , fanart , mode ) )
  o0O0O0ooo0oOO = open ( ii11IIII11I , "w" )
  o0O0O0ooo0oOO . write ( json . dumps ( ii1I ) )
  o0O0O0ooo0oOO . close ( )
  if 63 - 63: i1IIi % i11iIiiIii % i11i * OoooooooOO
  if 40 - 40: I11i11Ii
def iI1Ii11 ( name ) :
 ii1I = json . loads ( open ( ii11IIII11I ) . read ( ) )
 for IIII1i in range ( len ( ii1I ) ) :
  if ii1I [ IIII1i ] [ 0 ] == name :
   del ii1I [ IIII1i ]
   o0O0O0ooo0oOO = open ( ii11IIII11I , "w" )
   o0O0O0ooo0oOO . write ( json . dumps ( ii1I ) )
   o0O0O0ooo0oOO . close ( )
   break
 xbmc . executebuiltin ( "XBMC.Container.Refresh" )
 if 93 - 93: oOooOoO0Oo0O / i11Ii11I1Ii1i / O00oOoOoO0o0O + i11i + i11iIiiIii
def I11IIIiIi11 ( url ) :
 if IIiIiiIi . getSetting ( 'Updatecommonresolvers' ) == 'true' :
  IIi11iI1Iii = os . path . join ( OooOoooOo , 'genesisresolvers.py' )
  if xbmcvfs . exists ( IIi11iI1Iii ) :
   os . remove ( IIi11iI1Iii )
   if 16 - 16: oOooOoO0Oo0O - Iii1ii1II11i . I11i11Ii
  oOo000o = 'https://raw.githubusercontent.com/KelTec-Maedia-Play/master/plugin.video.genesis/commonresolvers.py'
  oOII1i1i1I1iII = urllib . urlretrieve ( oOo000o , IIi11iI1Iii )
  IIiIiiIi . setSetting ( 'Updatecommonresolvers' , 'false' )
 try :
  import genesisresolvers
 except Exception :
  if 48 - 48: iii1I1I . iii1I1I + i11iIiiIii + IiiI % O0
  if 67 - 67: i11Ii11I1Ii1i / O00oOoOoO0o0O * oOooOoO0Oo0O % OoooooooOO
  xbmc . executebuiltin ( "XBMC.Notification(Por favor Ative Atualizar Resolvedores comuns para reproduzir em configurações. - ,10000)" )
  if 46 - 46: I1i1iI1i
 IIiI1i = genesisresolvers . get ( url ) . result
 if url == IIiI1i or IIiI1i is None :
  if 45 - 45: i1IIi . i1iIi11iIIi1I * OoooooooOO - oOooOoO0Oo0O + i11Ii11I1Ii1i * IiiI
  if 2 - 2: I1i1iI1i . I1i1iI1i - Iii1ii1II11i % i1iIi11iIIi1I + I11i11Ii
  xbmc . executebuiltin ( "XBMC.Notification(Using Urlresolver module.. - ,5000)" )
  import urlresolver
  OooOoOOO00O = urlresolver . HostedMediaFile ( url )
  if OooOoOOO00O :
   i11IiIIi11I = urlresolver . resolve ( url )
   IIiI1i = i11IiIIi11I
 if IIiI1i :
  if isinstance ( IIiI1i , list ) :
   for Ii11Iii in IIiI1i :
    I111iIIII11iI = IIiIiiIi . getSetting ( 'quality' )
    if Ii11Iii [ 'quality' ] == 'HD' :
     i11IiIIi11I = Ii11Iii [ 'url' ]
     break
    elif Ii11Iii [ 'quality' ] == 'SD' :
     i11IiIIi11I = Ii11Iii [ 'url' ]
    elif Ii11Iii [ 'quality' ] == '1080p' and IIiIiiIi . getSetting ( '1080pquality' ) == 'true' :
     i11IiIIi11I = Ii11Iii [ 'url' ]
     break
  else :
   i11IiIIi11I = IIiI1i
 return i11IiIIi11I
 if 59 - 59: i11i
def iIiIi11 ( name , mu_playlist , queueVideo = None ) :
 iIIIiI = xbmc . PlayList ( xbmc . PLAYLIST_VIDEO )
 if 42 - 42: O00oOoOoO0o0O % I11i11Ii . i11i / i11i * Oo0ooO0oo0oO
 if '$$LSPlayOnlyOne$$' in mu_playlist [ 0 ] :
  mu_playlist [ 0 ] = mu_playlist [ 0 ] . replace ( '$$LSPlayOnlyOne$$' , '' )
  import urlparse
  o0Ooi1II11i1iI1 = [ ]
  OO0IIi1II11 = 0
  II1i11I1 = xbmcgui . DialogProgress ( )
  II1i11I1 . create ( 'Progress' , 'Trying Multiple Links' )
  for oooIIiIiI1I in mu_playlist :
   if 63 - 63: II - i1IIi
   if 10 - 10: IiiI - O00oOoOoO0o0O . II
   if 8 - 8: iIii1I11I1II1 % Iii1ii1II11i + I11i11Ii
   if oooooOoo0ooo in oooIIiIiI1I :
    if 24 - 24: oOoO0oo0OOOo / O0oo0OO0 / O0oo0OO0 % i11i - Iii1ii1II11i * Iii1ii1II11i
    oOoo0oO = oooIIiIiI1I . split ( oooooOoo0ooo ) [ 1 ] . split ( '&regexs' ) [ 0 ]
    o0Ooi1II11i1iI1 . append ( oOoo0oO )
    if 37 - 37: i11ii11iIi11i + O0 . O0 * I11i11Ii % II / Oo0ooO0oo0oO
    mu_playlist [ OO0IIi1II11 ] = oooIIiIiI1I . split ( oooooOoo0ooo ) [ 0 ] + ( '&regexs' + oooIIiIiI1I . split ( '&regexs' ) [ 1 ] if '&regexs' in oooIIiIiI1I else '' )
   else :
    oOoo0oO = urlparse . urlparse ( oooIIiIiI1I ) . netloc
    if oOoo0oO == '' :
     o0Ooi1II11i1iI1 . append ( name )
    else :
     o0Ooi1II11i1iI1 . append ( oOoo0oO )
   IIII1i = OO0IIi1II11
   OO0IIi1II11 += 1
   if 18 - 18: OoooooooOO
   O0oOo00oooO = o0Ooi1II11i1iI1 [ IIII1i ]
   if II1i11I1 . iscanceled ( ) : return
   II1i11I1 . update ( OO0IIi1II11 / len ( mu_playlist ) * 100 , "" , "Link#%d" % ( OO0IIi1II11 ) , O0oOo00oooO )
   print 'auto playnamexx' , O0oOo00oooO
   if "&mode=19" in mu_playlist [ IIII1i ] :
    if 16 - 16: i1IIi . i1IIi / II % i11ii11iIi11i / oOooOoO0Oo0O * IiiI
    ooo0OO = xbmcgui . ListItem ( O0oOo00oooO , iconImage = I1i1I11 , thumbnailImage = I1i1I11 )
    ooo0OO . setInfo ( type = 'Video' , infoLabels = { 'Title' : O0oOo00oooO } )
    ooo0OO . setProperty ( "IsPlayable" , "true" )
    IIIii11 = I11IIIiIi11 ( mu_playlist [ IIII1i ] . replace ( '&mode=19' , '' ) . replace ( ';' , '' ) )
    ooo0OO . setPath ( IIIii11 )
    if 29 - 29: O0oo0OO0 - O0oo0OO0 / i11Ii11I1Ii1i
    I11IIII = tryplay ( IIIii11 , ooo0OO )
   elif mu_playlist [ IIII1i ] . find ( 'deus-apollo.ml' ) >= 0 :
    oO0O00oOOoooO = Oo00o0OO ( mu_playlist [ IIII1i ] )
    oO0O00oOOoooO = oO0O00oOOoooO . replace ( ';' , '' )
    ooo0OO = xbmcgui . ListItem ( O0oOo00oooO , iconImage = I1i1I11 , thumbnailImage = I1i1I11 )
    ooo0OO . setInfo ( type = 'Video' , infoLabels = { 'Title' : O0oOo00oooO } )
    ooo0OO . setProperty ( "IsPlayable" , "true" )
    ooo0OO . setPath ( oO0O00oOOoooO )
    I11IIII = tryplay ( oO0O00oOOoooO , ooo0OO )
   elif "$doregex" in mu_playlist [ IIII1i ] :
    if 38 - 38: OoooooooOO . oOoO0oo0OOOo . i11i - Oo0ooO0oo0oO
    Oooo0O = mu_playlist [ IIII1i ] . split ( '&regexs=' )
    if 8 - 8: O0oo0OO0 + oOooOoO0Oo0O . oOooOoO0Oo0O . i11ii11iIi11i
    oO0O00oOOoooO , ooOO00o00 = i1II1i ( Oooo0O [ 1 ] , Oooo0O [ 0 ] )
    OOOOooO0 = oO0O00oOOoooO . replace ( ';' , '' )
    if OOOOooO0 . find ( 'deus-apollo.ml' ) >= 0 :
     oO0ooo0O0Ooo = Oo00o0OO ( OOOOooO0 )
    else :
     oO0ooo0O0Ooo = OOOOooO0
    ooo0OO = xbmcgui . ListItem ( O0oOo00oooO , iconImage = I1i1I11 , thumbnailImage = I1i1I11 )
    ooo0OO . setInfo ( type = 'Video' , infoLabels = { 'Title' : O0oOo00oooO } )
    ooo0OO . setProperty ( "IsPlayable" , "true" )
    ooo0OO . setPath ( oO0ooo0O0Ooo )
    if 33 - 33: i11i - I1i1iI1i - i11Ii11I1Ii1i
    I11IIII = tryplay ( oO0ooo0O0Ooo , ooo0OO )
    if 92 - 92: i1iIi11iIIi1I * I1i1iI1i
   else :
    oO0O00oOOoooO = mu_playlist [ IIII1i ]
    oO0O00oOOoooO = oO0O00oOOoooO . split ( '&regexs=' ) [ 0 ]
    ooo0OO = xbmcgui . ListItem ( O0oOo00oooO , iconImage = I1i1I11 , thumbnailImage = I1i1I11 )
    ooo0OO . setInfo ( type = 'Video' , infoLabels = { 'Title' : O0oOo00oooO } )
    ooo0OO . setProperty ( "IsPlayable" , "true" )
    ooo0OO . setPath ( oO0O00oOOoooO )
    if 92 - 92: Iii1ii1II11i
    I11IIII = tryplay ( oO0O00oOOoooO , ooo0OO )
    print 'played' , I11IIII
   print 'played' , I11IIII
   if I11IIII : return
  return
 if IIiIiiIi . getSetting ( 'ask_playlist_items' ) == 'true' and not queueVideo :
  import urlparse
  o0Ooi1II11i1iI1 = [ ]
  OO0IIi1II11 = 0
  for oooIIiIiI1I in mu_playlist :
   if 7 - 7: Oo0ooO0oo0oO
   if oooooOoo0ooo in oooIIiIiI1I :
    if 73 - 73: i1iIi11iIIi1I % IiiI
    oOoo0oO = oooIIiIiI1I . split ( oooooOoo0ooo ) [ 1 ] . split ( '&regexs' ) [ 0 ]
    o0Ooi1II11i1iI1 . append ( oOoo0oO )
    if 32 - 32: iii1I1I + Oo0ooO0oo0oO + iIii1I11I1II1 * I11i11Ii
    mu_playlist [ OO0IIi1II11 ] = oooIIiIiI1I . split ( oooooOoo0ooo ) [ 0 ] + ( '&regexs' + oooIIiIiI1I . split ( '&regexs' ) [ 1 ] if '&regexs' in oooIIiIiI1I else '' )
   else :
    oOoo0oO = urlparse . urlparse ( oooIIiIiI1I ) . netloc
    if oOoo0oO == '' :
     o0Ooi1II11i1iI1 . append ( name )
    else :
     o0Ooi1II11i1iI1 . append ( oOoo0oO )
     if 62 - 62: i11iIiiIii
   OO0IIi1II11 += 1
  oOO0O00Oo0O0o = xbmcgui . Dialog ( )
  if 2 - 2: oOooOoO0Oo0O
  IIII1i = oOO0O00Oo0O0o . select ( II1 , o0Ooi1II11i1iI1 )
  if IIII1i >= 0 :
   O0oOo00oooO = o0Ooi1II11i1iI1 [ IIII1i ]
   print 'playnamexx' , O0oOo00oooO
   if "&mode=19" in mu_playlist [ IIII1i ] :
    if 69 - 69: OoooooooOO / I11i11Ii * II
    ooo0OO = xbmcgui . ListItem ( O0oOo00oooO , iconImage = I1i1I11 , thumbnailImage = I1i1I11 )
    ooo0OO . setInfo ( type = 'Video' , infoLabels = { 'Title' : O0oOo00oooO } )
    ooo0OO . setProperty ( "IsPlayable" , "true" )
    IIIii11 = I11IIIiIi11 ( mu_playlist [ IIII1i ] . replace ( '&mode=19' , '' ) . replace ( ';' , '' ) )
    ooo0OO . setPath ( IIIii11 )
    xbmc . Player ( ) . play ( IIIii11 , ooo0OO )
   elif mu_playlist [ IIII1i ] . find ( 'deus-apollo.ml' ) >= 0 :
    oO0O00oOOoooO = Oo00o0OO ( mu_playlist [ IIII1i ] )
    oO0O00oOOoooO = oO0O00oOOoooO . replace ( ';' , '' )
    ooo0OO = xbmcgui . ListItem ( O0oOo00oooO , iconImage = I1i1I11 , thumbnailImage = I1i1I11 )
    ooo0OO . setInfo ( type = 'Video' , infoLabels = { 'Title' : O0oOo00oooO } )
    ooo0OO . setProperty ( "IsPlayable" , "true" )
    ooo0OO . setPath ( oO0O00oOOoooO )
    xbmc . Player ( ) . play ( oO0O00oOOoooO , ooo0OO )
   elif "$doregex" in mu_playlist [ IIII1i ] :
    if 99 - 99: i11i * iIii1I11I1II1 % O0 * Iii1ii1II11i / i11i % OoooooooOO
    Oooo0O = mu_playlist [ IIII1i ] . split ( '&regexs=' )
    if 14 - 14: I1i1iI1i . I1i1iI1i % i11Ii11I1Ii1i
    oO0O00oOOoooO , ooOO00o00 = i1II1i ( Oooo0O [ 1 ] , Oooo0O [ 0 ] )
    OOOOooO0 = oO0O00oOOoooO . replace ( ';' , '' )
    if OOOOooO0 . find ( 'deus-apollo.ml' ) >= 0 :
 '
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))