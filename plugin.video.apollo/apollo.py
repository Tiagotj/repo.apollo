# encoded by pyprotect
# https://deus-apollo.ml
#checkintegrity

import base64, codecs
magic = 'IyAtKi0gY29kaW5nOiB1dGYtOCAtKi0NCmltcG9ydCB1cmxsaWINCmltcG9ydCB1cmxsaWIyDQppbXBvcnQgZGF0ZXRpbWUNCmltcG9ydCByZQ0KaW1wb3J0IG9zDQppbXBvcnQgYmFzZTY0DQppbXBvcnQgY29kZWNzDQppbXBvcnQgeGJtY3BsdWdpbg0KaW1wb3J0IHhibWNndWkNCmltcG9ydCB4Ym1jYWRkb24NCmltcG9ydCB4Ym1jdmZzDQppbXBvcnQgdHJhY2ViYWNrDQppbXBvcnQgY29va2llbGliDQppbXBvcnQgdGltZQ0KaW1wb3J0IHhibWNndWkNCmltcG9ydCB4Ym1jDQppbXBvcnQgeGJtY3BsdWdpbg0KaW1wb3J0IHdlYmJyb3dzZXINCmltcG9ydCBvcw0KaW1wb3J0IHhibWNhZGRvbg0KZnJvbSBCZWF1dGlmdWxTb3VwIGltcG9ydCBCZWF1dGlmdWxTdG9uZVNvdXAgLCBCZWF1dGlmdWxTb3VwICwgQmVhdXRpZnVsU09BUA0KaWYgNjQgLSA2NDogaTExaUlpaUlpaQ0KaWYgNjUgLSA2NTogTzAgLyBpSWlpMUkxMUkxSUkxICUgT29vb29vb29PTyAtIGkxSUlpDQpvME9PMDAgPSBOb25lDQp0cnkgOg0KIGZyb20geG1sIC4gc2F4IC4gc2F4dXRpbHMgaW1wb3J0IGVzY2FwZQ0KZXhjZXB0IDogdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggKQ0KaWYgNzggLSA3ODogaTExaSAuIG9Pb29Pb08wT28wTw0KdHJ5IDoNCiBpbXBvcnQganNvbg0KZXhjZXB0IDoNCiBpbXBvcnQgc2ltcGxlanNvbiBhcyBqc29uDQppbXBvcnQgU2ltcGxlRG93bmxvYWRlciBhcyBkb3dubG9hZGVyDQppbXBvcnQgdGltZQ0KaW1wb3J0IHJlcXVlc3RzDQppSTEgPSBGYWxzZQ0KaWYgNDMgLSA0MzogSTExaTExSWkNCmlmIDY1IC0gNjU6IGkxaUlpMTFpSUlpMUkNCk9vID0gIjE1LjA3LjIwIg0KaWYgMiAtIDI6IG8wICogaTEgKiBpaTFJaUkxaSAlIE9Pb29PT28gLyBJMTFpIC8gSWkxSQ0KaWYgNDggLSA0ODogaUlJMTExaSAlIElpSUkgKyBJMUlpMTExIC8gb29Pb08wbyAqIG8wME8wb28NCmlmIDk3IC0gOTc6IElpMUkgLSBpaTFJaUkxaSAuIEkxSWkxMTEgLSBPb29vb29vb09PDQpvTzBvID0gJ2FIUjBjSE02THk5aWFYUXViSGt2TXpKcGFFazVWaTBsUlRFbFFqUWxPRFVsUlRFbFFqUWxPREFsUTBFbE9EQWxSVEVsUWpRbE9FST0nDQpJSUlJID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggb08wbyApDQppZiA1OSAtIDU5OiBpMUlJaSAqIGkxSUlpICUgSTExaSArIGkxMWkNCmlmIDMyIC0gMzI6IG8wIC4gbzAwTzBvbyAqIGkxSUlpIC4gb29Pb08wbyAvIEkxSWkxMTENCm8wMCA9ICdbQ09MT1Igb3JhbmdlXVtCXS0+Wy9DT0xPUl1bL0JdW0NPTE9SIGRlZXBza3libHVlXVtCXSBCRU0tVklORE9TWy9DT0xPUl1bL0JdJw0KaWYgNjIgLSA2MjogaTExaUlpaUlpaSAtIGkxMWkgJSBvb09vTzBvIC0gaUlpaTFJMTFJMUlJMSAuIGlpMUlpSTFpIC4gaTExaQ0KaWYgNjEgLSA2MTogT09vb09PbyAvIG8wIC8gSWlJSSAqIGkxaUlpMTFpSUlpMUkgLiBpMTFpDQppZiAxIC0gMTogaTExaSAtIGlpMUlpSTFpICUgaTExaUlpaUlpaSArIEkxSWkxMTEgLiBvb09vTzBvDQpPb29vMDAwMCA9ICctPiBJTlNUQUxFIFBMVUdJTiBQQVJBIEZJTE1FUyA0SycNCmlmIDIyIC0gMjI6IGlJSTExMWkgLiBJMUlpMTExDQppZiA0MSAtIDQxOiBvb09vTzBvIC4gbzAwTzBvbyAqIEkxSWkxMTEgJSBpMTFpSWlpSWlpDQppZiA3NCAtIDc0OiBJaUlJICogSTFJaTExMQ0KaWYgODIgLSA4MjogaUlpaTFJMTFJMUlJMSAlIEkxSWkxMTENCm9PbzBvb29vMDBvID0gJ2FIUjBjSE02THk5d1lYTjBaV0pwYmk1amIyMHZjbUYzTHpKUVRrNHhVR3BMJw0Kb08wbzBvMG9vTzBvTyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoIG9PbzBvb29vMDBvICkNCmlmIDUyIC0gNTI6IGkxMWkgLSBpMTFpSWlpSWlpICUgb29Pb08wbw0KaWYgNTQgLSA1NDogSTExaSAlIE8wICsgb09vb09vTzBPbzBPIC0gSWlJSSAvIElpMUkNCmlmIDMxIC0gMzE6IGkxaUlpMTFpSUlpMUkgKyBpMTFpDQppZiAxMyAtIDEzOiBJMTFpICogT09vb09PbyAqIG9Pb29Pb08wT28wTw0KaWYgNTUgLSA1NTogaTExaQ0KSUlJaUkxMWlpID0gJ2FIUjBjSE02THk5d1lYTjBaV0pwYmk1amIyMHZjbUYzTDNCWVIyZ3lja1Z1Jw0KTzAwMG9vID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggSUlJaUkxMWlpICkNCmlmIDMgLSAzOiBJaUlJICsgTzANCmlmIDQyIC0gNDI6IEkxMWkgLyBpMUlJaSArIGkxMWlJaWlJaWkgLSBpSUkxMTFpDQppZiA3OCAtIDc4OiBpMWlJaTExaUlJaTFJDQpJaWkxSTExMSA9ICdhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wxaERkRGw2Y2xSbScNCk9PME8wTzAwT29vTyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoIElpaTFJMTExICkNCmlmIDc3IC0gNzc6IGkxMWkgLSBpMTFpIC4gb09vb09vTzBPbzBPIC8gaTENCmlmIDE0IC0gMTQ6IElpMUkgJSBPMA0KSWlJMUkxID0gMzAwMA0KaWYgODYgLSA4NjogaTExaUlpaUlpaSArIGlJSTExMWkgKyBvMDBPMG9vICogSWkxSSArIGkxDQppZiA2MSAtIDYxOiBpMWlJaTExaUlJaTFJIC8gaTExaUlpaUlpaQ0KaWYgMzQgLSAzNDogT29vb29vb29PTyArIGlJaWkxSTExSTFJSTEgKyBpMTFpSWlpSWlpIC0gaWkxSWlJMWkgKyBpMTFpSWlpSWlpDQppZiA2NSAtIDY1OiBvMA0KaWYgNiAtIDY6IG9Pb29Pb08wT28wTyAvIEkxMWkxMUlpICUgaUlJMTExaQ0Kb28gPSAnYUhSMGNITTZMeTkxY214d2JHRjVMbU52YlM5T01ISmtURUk9Jw0KT08wTzAwID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggb28gKQ0KaWYgMjAgLSAyMDogT29vb29vb29PTw0KaWYgMTMgLSAxMzogaTFJSWkgLSBpSUkxMTFpICUgT09vb09PbyAvIGlJaWkxSTExSTFJSTEgJSBJaUlJDQppZiA5NyAtIDk3OiBpMTFpSWlpSWlpDQppZiAzMiAtIDMyOiBJMTFpMTFJaSAqIE8wICUgT09vb09PbyAlIGlJSTExMWkgLiBJMUlpMTExDQpvME9PT09PMDBvME8wID0gJ8etce+/vXvvv70d77+977+9fe+/ve+/ve+/vXfvv70d77+977+9fycNCmlmIDcxIC0gNzE6IG8wME8wb28gJSBJaUlJIC8gaTENCmlmIDQ5IC0gNDk6IGkxMWkgJSBJaUlJICogTzANCmlmIDg5IC0gODk6IE9Pb29PT28gKyBJMTFpMTFJaQ0KSWkxSU9vMG8wID0gJ2ZpbG1lNGsnDQpJSUkxaWkxaUlJID0gJ2h0dHBzOi8vaS5pbWd1ci5jb20vNjdVVWlvMy5wbmcnDQpvbzBvb29vb08wID0gJ2h0dHBzOi8vaS5pbWd1ci5jb20vWTRRWFJhYi5qcGcnDQppZiAxOSAtIDE5OiBJaTFJICsgbzAwTzBvbw0Kb29vID0gJ2FIUjBjSE02THk5d1lYTjBaV0pwYmk1amIyMHZjbUYzTDBKVllrNUNXbEZCJw0KaWkxSTFpMUkgPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCBvb28gKQ0KaWYgODggLSA4ODogaTFpSWkxMWlJSWkxSSArIE8wIC8gbzAgKiBJaUlJDQppaWlJaTFpMUkgPSAnYUhSMGNITTZMeTl3WVhOMFpXSnBiaTVqYjIwdmNtRjNMMEpWWWs1Q1dsRkInDQpvT08wMG9PTyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoIGlpaUlpMWkxSSApDQppZiA3NSAtIDc1OiBpMUlJaSAvIE9vb29vb29vT08gLSBPMCAvIG8wIC4gaTExaSAtIGkxSUlpDQppZiA3MSAtIDcxOiBJMTFpICsgaUlJMTExaSAqIEkxMWkgLSBpMWlJaTExaUlJaTFJICogaTENCmlmIDY1IC0gNjU6IE8wICUgb09vb09vTzBPbzBPIC4gaWkxSWlJMWkgJSBpSWlpMUkxMUkxSUkxIC8gSTExaSAlIG9vT29PMG8NCmlmIDUxIC0gNTE6IGkxMWlJaWlJaWkgLiBvT29vT29PME9vME8gKyBpMTFpDQpJSTExMWlpMUlJMWkgPSAnW0NPTE9SIHdoaXRlXVNlbGVjaW9uZSB1bSBpdGVtOlsvQ09MT1JdJw0KaWYgNTkgLSA1OTogTzAgKyBvT29vT29PME9vME8gKyBJMUlpMTExICUgb09vb09vTzBPbzBPDQpvME9Pb28wT08wT09PID0gJ1tDT0xPUiB3aGl0ZV0hIURvd25sb2FkIGVtIGV4ZWN1w6fDo28hIVsvQ09MT1JdJw0KaUkxaUkxSTFpMUkgPSAnISFEb3dubG9hZCBbQ09MT1Igc2VhYmx1ZV1BdWRpbyEhWy9DT0xPUl0nDQppZiAyNCAtIDI0OiBpaTFJaUkxaQ0KbzBPbzBPME9vMDBvTyA9ICdbQ09MT1IgZGVlcHNreWJsdWVdW0JdIENIRUNBUiBQT1IgQVRVQUxJWkHDh8ODT1svQ09MT1JdWy9CXScNCkkxMWkxSTFJID0gJ2h0dHBzOi8vaS5pbWd1ci5jb20vMjJMU3Zuci5wbmcnDQpvTzBPbyA9ICdhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wyRTVkRTFETUVoMScNCm9PT29vME9vID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggb08wT28gKQ0KaWYgNzggLSA3ODogSWkxSQ0KaWYgNzEgLSA3MTogSTExaSArIG8wME8wb28gJSBpMTFpSWlpSWlpICsgaWkxSWlJMWkgLSBJMUlpMTExDQppZiA4OCAtIDg4OiBvMCAtIGkxaUlpMTFpSUlpMUkgJSBJMTFpDQppSTFJMTExSWkxMTFpID0gJ0JFTS1WSU5ET1MnDQpJMTFJaUkxSTExaTFpID0gJ2FIUjBjSE02THk5d1lYTjBaV0pwYmk1amIyMHZjbUYzTDNGME5taHFWMFZZJw0KaUkxaWkxSWkgPSAnaHR0cHM6Ly9pLmltZ3VyLmNvbS9mSFJjbDdPLnBuZycNCm9vb28wMDAgPSAnaHR0cHM6Ly9pLmltZ3VyLmNvbS9ZNFFYUmFiLmpwZycNCmlJSUlpMSA9IGJhc2U2NCAuIGI2NGRlY29kZSAoIEkxMUlpSTFJMTFpMWkgKQ0KaWYgMjAgLSAyMDogaTFJSWkgKyBpaTFJaUkxaSAtIG8wME8wb28NCmlmIDMwIC0gMzA6IGkxMWkgLSBJMTFpIC0gaTExaUlpaUlpaSAlIG8wIC0gaTExaSAqIGlJSTExMWkNCmlmIDYxIC0gNjE6IE9Pb29PT28gLSBJaTFJICUgSTExaQ0KT09vT08wb28wb29PID0gJyR0ZXh0bz0nDQppZiA5OCAtIDk4OiBJaUlJICogSWlJSSAvIElpSUkgKyBJaTFJDQppZiAzNCAtIDM0OiBvMDBPMG9vDQpfX2FkZG9uX18gPSB4Ym1jYWRkb24gLiBBZGRvbiAoICkNCl9fYWRkb25uYW1lX18gPSBfX2FkZG9uX18gLiBnZXRBZGRvbkluZm8gKCAnbmFtZScgKQ0KX19pY29uX18gPSBfX2FkZG9uX18gLiBnZXRBZGRvbkluZm8gKCAnaWNvbicgKQ0KaWYgMTUgLSAxNTogSWkxSSAqIG8wME8wb28gKiBJMTFpMTFJaSAlIGkxMWlJaWlJaWkgJSBvMCAtIEkxMWkNCmlmIDY4IC0gNjg6IG9vT29PMG8gJSBpMUlJaSAuIEkxSWkxMTEgLiBpaTFJaUkxaQ0KbzBvbzBvT28gPSBbICcxODB1cGxvYWQuY29tJyAsICdhbGxteXZpZGVvcy5uZXQnICwgJ2Jlc3RyZWFtcy5uZXQnICwgJ2NsaWNrbnVwbG9hZC5jb20nICwgJ2Nsb3VkemlsbGEudG8nICwgJ21vdnNoYXJlLm5ldCcgLCAnbm92YW1vdi5jb20nICwgJ25vd3ZpZGVvLnN4JyAsICd2aWRlb3dlZWQuZXMnICwgJ2RhY2xpcHMuaW4nICwgJ2RhdGVtdWxlLmNvbScgLCAnZmFzdHZpZGVvLmluJyAsICdmYXN0c3RyZWFtLmluJyAsICdmaWxlaG9vdC5jb20nICwgJ2ZpbGVudWtlLmNvbScgLCAnc2hhcmVzaXguY29tJyAsICdkb2NzLmdvb2dsZS5jb20nICwgJ3BsdXMuZ29vZ2xlLmNvbScgLCAncGljYXNhd2ViLmdvb2dsZS5jb20nICwgJ2dvcmlsbGF2aWQuY29tJyAsICdnb3JpbGxhdmlkLmluJyAsICdncmlmdGhvc3QuY29tJyAsICdodWdlZmlsZXMubmV0JyAsICdpcGl0aG9zLnRvJyAsICdpc2hhcmVkLmV1JyAsICdraW5nZmlsZXMubmV0JyAsICdtYWlsLnJ1JyAsICdteS5tYWlsLnJ1JyAsICd2aWRlb2FwaS5teS5tYWlsLnJ1JyAsICdtaWdodHl1cGxvYWQuY29tJyAsICdtb29zaGFyZS5iaXonICwgJ21vdmRpdnguY29tJyAsICdtb3Zwb2QubmV0JyAsICdtb3Zwb2QuaW4nICwgJ21vdnJlZWwuY29tJyAsICdtcmZpbGUubWUnICwgJ25vc3ZpZGVvLmNvbScgLCAnb3BlbmxvYWQuaW8nICwgJ3BsYXllZC50bycgLCAnYml0c2hhcmUuY29tJyAsICdmaWxlZmFjdG9yeS5jb20nICwgJ2sycy5jYycgLCAnb2Jvb20uY29tJyAsICdyYXBpZGdhdG9yLm5ldCcgLCAndXBsb2FkZWQubmV0JyAsICdwcmltZXNoYXJlLnR2JyAsICdiaXRzaGFyZS5jb20nICwgJ2ZpbGVmYWN0b3J5LmNvbScgLCAnazJzLmNjJyAsICdvYm9vbS5jb20nICwgJ3JhcGlkZ2F0b3IubmV0JyAsICd1cGxvYWRlZC5uZXQnICwgJ3NoYXJlcmVwby5jb20nICwgJ3N0YWdldnUuY29tJyAsICdzdHJlYW1jbG91ZC5ldScgLCAnc3RyZWFtaW4udG8nICwgJ3RoZWZpbGUubWUnICwgJ3RoZXZpZGVvLm1lJyAsICd0dXNmaWxlcy5uZXQnICwgJ3VwbG9hZGMuY29tJyAsICd6YWxhYS5jb20nICwgJ3VwbG9hZHJvY2tldC5uZXQnICwgJ3VwdG9ib3guY29tJyAsICd2LXZpZHMuY29tJyAsICd2ZWVoZC5jb20nICwgJ3ZpZGJ1bGwuY29tJyAsICd2aWRlb21lZ2EudHYnICwgJ3ZpZHBsYXkubmV0JyAsICd2aWRzcG90Lm5ldCcgLCAndmlkdG8ubWUnICwgJ3ZpZHppLnR2JyAsICd2aW1lby5jb20nICwgJ3ZrLmNvbScgLCAndm9kbG9ja2VyLmNvbScgLCAneGZpbGVsb2FkLmNvbScgLCAneHZpZHN0YWdlLmNvbScgLCAnemV0dGFob3N0LnR2JyBdDQpvMDAwTzBvID0gWyAncGx1Z2luLnZpZGVvLmRyYW1hc29ubGluZScgLCAncGx1Z2luLnZpZGVvLmY0bVRlc3RlcicgLCAncGx1Z2luLnZpZGVvLnNoYWhpZG1iY25ldCcgLCAncGx1Z2luLnZpZGVvLlNwb3J0c0RldmlsJyAsICdwbHVnaW4uc3RyZWFtLnZhdWdobmxpdmUudHYnICwgJ3BsdWdpbi52aWRlby5aZW1UVi1zaGFuaScgXQ0KaWYgNDIgLSA0MjogbzANCmNsYXNzIElJICggdXJsbGliMiAuIEhUVFBFcnJvclByb2Nlc3NvciApIDoNCiBkZWYgaHR0cF9yZXNwb25zZSAoIHNlbGYgLCByZXF1ZXN0ICwgcmVzcG9uc2UgKSA6DQogIHJldHVybiByZXNwb25zZQ0KIGh0dHBzX3Jlc3BvbnNlID0gaHR0cF9yZXNwb25zZQ0KIGlmIDQ1IC0gNDU6IE8wICogaTEgJSBJMTFpMTFJaSAqIE9vb29vb29vT08gKyBJaUlJIC4gbzANCk9vMG9vT28wbyA9IEZhbHNlIDsNCmlmIE9vMG9vT28wbyA6DQogaWYgMjIgLSAyMjogaUlpaTFJMTFJMUlJMSAvIGkxMWlJaWlJaWkgKiBpSWlpMUkxMUkxSUkxICogaTExaSAuIEkxMWkgLyBpMTFpSWlpSWlpDQogaWYgMiAtIDI6IG9Pb29Pb08wT28wTyAvIE8wIC8gaTEgJSBvMCAlIGlJSTExMWkNCiB0cnkgOg0KICBpbXBvcnQgcHlzcmMgLiBweWRldmQgYXMgcHlkZXZkDQogIGlmIDUyIC0gNTI6IGkxDQogIHB5ZGV2ZCAuIHNldHRyYWNlICggJ2xvY2FsaG9zdCcgLCBzdGRvdXRUb1NlcnZlciA9IFRydWUgLCBzdGRlcnJUb1NlcnZlciA9IFRydWUgKQ0KIGV4Y2VwdCBJbXBvcnRFcnJvciA6DQogIHN5cyAuIHN0ZGVyciAuIHdyaXRlICggIkVycm9yOiAiICsNCiAiWW91IG11c3QgYWRkIG9yZy5weXRob24ucHlkZXYuZGVidWcucHlzcmMgdG8geW91ciBQWVRIT05QQVRILiIgKQ0KICBzeXMgLiBleGl0ICggMSApDQogIGlmIDk1IC0gOTU6IGlJSTExMWkNCiAgaWYgODcgLSA4NzogbzAwTzBvbyArIG8wIC4gSTExaSArIG8wDQpvTyA9IHhibWNhZGRvbiAuIEFkZG9uICggKQ0KaUlpMUlJSWkxID0gb08gLiBnZXRBZGRvbkluZm8gKCAndmVyc2lvbicgKQ0KTzBvT29PT09vT08gPSB4Ym1jIC4gdHJhbnNsYXRlUGF0aCAoIG9PIC4gZ2V0QWRkb25JbmZvICggJ3Byb2ZpbGUnICkgLiBkZWNvZGUgKCAndXRmLTgnICkgKQ0KaWkxaWkxMUlJSWlpSSA9IHhibWMgLiB0cmFuc2xhdGVQYXRoICggb08gLiBnZXRBZGRvbkluZm8gKCAncGF0aCcgKSAuIGRlY29kZSAoICd1dGYtOCcgKSApDQpPMDBPT09vT29vME8gPSBvcyAuIHBhdGggLiBqb2luICggTzBvT29PT09vT08gLCAnZmF2b3JpdGVzJyApDQpPMDAwT09vMDBvbyA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPMG9Pb09PT29PTyAsICdoaXN0b3J5JyApDQppZiA3MSAtIDcxOiBpMTFpSWlpSWlpICsgSTFJaTExMQ0Kb09vID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wb09vT09Pb09PICwgJ2xpc3RfcmV2aXNpb24nICkNCm9PTzAwT28gPSBvcyAuIHBhdGggLiBqb2luICggaWkxaWkxMUlJSWlpSSAsICdpY29uLnBuZycgKQ0KaTFpSUlJaTFpID0gb3MgLiBwYXRoIC4gam9pbiAoIGlpMWlpMTFJSUlpaUkgLCAnaWNvbl9jb25maWcucG5nJyApDQppSTFpSUlpaWlpID0gb3MgLiBwYXRoIC4gam9pbiAoIGlpMWlpMTFJSUlpaUkgLCAnZmF2b3JpdGVzLnBuZycgKQ0KaTFpSTExaTFpaTExID0gb3MgLiBwYXRoIC4gam9pbiAoIGlpMWlpMTFJSUlpaUkgLCAnZmFuYXJ0LmpwZycgKQ0KT09vb28wTzAwbyA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPMG9Pb09PT29PTyAsICdzb3VyY2VfZmlsZScgKQ0Kb09Pb09vb09vID0gTzBvT29PT09vT08NCmlmIDUxIC0gNTE6IElpMUkgKyBJaUlJICUgaUlpaTFJMTFJMUlJMSAvIE9Pb29PT28gLyBJMTFpICUgT29vb29vb29PTw0KZG93bmxvYWRlciA9IGRvd25sb2FkZXIgLiBTaW1wbGVEb3dubG9hZGVyICggKQ0KbzBPME9PTzBPb28gPSBvTyAuIGdldFNldHRpbmcgKCAnZGVidWcnICkNCmlmIG9zIC4gcGF0aCAuIGV4aXN0cyAoIE8wME9PT29Pb28wTyApID09IFRydWUgOg0KIGlpSWlJID0gb3BlbiAoIE8wME9PT29Pb28wTyApIC4gcmVhZCAoICkNCmVsc2UgOiBpaUlpSSA9IFsgXQ0KaWYgb3MgLiBwYXRoIC4gZXhpc3RzICggT09vb28wTzAwbyApID09IFRydWUgOg0KIEkxID0gb3BlbiAoIE9Pb29vME8wMG8gKSAuIHJlYWQgKCApDQplbHNlIDogSTEgPSBbIF0NCmlmIDg2IC0gODY6IG8wIC0gaUlJMTExaSAtIGkxaUlpMTFpSUlpMUkgKiBJaUlJDQppZiA2NiAtIDY2OiBPb29vb29vb09PICsgTzANCmRlZiBJMUlpaUkgKCB1cmwgKSA6DQogdHJ5IDoNCiAgaW1wb3J0IHVybGxpYiAuIHJlcXVlc3QgYXMgdXJsbGliMg0KIGV4Y2VwdCBJbXBvcnRFcnJvciA6DQogIGltcG9ydCB1cmxsaWIyDQogSUlpID0gdXJsbGliMiAuIGJ1aWxkX29wZW5lciAoICkNCiBJSWkgLiBhZGRoZWFkZXJzID0gWyAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMCcgKSBdDQogaWYgNDEgLSA0MTogaUlJMTExaSAtIE8wIC0gTzANCiBvTzAwT09vTzAwID0gSUlpIC4gb3BlbiAoIHVybCApDQogSWlJMTExMTExSUlJSSA9IG9PMDBPT29PMDAgLiByZWFkICggKSAuIGRlY29kZSAoICd1dGYtOCcgKQ0KIGkxSWkgPSBJaUkxMTExMTFJSUlJDQogcmV0dXJuIGkxSWkNCiBpZiAxNCAtIDE0OiBJaUlJDQpkZWYgSTFpSTFpSWkxMTFpICggc3RyaW5nICkgOg0KIGlmIG8wTzBPT08wT29vID09ICd0cnVlJyA6DQogIGlmIDQ0IC0gNDQ6IGkxSUlpICUgaTExaSArIElpMUkNCiAgeGJtYyAuIGxvZyAoICJbQVBPTExPLSVzXTogJXMiICUgKCBpSWkxSUlJaTEgLCBzdHJpbmcgKSApDQogIGlmIDQ1IC0gNDU6IElpSUkgLyBJaUlJICsgb29Pb08wbyArIG8wME8wb28NCiAgaWYgNDcgLSA0NzogaTEgKyBvMDBPMG9vDQogIGlmIDgyIC0gODI6IGkxMWkgLiBJMUlpMTExIC0gaUlpaTFJMTFJMUlJMSAtIEkxSWkxMTEgKiBpMTFpDQogIGlmIDc3IC0gNzc6IGlJaWkxSTExSTFJSTEgKiBpMWlJaTExaUlJaTFJDQpkZWYgb09vb09vMCAoIG1zZyApIDoNCiBpMUkxaWkxMWkxSWlpID0gb08gLiBnZXRTZXR0aW5nICggJ3N1cG9ydGUnICkNCiBpZiBpMUkxaWkxMWkxSWlpID09ICd0cnVlJyA6DQogIEkxSWlpaWlJICggT29vbzAwMDAgLCBPTzBPMDAgLCA0NCAsIElJSTFpaTFpSUkgLCBpMWlJMTFpMWlpMTEgLCBvME8gKCBPMDAwb28gKSAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyApDQogIGlmIDIgLSAyOiBpSWlpMUkxMUkxSUkxIC8gT09vb09PbyArIGkxaUlpMTFpSUlpMUkgLyBJMTFpDQpkZWYgSUlPT09PMG9vMCAoIG1zZyApIDoNCiB4Ym1jZ3VpIC4gRGlhbG9nICggKSAuIG9rICggJ1tDT0xPUiBkZWVwc2t5Ymx1ZV1bQl0iSU5TVEFMRSBQQVJBIEFTU0lTVElSIEVNIDRLISIgWy9DT0xPUl1bL0JdJyAsICJbQ09MT1Igb3JhbmdlXVtCXVBBUkEgVk9Dw4ogQVNTSVNUSVIgT1MgRklMTUVTIEVNIDRLIE1VSVRPIFNJTVBMRVMgVkNTIERFVkVNIEZBWkVSIE8gRE9XTkxPQUQgRE8gUExVR0lOIEVMRU1FTlRVTSBOT1MgTElOS1MgQVNFR1VJUiEuIExPR08gQVBPSVMgVEVSIEZFSVRPIE8gRE9XTkxPQUQgVkMgVsODTyBFTSBTSVRFU01BIElOU1RBTEEgUE9SIFpJUCBFIFBST0NVUkFSIE5BIFBBU1RBIERBIFNVQSBCT1ggT1UgUEMgTyBaSVAgUEFSQSBJTlNUQUxBUiBOQSBCT1ghWy9DT0xPUl1bL0JdIiApDQogSTExaWlJMWkxID0geGJtY2d1aSAuIERpYWxvZyAoICkNCiBJMWkxSWlpaWkgPSBJMTFpaUkxaTEgLiBzZWxlY3QgKCAnW0NPTE9SIG9yYW5nZV1bQl1QQVJBIEFTU0lTVElSIEZJTE1FUyBFTSA0SyBMSU5LUyBBQkFJWE8hWy9DT0xPUl1bL0JdJyAsIFsgJ1tDT0xPUiBkZWVwc2t5Ymx1ZV1bQl1CQUlYQVJbL0NPTE9SXVsvQl1bQ09MT1Igb3JhbmdlXVtCXSBFTEVNRU5UVU1bL0NPTE9SXVsvQl0nICwgJ1tDT0xPUiBkZWVwc2t5Ymx1ZV1bQl1CQUlYQVJbL0NPTE9SXVsvQl1bQ09MT1Igb3JhbmdlXVtCXSBFTEVNRU5UVU0gQlVSU1RbL0NPTE9SXVsvQl0nICwgJycgXSApDQogaWYgSTFpMUlpaWlpID09IDAgOg0KICBpZiB4Ym1jIC4gZ2V0Q29uZFZpc2liaWxpdHkgKCAnc3lzdGVtLnBsYXRmb3JtLmFuZHJvaWQnICkgOg0KICAgeGJtYyAuIGV4ZWN1dGVidWlsdGluICggJ1N0YXJ0QW5kcm9pZEFjdGl2aXR5KCxhbmRyb2lkLmludGVudC5hY3Rpb24uVklFVywsJXMpJyAlICggJ2h0dHBzOi8vZ2l0aHViLmNvbS9lbGdhdGl0by9wbHVnaW4udmlkZW8uZWxlbWVudHVtL3JlbGVhc2VzL2Rvd25sb2FkL3YwLjEuNTgvcGx1Z2luLnZpZGVvLmVsZW1lbnR1bS0wLjEuNTguemlwJyApICkNCiAgZWxzZSA6DQogICB3ZWJicm93c2VyIC4gb3BlbiAoICdodHRwczovL2dpdGh1Yi5jb20vZWxnYXRpdG8vcGx1Z2luLnZpZGVvLmVsZW1lbnR1bS9yZWxlYXNlcy9kb3dubG9hZC92MC4xLjU4L3BsdWdpbi52aWRlby5lbGVtZW50dW0tMC4xLjU4LnppcCcgKQ0KIGlmIEkxaTFJaWlpaSA9PSAxIDoNCiAgaWYgeGJtYyAuIGdldENvbmRWaXNpYmlsaXR5ICggJ3N5c3RlbS5wbGF0Zm9ybS5hbmRyb2lkJyApIDoNCiAgIHhibWMgLiBleGVjdXRlYnVpbHRpbiAoICdTdGFydEFuZHJvaWRBY3Rpdml0eSgsYW5kcm9pZC5pbnRlbnQuYWN0aW9uLlZJRVcsLCVzKScgJSAoICdodHRwczovL2dpdGh1Yi5jb20vZWxnYXRpdG8vc2NyaXB0LmVsZW1lbnR1bS5idXJzdC9yZWxlYXNlcy9kb3dubG9hZC92MC4wLjQ5L3NjcmlwdC5lbGVtZW50dW0uYnVyc3QtMC4wLjQ5LnppcCcgKSApDQogIGVsc2UgOg0KICAgd2ViYnJvd3NlciAuIG9wZW4gKCAnaHR0cHM6Ly9naXRodWIuY29tL2VsZ2F0aXRvL3NjcmlwdC5lbGVtZW50dW0uYnVyc3QvcmVsZWFzZXMvZG93bmxvYWQvdjAuMC40OS9zY3JpcHQuZWxlbWVudHVtLmJ1cnN0LTAuMC40OS56aXAnICkNCiAgIGlmIDk0IC0gOTQ6IGkxICogaUlJMTExaSAvIEkxMWkxMUlpIC8gaUlJMTExaQ0KIGlmIEkxaTFJaWlpaSA9PSA1IDoNCiAgeGJtY2FkZG9uIC4gQWRkb24gKCApIC4gb3BlblNldHRpbmdzICggKQ0KICBpZiA4NyAtIDg3OiBJMTFpMTFJaSAuIEkxSWkxMTENCiAgeGJtYyAuIGV4ZWN1dGVidWlsdGluICggIlhCTUMuQ29udGFpbmVyLlJlZnJlc2goJXM/bW9kZT1Ob25lLCByZXBsYWNlKSIgJSBzeXMgLiBhcmd2IFsgMCBdICkNCiAgeGJtY3BsdWdpbiAuIGVuZE9mRGlyZWN0b3J5ICggaW50ICggc3lzIC4gYXJndiBbIDEgXSApICkNCiAgaWYgNzUgLSA3NTogbzAwTzBvbyArIG8wICsgaTEgKiBJaTFJICUgT09vb09PbyAuIElpSUkNCmRlZiBvT0kxSWkxSTEgKCApIDoNCiBJaUlJMTExaUkxaWkxID0gb08gLiBnZXRTZXR0aW5nICggJ3VzZXJuYW1lJyApDQogaUkxMUkxSUkgPSBvTyAuIGdldFNldHRpbmcgKCAncGFzc3dvcmQnICkNCiBJaTFJSWlJMWkgPSBvTyAuIGdldFNldHRpbmcgKCAnc2Vydmlkb3InICkNCiBvME9vMDAgPSBvTyAuIGdldFNldHRpbmcgKCAnZXhpYmlyZmlsbWU0aycgKQ0KIGlJID0gb08gLiBnZXRTZXR0aW5nICggJ3NhaWRhJyApDQogaWYgbzBPbzAwID09ICd0cnVlJyA6DQogIGlmIElpMUlJaUkxaSA9PSAnZmlsbWU0aycgOg0KICAgTzBPME9vb28wbyA9ICdodHRwOi8vc3YxLmlwdHZjYXNhLm9ubGluZToyNTQ2MS9nZXQucGhwP3VzZXJuYW1lPSVzJnBhc3N3b3JkPSVzJnR5cGU9bTN1X3BsdXMmb3V0cHV0PSVzJyAlICggSWlJSTExMWlJMWlpMSAsIGlJMTFJMUlJICwgaUkgKQ0KICAgSTFJaWlpaUkgKCBJaTFJT28wbzAgLCBPME8wT29vbzBvICwgMSAsIElJSTFpaTFpSUkgLCBvbzBvb29vb08wICwgbzBPICggaWkxSTFpMUkgKSAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyApDQogIGlmIElpMUlJaUkxaSA9PSAnTmVuaHVtJyA6DQogICBJMUlpaWlpSSAoIElpMUlPbzBvMCAsICcnICwgNDIgLCBJSUkxaWkxaUlJICwgb28wb29vb29PMCAsIG8wTyAoIGlpMUkxaTFJICkgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgKQ0KIElpSUkxMTFpSTFpaTEgPSBvTyAuIGdldFNldHRpbmcgKCAndXNlcm5hbWUyJyApDQogaUkxMUkxSUkgPSBvTyAuIGdldFNldHRpbmcgKCAncGFzc3dvcmQyJyApDQogSWkxSUlpSTFpID0gb08gLiBnZXRTZXR0aW5nICggJ3NlcnZpZG9yMicgKQ0KIG8wT28wMCA9IG9PIC4gZ2V0U2V0dGluZyAoICdleGliaXJmaWxtZTRrMicgKQ0KIGlJID0gb08gLiBnZXRTZXR0aW5nICggJ3NhaWRhMicgKQ0KIGlmIG8wT28wMCA9PSAndHJ1ZScgOg0KICBpZiBJaTFJSWlJMWkgPT0gJ2ZpbG1lNGsnIDoNCiAgIE8wTzBPb29vMG8gPSAnaHR0cDovL2Nsb3Vkc3RlYW0uY2x1Yjo4MDgwL2dldC5waHA/dXNlcm5hbWU9JXMmcGFzc3dvcmQ9JXMmdHlwZT1tM3VfcGx1cyZvdXRwdXQ9JXMnICUgKCBJaUlJMTExaUkxaWkxICwgaUkxMUkxSUkgLCBpSSApDQogICBJMUlpaWlpSSAoIHRpdHVsb19maWxtZTRrMiAsIE8wTzBPb29vMG8gLCAxICwgdGh1bWJuYWlsX2ZpbG1lNGsyICwgb28wb29vb29PMCAsIG8wTyAoIGlpMUkxaTFJICkgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgKQ0KICBpZiBJaTFJSWlJMWkgPT0gJ05lbmh1bScgOg0KICAgSTFJaWlpaUkgKCB0aXR1bG9fZmlsbWU0azIgLCAnJyAsIDQyICwgdGh1bWJuYWlsX2ZpbG1lNGsyICwgZmFuYXJ0X2ZpbG1lNGsyICwgbzBPICggaWkxSTFpMUkgKSAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyApDQogICBpZiA1NiAtIDU2OiBpaTFJaUkxaSAlIE8wIC0gb09vb09vTzBPbzBPDQpkZWYgTzAwbzBPTzAgKCBtc2cgKSA6DQogSUlpMUkxaWlpaWkgPSBvTyAuIGdldFNldHRpbmcgKCAnbWVuc2FnZW0xJyApDQogaWYgSUlpMUkxaWlpaWkgPT0gJ3RydWUnIDoNCiAgSTExaWlJMWkxID0geGJtY2d1aSAuIERpYWxvZyAoICkNCiAgSTFpMUlpaWlpID0gSTExaWlJMWkxIC4gc2VsZWN0ICggJ1tDT0xPUiBvcmFuZ2VdW0JdQUpVREUgTyBBREQtT04gRkHDh0EgU1VBWy9DT0xPUl1bL0JdW0NPTE9SIGRlZXBza3libHVlXVtCXSBET0HDh8ODT1svQ09MT1JdWy9CXScgLCBbICdbQ09MT1IgZGVlcHNreWJsdWVdW0JdQVBPTExPIC0+Wy9DT0xPUl1bL0JdW0NPTE9SIG9yYW5nZV1bQl0gU0VKQSBWSVAgWy9DT0xPUl1bL0JdJyAsICdbQ09MT1IgZGVlcHNreWJsdWVdW0JdQVBPTExPIC0+Wy9DT0xPUl1bL0JdW0NPTE9SIG9yYW5nZV1bQl0gU0lURSBPRklDSUFMIVsvQ09MT1JdWy9CXScgLCAnW0NPTE9SIGRlZXBza3libHVlXVtCXUFKVURFIC0+Wy9DT0xPUl1bL0JdW0NPTE9SIG9yYW5nZV1bQl0gRE9Bw4fDg08gUEVMT1svQ09MT1JdWy9CXVtDT0xPUiBsaWdodGN5YW5dW0JdIE1FUkNBRE9bL0NPTE9SXVsvQl1bQ09MT1IgZG9kZ2VyYmx1ZV1bQl1QQUdPIFsvQ09MT1JdWy9CXScgLCAnW0NPTE9SIGRlZXBza3libHVlXVtCXUFKVURFIC0+Wy9DT0xPUl1bL0JdW0NPTE9SIG9yYW5nZV1bQl0gRE9Bw4fDg08gUEVMT1svQ09MT1JdWy9CXVtDT0xPUiBibHVldmlvbGV0XVtCXSBOVUJBTktbL0NPTE9SXVsvQl0nICwgJ1tDT0xPUiBkZWVwc2t5Ymx1ZV1bQl1BSlVERSAtPlsvQ09MT1JdWy9CXVtDT0xPUiBvcmFuZ2VdW0JdIERPQcOHw4NPIFBFTE9bL0NPTE9SXVsvQl1bQ09MT1IgbGlnaHRjeWFuXVtCXSBQSUNbL0NPTE9SXVsvQl1bQ09MT1IgbGltZV1bQl1QQVkgWy9DT0xPUl1bL0JdJyAsICdbQ09MT1IgZGVlcHNreWJsdWVdW0JdQUpVREUgLT5bL0NPTE9SXVsvQl1bQ09MT1Igb3JhbmdlXVtCXSBET0HDh8ODTyBQRUxPWy9DT0xPUl1bL0JdW0NPTE9SIHJveWFsYmx1ZV1bQl0gUEFZWy9DT0xPUl1bL0JdW0NPTE9SIGxpZ2h0Y3lhbl1bQl1QQUwgWy9DT0xPUl1bL0JdJyAsICdbQ09MT1IgZGVlcHNreWJsdWVdW0JdQVBPTExPIC0+Wy9DT0xPUl1bL0JdW0NPTE9SIG9yYW5nZV1bQl0gR1JVUE8gVEVMRUdSQU1bL0NPTE9SXVsvQl0nICwgJ1tDT0xPUiBkZWVwc2t5Ymx1ZV1bQl1BUE9MTE8gLT5bL0NPTE9SXVsvQl1bQ09MT1Igb3JhbmdlXVtCXSBHUlVQTyBGQUNFQk9PS1svQ09MT1JdWy9CXScgLCAnW0NPTE9SIGRlZXBza3libHVlXVtCXUVOVFJBUiBOT1svQ09MT1JdWy9CXVtDT0xPUiBvcmFuZ2VdW0JdIEFERC1PTlsvQ09MT1JdWy9CXScgLCAnW0NPTE9SIGRlZXBza3libHVlXVtCXVNBSVIgRE9bL0NPTE9SXVsvQl1bQ09MT1Igb3JhbmdlXVtCXSBBREQtT05bL0NPTE9SXVsvQl0nIF0gKQ0KICBpZiA3MSAtIDcxOiBJMUlpMTExICogaTExaSAqIE9Pb29PT28NCiAgaWYgSTFpMUlpaWlpID09IDAgOg0KICAgaWYgeGJtYyAuIGdldENvbmRWaXNpYmlsaXR5ICggJ3N5c3RlbS5wbGF0Zm9ybS5hbmRyb2lkJyApIDoNCiAgICB4Ym1jIC4gZXhlY3V0ZWJ1aWx0aW4gKCAnU3RhcnRBbmRyb2lkQWN0aXZpdHkoLGFuZHJvaWQuaW50ZW50LmFjdGlvbi5WSUVXLCwlcyknICUgKCAnaHR0cHM6Ly9iaXQubHkvM2hIcExDZS1QVi1BUE9MTE8nICkgKQ0KICAgZWxzZSA6DQogICAgd2ViYnJvd3NlciAuIG9wZW4gKCAnaHR0cHM6Ly9iaXQubHkvM2hIcExDZS1QVi1BUE9MTE8nICkNCiAgICBpZiA1NiAtIDU2OiBvT29vT29PME9vME8NCiAgICBpZiA1NCAtIDU0OiBvb09vTzBvIC8gSTExaSAuIE9Pb29PT28gJSBJaUlJDQogIGlmIEkxaTFJaWlpaSA9PSAxIDoNCiAgIGlmIHhibWMgLiBnZXRDb25kVmlzaWJpbGl0eSAoICdzeXN0ZW0ucGxhdGZvcm0uYW5kcm9pZCcgKSA6DQogICAgeGJtYyAuIGV4ZWN1dGVidWlsdGluICggJ1N0YXJ0QW5kcm9pZEFjdGl2aXR5KCxhbmRyb2lkLmludGVudC5hY3Rpb24uVklFVywsJXMpJyAlICggJ2h0dHA6Ly9kZXVzLWFwb2xsby5tbCcgKSApDQogICBlbHNlIDoNCiAgICB3ZWJicm93c2VyIC4gb3BlbiAoICdodHRwOi8vZGV1cy1hcG9sbG8ubWwnICkNCiAgICBpZiA1NyAtIDU3OiBpMTFpSWlpSWlpIC4gaWkxSWlJMWkgLSBpSUkxMTFpIC0gT09vb09PbyArIG8wDQogICAgaWYgNjMgLSA2MzogbzAgKiBJaUlJDQogIGlmIEkxaTFJaWlpaSA9PSAyIDoNCiAgIGlmIHhibWMgLiBnZXRDb25kVmlzaWJpbGl0eSAoICdzeXN0ZW0ucGxhdGZvcm0uYW5kcm9pZCcgKSA6DQogICAgeGJtYyAuIGV4ZWN1dGVidWlsdGluICggJ1N0YXJ0QW5kcm9pZEFjdGl2aXR5KCxhbmRyb2lkLmludGVudC5hY3Rpb24uVklFVywsJXMpJyAlICggJ2h0dHBzOi8vd3d3Lm1lcmNhZG9wYWdvLmNvbS5ici9jaGVja291dC92MS9yZWRpcmVjdD9wcmVmX2lkPTIwMzY2ODYyOC1mOWE4ZDI5OS04YjM2LTRjYmQtODRmNC0wZWIzNGVkMGJlMTEnICkgKQ0KICAgZWxzZSA6DQogICAgd2ViYnJvd3NlciAuIG9wZW4gKCAnaHR0cHM6Ly93d3cubWVyY2Fkb3BhZ28uY29tLmJyL2NoZWNrb3V0L3YxL3JlZGlyZWN0P3ByZWZfaWQ9MjAzNjY4NjI4LWY5YThkMjk5LThiMzYtNGNiZC04NGY0LTBlYjM0ZWQwYmUxMScgKQ0KICAgIGlmIDY5IC0gNjk6IE8wIC4gaTFpSWkxMWlJSWkxSQ0KICBpZiBJMWkxSWlpaWkgPT0gMyA6DQogICBpZiB4Ym1jIC4gZ2V0Q29uZFZpc2liaWxpdHkgKCAnc3lzdGVtLnBsYXRmb3JtLmFuZHJvaWQnICkgOg0KICAgIHhibWMgLiBleGVjdXRlYnVpbHRpbiAoICdTdGFydEFuZHJvaWRBY3Rpdml0eSgsYW5kcm9pZC5pbnRlbnQuYWN0aW9uLlZJRVcsLCVzKScgJSAoICdodHRwczovL251YmFuay5jb20uYnIvcGFnYXIvMWRqcHY2L0ZKemxldWc5bkYnICkgKQ0KICAgZWxzZSA6DQogICAgd2ViYnJvd3NlciAuIG9wZW4gKCAnaHR0cHM6Ly9udWJhbmsuY29tLmJyL3BhZ2FyLzFkanB2Ni9GSnpsZXVnOW5GJyApDQogICAgaWYgNDkgLSA0OTogb09vb09vTzBPbzBPIC0gSWkxSQ0KICAgIGlmIDc0IC0gNzQ6IGlJaWkxSTExSTFJSTEgKiBpaTFJaUkxaSArIG8wIC8gaTFJSWkgLyBpMTFpIC4gSTExaTExSWkNCiAgaWYgSTFpMUlpaWlpID09IDQgOg0KICAgaWYgeGJtYyAuIGdldENvbmRWaXNpYmlsaXR5ICggJ3N5c3RlbS5wbGF0Zm9ybS5hbmRyb2lkJyApIDoNCiAgICB4Ym1jIC4gZXhlY3V0ZWJ1aWx0aW4gKCAnU3RhcnRBbmRyb2lkQWN0aXZpdHkoLGFuZHJvaWQuaW50ZW50LmFjdGlvbi5WSUVXLCwlcyknICUgKCAnaHR0cHM6Ly9waWNwYXkubWUvZGV1cy5hcG9sbG8nICkgKQ0KICAgZWxzZSA6DQogICAgd2ViYnJvd3NlciAuIG9wZW4gKCAnaHR0cHM6Ly9waWNwYXkubWUvZGV1cy5hcG9sbG8nICkNCiAgICBpZiA2MiAtIDYyOiBPb29vb29vb09PICogb09vb09vTzBPbzBPDQogICAgaWYgNTggLSA1ODogbzAgJSBpMQ0KICBpZiBJMWkxSWlpaWkgPT0gNSA6DQogICBpZiB4Ym1jIC4gZ2V0Q29uZFZpc2liaWxpdHkgKCAnc3lzdGVtLnBsYXRmb3JtLmFuZHJvaWQnICkgOg0KICAgIHhibWMgLiBleGVjdXRlYnVpbHRpbiAoICdTdGFydEFuZHJvaWRBY3Rpdml0eSgsYW5kcm9pZC5pbnRlbnQuYWN0aW9uLlZJRVcsLCVzKScgJSAoICdodHRwczovL3d3dy5wYXlwYWwuY29tL2NnaS1iaW4vd2Vic2NyP2NtZD1fcy14Y2xpY2smaG9zdGVkX2J1dHRvbl9pZD00NEE5MkRVS0JBS0FOJnNvdXJjZT11cmwnICkgKQ0KICAgZWxzZSA6DQogICAgd2ViYnJvd3NlciAuIG9wZW4gKCAnaHR0cHM6Ly93d3cucGF5cGFsLmNvbS9jZ2ktYmluL3dlYnNjcj9jbWQ9X3MteGNsaWNrJmhvc3RlZF9idXR0b25faWQ9NDRBOTJEVUtCQUtBTiZzb3VyY2U9dXJsJyApDQogICAgaWYgNTAgLSA1MDogb29Pb08wbyAuIGkxDQogICAgaWYgOTcgLSA5NzogTzAgKyBvMA0KICAgIGlmIDg5IC0gODk6IGkxICsgaTFpSWkxMWlJSWkxSSAqIElpMUkgKiBpSUkxMTFpDQogIGlmIEkxaTFJaWlpaSA9PSA2IDoNCiAgIGlmIHhibWMgLiBnZXRDb25kVmlzaWJpbGl0eSAoICdzeXN0ZW0ucGxhdGZvcm0uYW5kcm9pZCcgKSA6DQogICAgeGJtYyAuIGV4ZWN1dGVidWlsdGluICggJ1N0YXJ0QW5kcm9pZEFjdGl2aXR5KCxhbmRyb2lkLmludGVudC5hY3Rpb24uVklFVywsJXMpJyAlICggJ2h0dHA6Ly90ZWxlZ3JhbS5tZS9EZXVzQXBvbGxvJyApICkNCiAgIGVsc2UgOg0KICAgIHdlYmJyb3dzZXIgLiBvcGVuICggJ2h0dHA6Ly90ZWxlZ3JhbS5tZS9EZXVzQXBvbGxvJyApDQogICAgaWYgMzcgLSAzNzogT29vb29vb29PTyAtIE8wIC0gaTENCiAgaWYgSTFpMUlpaWlpID09IDcgOg0KICAgaWYgeGJtYyAuIGdldENvbmRWaXNpYmlsaXR5ICggJ3N5c3RlbS5wbGF0Zm9ybS5hbmRyb2lkJyApIDoNCiAgICB4Ym1jIC4gZXhlY3V0ZWJ1aWx0aW4gKCAnU3RhcnRBbmRyb2lkQWN0aXZpdHkoLGFuZHJvaWQuaW50ZW50LmFjdGlvbi5WSUVXLCwlcyknICUgKCAnaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2dyb3Vwcy9EZXVzLkFwb2xsbycgKSApDQogICBlbHNlIDoNCiAgICB3ZWJicm93c2VyIC4gb3BlbiAoICdodHRwczovL3d3dy5mYWNlYm9vay5jb20vZ3JvdXBzL0RldXMuQXBvbGxvJyApDQogICAgaWYgNzcgLSA3NzogSTExaSAqIGlJaWkxSTExSTFJSTENCiAgaWYgSTFpMUlpaWlpID09IDkgOg0KICAgeGJtYyAuIGV4ZWN1dGVidWlsdGluICggIlhCTUMuQ29udGFpbmVyLlJlZnJlc2goJ2Nsb3NlKCknKSIgKQ0KICAgeGJtY3BsdWdpbiAuIGVuZE9mRGlyZWN0b3J5ICggaW50ICggc3lzIC4gYXJndiBbIDEgXSApICkNCiAgIGlmIDk4IC0gOTg6IG9Pb29Pb08wT28wTyAlIGlJSTExMWkgKiBPb29vb29vb09PDQogICBpZiA1MSAtIDUxOiBpSWlpMUkxMUkxSUkxIC4gbzAgLyBPT29vT09vICsgaTENCiAgaWYgSTFpMUlpaWlpID09IDkgOg0KICAgeGJtYyAuIGV4ZWN1dGVidWlsdGluICggIlhCTUMuQ29udGFpbmVyLlJlZnJlc2goJ2Nsb3NlKCknKSIgKQ0KICAgeGJtY3BsdWdpbiAuIGVuZE9mRGlyZWN0b3J5ICggaW50ICggc3lzIC4gYXJndiBbIDEgXSApICkNCiAgIGlmIDMzIC0gMzM6IG8wME8wb28gLiBpMTFpICUgSWlJSSArIGkxDQpkZWYgb08wME8wMDBvTzAgKCBtc2cgKSA6DQogSTFJaWlpaUkgKCBvMDAgLCBPTzBPMDAgLCAxICwgb09PMDBPbyAsIGkxaUkxMWkxaWkxMSAsIG8wTyAoIG9PMG8wbzBvb08wb08gKSAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyApDQogb09vb09vMCAoIFRydWUgKQ0KIG9PSTFJaTFJMSAoICkNCiBpZiA3OSAtIDc5OiBJaTFJIC0gT29vb29vb29PTyAtIE9Pb29PT28gLSBpSWlpMUkxMUkxSUkxICogSTExaQ0KIElpaSAoIElJSUkgLCAnJyApDQogSTFJaWlpaUkgKCBvME9vME8wT28wMG9PICwgJycgLCA1NCAsIEkxMWkxSTFJICwgaTFpSTExaTFpaTExICwgbzBPICggb09Pb28wT28gKSAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyAsICcnICwgJycgLCAnJyApDQogaWYgMTYgLSAxNjogaUlJMTExaSArIEkxSWkxMTEgKiBPMCAlIGkxSUlpIC4gb09vb09vTzBPbzBPDQogT28wT08gKCApDQogTzAwbzBPTzAgKCBUcnVlICkNCiBpZiA3OCAtIDc4OiBJMTFpIC0gT29vb29vb29PTyAtIGlpMUlpSTFpIC8gbzAwTzBvbyAvIGkxMWkNCiB4Ym1jcGx1Z2luIC4gZW5kT2ZEaXJlY3RvcnkgKCBpbnQgKCBzeXMgLiBhcmd2IFsgMSBdICkgKQ0KIGlmIDI5IC0gMjk6IG9Pb29Pb08wT28wTyAlIG9Pb29Pb08wT28wTw0KIGlmIDk0IC0gOTQ6IGlJaWkxSTExSTFJSTEgLyBJMTFpMTFJaSAlIElpSUkgKiBJaUlJICogaTExaQ0KZGVmIElJaUlpSSAoIG1zZyApIDoNCiB0cnkgOg0KICBPT08gPSB1cmxsaWIyIC4gdXJsb3BlbiAoICJodHRwczovL2dpdGh1Yi5jb20vVGlhZ290ai9yZXBvLmFwb2xsby9yYXcvbWFzdGVyL3BsdWdpbi52aWRlby5hcG9sbG8vdmVyc2lvbi50eHQiICkgLiByZWFkICggKSAuIHJlcGxhY2UgKCAnJyAsICcnICkgLiByZXBsYWNlICggJ1xyJyAsICcnICkNCiAgT09PID0gcmUgLiBjb21waWxlICggJ1thLXpBLVpcLlxkXSsnICkgLiBmaW5kYWxsICggT09PICkgWyAwIF0NCiAgaWYgMjUgLSAyNTogT09vb09PbyAtIGkxaUlpMTFpSUlpMUkgLiBpSWlpMUkxMUkxSUkxICUgaTExaUlpaUlpaSAlIGlpMUlpSTFpDQogIGlmIE9PTyAhPSBPbyA6DQogICBvME9vMG9PMG9PTzAwICggKQ0KICAgaWYgOTIgLSA5MjogT29vb29vb29PTyAqIG9vT29PMG8NCiAgZWxpZiBtc2cgPT0gVHJ1ZSA6DQogICBpZiAxMDAgLSAxMDA6IG9vT29PMG8gKyBvb09vTzBvICogSTFJaTExMQ0KICAgTzAwbzBPTzAgKCBUcnVlICkNCiAgIGlmIDEgLSAxOiBvMDBPMG9vIC4gbzAwTzBvbyAvIG8wIC0gb29Pb08wbw0KIGV4Y2VwdCB1cmxsaWIyIC4gVVJMRXJyb3IgLCBvb29PIDoNCiAgaWYgbXNnID09IFRydWUgOg0KICAgeGJtY2d1aSAuIERpYWxvZyAoICkgLiBvayAoICdBcG9sbG8nICwgIk7Do28gZm9pIHBvc3PDrXZlbCBjaGVjYXIiICkNCiAgIGlmIDI2IC0gMjY6IGlJSTExMWkgJSBpaTFJaUkxaQ0KZGVmIG8wME9vMG9vb29vbyAoIG1zZyApIDoNCiB0cnkgOg0KICBPT08gPSB1cmxsaWIyIC4gdXJsb3BlbiAoICJodHRwczovL2dpdGh1Yi5jb20vVGlhZ290ai9yZXBvLmFwb2xsby9yYXcvbWFzdGVyL3BsdWdpbi52aWRlby5hcG9sbG8vdmVyc2lvbi50eHQiICkgLiByZWFkICggKSAuIHJlcGxhY2UgKCAnJyAsICcnICkgLiByZXBsYWNlICggJ1xyJyAsICcnICkNCiAgT09PID0gcmUgLiBjb21waWxlICggJ1thLXpBLVpcLlxkXSsnICkgLiBmaW5kYWxsICggT09PICkgWyAwIF0NCiAgaWYgNzYgLSA3NjogSWkxSSAvIEkxMWkgLiBPMCAlIG9Pb29Pb08wT28wTyAuIGkxICsgSTFJaTExMQ0KICBpZiBPT08gIT0gT28gOg0KICAgbzBPbzBvTzBvT08wMCAoICkNCiAgIGlmIDcxIC0gNzE6IG9vT29PMG8gLiBpMTFpDQogIGVsaWYgbXNnID09IFRydWUgOg0KICAgeGJtY2d1aSAuIERpYWxvZyAoICkgLiBvayAoICdbQ09MT1Igb3JhbmdlXVtCXUFQT0xMT1svQ09MT1JdWy9CXScgLCAiW0NPTE9SIGRlZXBza3libHVlXVtCXSBPIEFERC1PTiBKw4EgRVNUw4EgTkEgw5pMVElNQSBWRVJTw4NPIVsvQ09MT1JdWy9CXVtDT0xPUiBvcmFuZ2VdW0JdIDEuNC45Wy9DT0xPUl1bL0JdICIgKyBPbyArICJbQ09MT1IgZGVlcHNreWJsdWVdW0JdIEFUVUFMSVpBw4fDlUVTIFPDg08gQVVUT03DgVRJQ0FTIFNFIE7Dg08gQVRVQUxJWkEgRU5UUkUgTk8gU0lURVsvQ09MT1JdWy9CXVtDT0xPUiBvcmFuZ2VdW0JdIGh0dHA6Ly9kZXVzLWFwb2xsby5tbFsvQ09MT1JdWy9CXSIgKQ0KICAgaWYgNjIgLSA2MjogT29vb29vb29PTyAuIElpMUkNCiBleGNlcHQgdXJsbGliMiAuIFVSTEVycm9yICwgb29vTyA6DQogIGlmIG1zZyA9PSBUcnVlIDoNCiAgIHhibWNndWkgLiBEaWFsb2cgKCApIC4gb2sgKCAnQXBvbGxvJyAsICJOw6NvIGZvaSBwb3Nzw612ZWwgY2hlY2FyIiApDQogICBpZiA2MSAtIDYxOiBvMCAtIEkxMWkgLSBpMUlJaQ0KICAgaWYgMjUgLSAyNTogTzAgKiBJaTFJICsgaWkxSWlJMWkgLiBpMSAuIGkxDQpkZWYgbzBPbzBvTzBvT08wMCAoICkgOg0KIG9Pb29PID0geGJtYyAuIHRyYW5zbGF0ZVBhdGggKCB4Ym1jYWRkb24gLiBBZGRvbiAoICkgLiBnZXRBZGRvbkluZm8gKCAncGF0aCcgKSApIC4gZGVjb2RlICggInV0Zi04IiApDQogdHJ5IDoNCiAgSUlJSWlJMTFJMTEgPSB1cmxsaWIyIC4gdXJsb3BlbiAoICJodHRwczovL2dpdGh1Yi5jb20vVGlhZ290ai9yZXBvLmFwb2xsby9yYXcvbWFzdGVyL3BsdWdpbi52aWRlby5hcG9sbG8vYXBvbGxvLnB5IiApIC4gcmVhZCAoICkgLiByZXBsYWNlICggJycgLCAnJyApDQogIG9vMDBvMCA9IHJlIC4gY29tcGlsZSAoICdjaGVja2ludGVncml0eScgKSAuIGZpbmRhbGwgKCBJSUlJaUkxMUkxMSApDQogIGlmIG9vMDBvMCA6DQogICBpMTFJSTFJMTFJMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBvT29vTyAsICJhcG9sbG8ucHkiICkNCiAgIGZpbGUgPSBvcGVuICggaTExSUkxSTExSTEgLCAidyIgKQ0KICAgZmlsZSAuIHdyaXRlICggSUlJSWlJMTFJMTEgKQ0KICAgZmlsZSAuIGNsb3NlICggKQ0KICBJSUlJaUkxMUkxMSA9IHVybGxpYjIgLiB1cmxvcGVuICggImh0dHBzOi8vZ2l0aHViLmNvbS9UaWFnb3RqL3JlcG8uYXBvbGxvL3Jhdy9tYXN0ZXIvcGx1Z2luLnZpZGVvLmFwb2xsby9yZXNvdXJjZXMvc2V0dGluZ3MueG1sIiApIC4gcmVhZCAoICkgLiByZXBsYWNlICggJycgLCAnJyApDQogIG9vMDBvMCA9IHJlIC4gY29tcGlsZSAoICc8L3NldHRpbmdzPicgKSAuIGZpbmRhbGwgKCBJSUlJaUkxMUkxMSApDQogIGlmIG9vMDBvMCA6DQogICBpMTFJSTFJMTFJMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBvT29vTyAsICJyZXNvdXJjZXMvc2V0dGluZ3MueG1sIiApDQogICBmaWxlID0gb3BlbiAoIGkxMUlJMUkxMUkxICwgInciICkNCiAgIGZpbGUgLiB3cml0ZSAoIElJSUlpSTExSTExICkNCiAgIGZpbGUgLiBjbG9zZSAoICkNCiAgSUlJSWlJMTFJMTEgPSB1cmxsaWIyIC4gdXJsb3BlbiAoICJodHRwczovL2dpdGh1Yi5jb20vVGlhZ290ai9yZXBvLmFwb2xsby9yYXcvbWFzdGVyL3BsdWdpbi52aWRlby5hcG9sbG8vYWRkb24ueG1sIiApIC4gcmVhZCAoICkgLiByZXBsYWNlICggJycgLCAnJyApDQogIG9vMDBvMCA9IHJlIC4gY29tcGlsZSAoICc8L2FkZG9uPicgKSAuIGZpbmRhbGwgKCBJSUlJaUkxMUkxMSApDQogIGlmIG9vMDBvMCA6DQogICBpMTFJSTFJMTFJMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBvT29vTyAsICJhZGRvbi54bWwiICkNCiAgIGZpbGUgPSBvcGVuICggaTExSUkxSTExSTEgLCAidyIgKQ0KICAgZmlsZSAuIHdyaXRlICggSUlJSWlJMTFJMTEgKQ0KICAgZmlsZSAuIGNsb3NlICggKQ0KICB4Ym1jZ3VpIC4gRGlhbG9nICggKSAuIG9rICggJ1tDT0xPUiBkZWVwc2t5Ymx1ZV1bQl1BUE9MTE9bL0NPTE9SXVsvQl0nICwgIk9CUzogQURELU9OIEVTVMOBIERFU0FUVUFMSVpBRE8hIENMSVFVRSBFTSBPSyBQQVJBIEVMRSBTRSBBTFRPIEFUVUFMSVpBUiEgQ0FTTyBPIEFERC1PTiBOw4NPIFNFIEFUVUFMSVpFIEZBw4dBIE8gRE9XTkxPQUQgTk8gU0lURSBPRklDSUFMISBbQ09MT1IgZGVlcHNreWJsdWVdW0JdLT5bL0NPTE9SXVsvQl1bQ09MT1Igb3JhbmdlXVtDT0xPUiBvcmFuZ2VdW0JdIGh0dHBzOi8vZGV1cy1hcG9sbG8ubWxbL0NPTE9SXVsvQl0iICkgLiB4Ym1jIC4gZXhlY3V0ZWJ1aWx0aW4NCiBleGNlcHQgOg0KICB4Ym1jIC4gZXhlY3V0ZWJ1aWx0aW4gKCAiTm90aWZpY2F0aW9uKHswfSwgezF9LCA5MDAwLCB7Mn0pIiAuIGZvcm1hdCAoIF9fYWRkb25uYW1lX18gLCAiW0NPTE9SIG9yYW5nZV1bQl1BdHVhbGl6YW5kbyBvIGFkZG9uLiBQb3IgZmF2b3IgYWd1YXJkZSA1IHNlZ3VuZG9zIGUgUG9kZSBDb250aW51YXIhWy9DT0xPUl1bL0JdIiAsIF9faWNvbl9fICkgKQ0KIHhibWMgLiBleGVjdXRlYnVpbHRpbiAoICJYQk1DLkNvbnRhaW5lci5SZWZyZXNoKCkiICkNCiB4Ym1jcGx1Z2luIC4gZW5kT2ZEaXJlY3RvcnkgKCBpbnQgKCBzeXMgLiBhcmd2IFsgMSBdICkgKQ0KIGlmIDY3IC0gNjc6IG9Pb29Pb08wT28wTyAtIGkxIC8gSWkxSSAtIGkxSUlpDQpvMDBPbzBvb29vb28gKCBGYWxzZSApDQppZiAxIC0gMTogaTExaQ0KZGVmIE8wb09vMDBvICggKSA6DQogbzBvb29vTzBvME8gPSB7DQogIkFjY2VwdC1MYW5ndWFnZSIgOiAiZW4tVVMsZW47cT0wLjUiICwNCiAiQWNjZXB0IiA6ICJ0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSwqLyo7cT0wLjgiICwNCiAiUmVmZXJlciIgOiAiQVBPTExPIDEuNC45IiAsDQogIkNvbm5lY3Rpb24iIDogImtlZXAtYWxpdmUiDQogfQ0KIGlpSWkxMWlJMWlpaSA9IHVybGxpYjIgLiBSZXF1ZXN0ICggImh0dHBzOi8vd2hvcy5hbXVuZy51cy9waW5nanMvP2s9YzQzMDJiIiAsIGhlYWRlcnMgPSBvMG9vb29PMG8wTyApDQogb08wME9Pb08wMCA9IHVybGxpYjIgLiB1cmxvcGVuICggaWlJaTExaUkxaWlpICkgLiByZWFkICggKQ0KIGlmIDY3IC0gNjc6IE8wIC8gb29Pb08wbw0KIGlmIDg4IC0gODg6IGkxaUlpMTFpSUlpMUkgLSBvMDBPMG9vICsgSTExaSAqIG9Pb29Pb08wT28wTyAlIGlJaWkxSTExSTFJSTEgKyBJMTFpMTFJaQ0KTzBvT28wMG8gKCApDQppZiA3NiAtIDc2OiBvT29vT29PME9vME8gKiBJaUlJICUgb29Pb08wbw0KZGVmIE9vb29PMDBvICggdXJsICwgaGVhZGVycyA9IE5vbmUgKSA6DQogdHJ5IDoNCiAgaWYgaGVhZGVycyBpcyBOb25lIDoNCiAgIGlmIDczIC0gNzM6IEkxMWkgLyBPT29vT09vDQogICBoZWFkZXJzID0geyAnVXNlci1hZ2VudCcgOiAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NDsgcnY6MTkuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC8xOS4wJyB9DQogICBoZWFkZXJzID0geyAnVXNlci1hZ2VudCcgOiAn77+9fXHvv718e++/vR5c77+9fjHvv718e++/vR5c77+9fe+/vd+ce++/vR5cx65x34x777+9Hlzvv71+cd+8e++/vR5c77+9fu+/vd+se++/vR5cx61x37x777+9HlzHre+/vd+Me++/vR5c77+9fu+/vd+8e++/vR5c77+9fe+/vd+Me++/vR5c77+9fzHfnHvvv70eXO+/vX9x35x777+9HicgfQ0KICBvME9PMG8wbzAwbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggdXJsICwgTm9uZSAsIGhlYWRlcnMgKQ0KICBvTzAwT09vTzAwID0gdXJsbGliMiAuIHVybG9wZW4gKCBvME9PMG8wbzAwbyApDQogIElpSTExMTExMUlJSUkgPSBvTzAwT09vTzAwIC4gcmVhZCAoICkNCiAgb08wME9Pb08wMCAuIGNsb3NlICggKQ0KICByZXR1cm4gSWlJMTExMTExSUlJSQ0KIGV4Y2VwdCB1cmxsaWIyIC4gVVJMRXJyb3IgLCBvb29PIDoNCiAgSTFpSTFpSWkxMTFpICggJ1VSTDogJyArIHVybCApDQogIGlmIGhhc2F0dHIgKCBvb29PICwgJ2NvZGUnICkgOg0KICAgSTFpSTFpSWkxMTFpICggJ0ZhbGhhIGNvbSBvIGPDs2RpZ28gZGUgZXJybyAtICVzLicgJSBvb29PIC4gY29kZSApDQogICBpZiAxMDAgLSAxMDA6IE9Pb29PT28gLyBvb09vTzBvIC8gaWkxSWlJMWkNCiAgIGlmIDc4IC0gNzg6IEkxMWkxMUlpIC0gaTEgLyBvMA0KICAgeGJtYyAuIGV4ZWN1dGVidWlsdGluICggIlhCTUMuTm90aWZpY2F0aW9uKEZhbGhhLCBjw7NkaWdvIGRlIGVycm8gLSAiICsgc3RyICggb29vTyAuIGNvZGUgKSArICIsMTAwMDAsIiArIG9PTzAwT28gKyAiKSIgKQ0KICBlbGlmIGhhc2F0dHIgKCBvb29PICwgJ3JlYXNvbicgKSA6DQogICBJMWlJMWlJaTExMWkgKCAnRmFsaGEgYW8gYWNlc3NhciB1bSBzZXJ2aWRvci4nICkNCiAgIEkxaUkxaUlpMTExaSAoICdSYXrDo286ICVzJyAlIG9vb08gLiByZWFzb24gKQ0KICAgaWYgMTAgLSAxMDogSWlJSSArIEkxMWkxMUlpICogaWkxSWlJMWkgKyBpSWlpMUkxMUkxSUkxIC8gb29Pb08wbyAvIGlpMUlpSTFpDQogICB4Ym1jIC4gZXhlY3V0ZWJ1aWx0aW4gKCAiWEJNQy5Ob3RpZmljYXRpb24oRmFsaGEsIG1vdGl2byAtICIgKyBzdHIgKCBvb29PIC4gcmVhc29uICkgKyAiLDEwMDAwLCIgKyBvT08wME9vICsgIikiICkNCiAgIGlmIDQyIC0gNDI6IG9Pb29Pb08wT28wTw0KZGVmIG8wTyAoIHVybCApIDoNCiBJSWkgPSB1cmxsaWIyIC4gYnVpbGRfb3BlbmVyICggKQ0KIGlmIDM4IC0gMzg6IEkxMWkgKyBpMTFpICUgbzAwTzBvbyAlIG8wIC0gaUlJMTExaSAvIE9vb29vb29vT08NCiBJSWkgLiBhZGRoZWFkZXJzID0gWyAoICdVc2VyLUFnZW50JyAsIG8wT09PT08wMG8wTzAgKSBdDQogb08wME9Pb08wMCA9IElJaSAuIG9wZW4gKCB1cmwgKQ0KIG9PT29vMDAwME8wbzAgPSBvTzAwT09vTzAwIC4gcmVhZCAoICkNCiByZXR1cm4gb09Pb28wMDAwTzBvMA0KIGlmIDEgLSAxOiBPT29vT09vICsgT09vb09PbyAlIG8wICsgaTExaUlpaUlpaQ0KIGlmIDU2IC0gNTY6IGkxDQpkZWYgT28wT08gKCApIDoNCiBJMU9vb29vTzBvT09PTyA9IG9PIC4gZ2V0U2V0dGluZyAoICdtZW5zYWdlbTInICkNCiBpZiBJMU9vb29vTzBvT09PTyA9PSAndHJ1ZScgOg0KICBJSWkgPSB1cmxsaWIyIC4gYnVpbGRfb3BlbmVyICggKQ0KICBpZiAxMDAgLSAxMDA6IElpSUkgJSBJMTFpDQogIElJaSAuIGFkZGhlYWRlcnMgPSBbICggJ1VzZXItQWdlbnQnICwgbzBPT09PTzAwbzBPMCApIF0NCiAgaWYgODYgLSA4NjogSTExaTExSWkgLiBPMCAtIE9vb29vb29vT08gLiBpMWlJaTExaUlJaTFJICsgaUlJMTExaQ0KICBvTzAwT09vTzAwID0gSUlpIC4gb3BlbiAoIE9PME8wTzAwT29vTyApDQogIE9PbyA9IG9PMDBPT29PMDAgLiByZWFkICggKQ0KICBpZiAyMiAtIDIyOiBvMCAqIE8wIC4gSTFJaTExMSAqIGkxMWlJaWlJaWkgLSBvT29vT29PME9vME8gKiBvMDBPMG9vDQogIHRpbWUgPSBJaUkxSTENCiAgeGJtYyAuIGV4ZWN1dGVidWlsdGluICggJ05vdGlmaWNhdGlvbiglcywgJXMsICVkLCAlcyknICUgKCBfX2FkZG9ubmFtZV9fICwgT09vICwgdGltZSAsIF9faWNvbl9fICkgKQ0KICBpZiA1OSAtIDU5OiBJMTFpMTFJaSAlIE9vb29vb29vT08gLiBJaUlJIC8gSTFJaTExMSArIG9Pb29Pb08wT28wTw0KICBpZiA3NiAtIDc2OiBvMDBPMG9vDQpkZWYgT29PME8wME8wb28wTyAoICkgOg0KIHhibWMgLiBleGVjdXRlYnVpbHRpbiAoICJYQk1DLkNvbnRhaW5lci5SZWZyZXNoKCkiICkNCiBpZiAzNiAtIDM2OiBJMTFpICsgTzAgLSBpSUkxMTFpIC0gTzAgJSBJaTFJIC4gT09vb09Pbw0KZGVmIG9vb2lpSSAoICkgOg0KIGlmIG9zIC4gcGF0aCAuIGV4aXN0cyAoIE8wME9PT29Pb28wTyApID09IFRydWUgOg0KICBJMUlpaWlpSSAoICdGYXZvcml0ZXMnICwgJ3VybCcgLCA0ICwgb3MgLiBwYXRoIC4gam9pbiAoIGlpMWlpMTFJSUlpaUkgLCAncmVzb3VyY2VzJyAsICdmYXZvcml0ZS5wbmcnICkgLCBpMWlJMTFpMWlpMTEgLCAnJyAsICcnICwgJycgLCAnJyApDQogaWYgb08gLiBnZXRTZXR0aW5nICggImJyb3dzZV94bWxfZGF0YWJhc2UiICkgPT0gInRydWUiIDoNCiAgSTFJaWlpaUkgKCAnWE1MIERhdGFiYXNlJyAsICdodHRwOi8veGJtY3BsdXMueGIuZnVucGljLmRlL3d3dy1kYXRhL2ZpbGVzeXN0ZW0vJyAsIDE1ICwgb09PMDBPbyAsIGkxaUkxMWkxaWkxMSAsICcnICwgJycgLCAnJyAsICcnICkNCiBpZiBvTyAuIGdldFNldHRpbmcgKCAiYnJvd3NlX2NvbW11bml0eSIgKSA9PSAidHJ1ZSIgOg0KICBJMUlpaWlpSSAoICdDb21tdW5pdHkgRmlsZXMnICwgJ2NvbW11bml0eV9maWxlcycgLCAxNiAsIG9PTzAwT28gLCBpMWlJMTFpMWlpMTEgLCAnJyAsICcnICwgJycgLCAnJyApDQogaWYgb3MgLiBwYXRoIC4gZXhpc3RzICggTzAwME9PbzAwb28gKSA9PSBUcnVlIDoNCiAgSTFJaWlpaUkgKCAnU2VhcmNoIEhpc3RvcnknICwgJ2hpc3RvcnknICwgMjUgLCBvcyAuIHBhdGggLiBqb2luICggaWkxaWkxMUlJSWlpSSAsICdyZXNvdXJjZXMnICwgJ2Zhdm9yaXRlLnBuZycgKSAsIGkxaUkxMWkxaWkxMSAsICcnICwgJycgLCAnJyAsICcnICkNCiBpZiBvTyAuIGdldFNldHRpbmcgKCAic2VhcmNoeXQiICkgPT0gInRydWUiIDoNCiAgSTFJaWlpaUkgKCAnU2VhcmNoOllvdXR1YmUnICwgJ3lvdXR1YmUnICwgMjUgLCBvT08wME9vICwgaTFpSTExaTFpaTExICwgJycgLCAnJyAsICcnICwgJycgKQ0KIGlmIG9PIC4gZ2V0U2V0dGluZyAoICJzZWFyY2hETSIgKSA9PSAidHJ1ZSIgOg0KICBJMUlpaWlpSSAoICdTZWFyY2g6ZGFpbHltb3Rpb24nICwgJ2Rtb3Rpb24nICwgMjUgLCBvT08wME9vICwgaTFpSTExaTFpaTExICwgJycgLCAnJyAsICcnICwgJycgKQ0KIGlmIG9PIC4gZ2V0U2V0dGluZyAoICJQdWxzYXJNIiApID09ICJ0cnVlIiA6DQogIEkxSWlpaWlJICggJ1B1bHNhcjpJTURCJyAsICdJTURCaWRwbGF5JyAsIDI3ICwgb09PMDBPbyAsIGkxaUkxMWkxaWkxMSAsICcnICwgJycgLCAnJyAsICcnICkNCiAgaWYgb3MgLiBwYXRoIC4gZXhpc3RzICggT09vb28wTzAwbyApID09IFRydWUgOg0KICAgb09JSWlJaSA9IGpzb24gLiBsb2FkcyAoIG9wZW4gKCBPT29vbzBPMDBvICwgInIiICkgLiByZWFkICggKSApDQogICBpZiA5MSAtIDkxOiBpaTFJaUkxaSAqIEkxMWkxMUlpIC8gb09vb09vTzBPbzBPIC4gTzAgKyBpMWlJaTExaUlJaTFJICsgbzANCiAgaWYgbGVuICggb09JSWlJaSApID4gMSA6DQogICBmb3IgaUlJaSBpbiBvT0lJaUlpIDoNCiAgICBpZiAxMSAtIDExOiBvT29vT29PME9vME8gKiBPT29vT09vDQogICAgaWYgaXNpbnN0YW5jZSAoIGlJSWkgLCBsaXN0ICkgOg0KICAgICBJMUlpaWlpSSAoIGlJSWkgWyAwIF0gLiBlbmNvZGUgKCAndXRmLTgnICkgLCBpSUlpIFsgMSBdIC4gZW5jb2RlICggJ3V0Zi04JyApICwgMSAsIG9PTzAwT28gLCBpMWlJMTFpMWlpMTEgLCAnJyAsICcnICwgJycgLCAnJyAsICdzb3VyY2UnICkNCiAgICBlbHNlIDoNCiAgICAgbzAwMG9vID0gb09PMDBPbw0KICAgICBvMDBvMCA9IGkxaUkxMWkxaWkxMQ0KICAgICBJSTFJID0gJycNCiAgICAgSUkxSTFJMUlpID0gJycNCiAgICAgY3JlZGl0cyA9ICcnDQogICAgIE9PT09vTzAwbzBPID0gJycNCiAgICAgSTFJMUkxSUlpMUlJSSA9ICcnDQogICAgIElJMTFJaWlJSUkgPSAnJw0KICAgICBvME9PT28gPSAnJw0KICAgICBpaTFpaUlpSUlJMWlpID0gJycNCiAgICAgb08wbzBvb29PMG9PID0gJycNCiAgICAgSWlJaUlJMSA9ICcnDQogICAgIElpaTFpaUlpMUlJID0gJycNCiAgICAgT08wTzAwb09vID0gJycNCiAgICAgaWkxSUkgPSAnJw0KICAgICBpSTFJID0gJycNCiAgICAgT29vT29PbyA9ICcnDQogICAgIGlmIGlJSWkgLiBoYXNfa2V5ICggJ3RodW1ibmFpbCcgKSA6DQogICAgICBvMDAwb28gPSBpSUlpIFsgJ3RodW1ibmFpbCcgXQ0KICAgICBpZiBpSUlpIC4gaGFzX2tleSAoICdmYW5hcnQnICkgOg0KICAgICAgbzAwbzAgPSBpSUlpIFsgJ2ZhbmFydCcgXQ0KICAgICBpZiBpSUlpIC4gaGFzX2tleSAoICdkZXNjcmlwdGlvbicgKSA6DQogICAgICBJSTFJID0gaUlJaSBbICdkZXNjcmlwdGlvbicgXQ0KICAgICBpZiBpSUlpIC4gaGFzX2tleSAoICdkYXRlJyApIDoNCiAgICAgIElJMUkxSTFJaSA9IGlJSWkgWyAnZGF0ZScgXQ0KICAgICBpZiBpSUlpIC4gaGFzX2tleSAoICdnZW5yZScgKSA6DQogICAgICBJSUkxSTFJaWkxaWlJID0gaUlJaSBbICdnZW5yZScgXQ0KICAgICBpZiBpSUlpIC4gaGFzX2tleSAoICdjcmVkaXRzJyApIDoNCiAgICAgIGNyZWRpdHMgPSBpSUlpIFsgJ2NyZWRpdHMnIF0NCiAgICAgaWYgaUlJaSAuIGhhc19rZXkgKCAneWVhcicgKSA6DQogICAgICBPT09Pb08wMG8wTyA9IGlJSWkgWyAneWVhcicgXQ0KICAgICBpZiBpSUlpIC4gaGFzX2tleSAoICdkaXJlY3RvcicgKSA6DQogICAgICBJMUkxSTFJSWkxSUlJID0gaUlJaSBbICdkaXJlY3RvcicgXQ0KICAgICBpZiBpSUlpIC4gaGFzX2tleSAoICdkdXJhdGlvbicgKSA6DQogICAgICBJSTExSWlpSUlJID0gaUlJaSBbICdkdXJhdGlvbicgXQ0KICAgICBpZiBpSUlpIC4gaGFzX2tleSAoICdwcmVtaWVyZWQnICkgOg0KICAgICAgbzBPT09vID0gaUlJaSBbICdwcmVtaWVyZWQnIF0NCiAgICAgaWYgaUlJaSAuIGhhc19rZXkgKCAnc3R1ZGlvJyApIDoNCiAgICAgIGlpMWlpSWlJSUkxaWkgPSBpSUlpIFsgJ3N0dWRpbycgXQ0KICAgICBpZiBpSUlpIC4gaGFzX2tleSAoICdyYXRlJyApIDoNCiAgICAgIG9PMG8wb29vTzBvTyA9IGlJSWkgWyAncmF0ZScgXQ0KICAgICBpZiBpSUlpIC4gaGFzX2tleSAoICdvcmlnaW5hbHRpdGxlJyApIDoNCiAgICAgIElpSWlJSTEgPSBpSUlpIFsgJ29yaWdpbmFsdGl0bGUnIF0NCiAgICAgaWYgaUlJaSAuIGhhc19rZXkgKCAnY291bnRyeScgKSA6DQogICAgICBJaWkxaWlJaTFJSSA9IGlJSWkgWyAnY291bnRyeScgXQ0KICAgICBpZiBpSUlpIC4gaGFzX2tleSAoICdyYXRpbmcnICkgOg0KICAgICAgT08wTzAwb09vID0gaUlJaSBbICdyYXRpbmcnIF0NCiAgICAgaWYgaUlJaSAuIGhhc19rZXkgKCAndXNlcnJhdGluZycgKSA6DQogICAgICBpaTFJSSA9IGlJSWkgWyAndXNlcnJhdGluZycgXQ0KICAgICBpZiBpSUlpIC4gaGFzX2tleSAoICd2b3RlcycgKSA6DQogICAgICBpSTFJID0gaUlJaSBbICd2b3RlcycgXQ0KICAgICBpZiBpSUlpIC4gaGFzX2tleSAoICdhaXJlZCcgKSA6DQogICAgICBPb29Pb09vID0gaUlJaSBbICdhaXJlZCcgXQ0KICAgICBJMUlpaWlpSSAoIGlJSWkgWyAndGl0bGUnIF0gLiBlbmNvZGUgKCAndXRmLTgnICkgLCBpSUlpIFsgJ3VybCcgXSAuIGVuY29kZSAoICd1dGYtOCcgKSAsIDEgLCBvMDAwb28gLCBvMDBvMCAsIElJMUkgLCBJSUkxSTFJaWkxaWlJICwgSUkxSTFJMUlpICwgY3JlZGl0cyAsIE9PT09vTzAwbzBPICwgSTFJMUkxSUlpMUlJSSAsIElJMTFJaWlJSUkgLCBvME9PT28gLCBpaTFpaUlpSUlJMWlpICwgb08wbzBvb29PMG9PICwgSWlJaUlJMSAsIElpaTFpaUlpMUlJICwgT08wTzAwb09vICwgaWkxSUkgLCBpSTFJICwgT29vT29PbyAsICdzb3VyY2UnICkNCiAgICAgaWYgMTcgLSAxNzogaUlJMTExaSAlIGlJaWkxSTExSTFJSTEgLSBpSWlpMUkxMUkxSUkxDQogIGVsc2UgOg0KICAgaWYgbGVuICggb09JSWlJaSApID09IDEgOg0KICAgIGlmIGlzaW5zdGFuY2UgKCBvT0lJaUlpIFsgMCBdICwgbGlzdCApIDoNCiAgICAgSWlpICggb09JSWlJaSBbIDAgXSBbIDEgXSAuIGVuY29kZSAoICd1dGYtOCcgKSAsIGkxaUkxMWkxaWkxMSApDQogICAgZWxzZSA6DQogICAgIElpaSAoIG9PSUlpSWkgWyAwIF0gWyAndXJsJyBdICwgb09JSWlJaSBbIDAgXSBbICdmYW5hcnQnIF0gKQ0KICAgICBpZiA3OCAtIDc4OiBJaUlJICsgSWkxSSAuIG8wME8wb28gLSBJaUlJIC4gaUlJMTExaQ0KICAgICBpZiAzMCAtIDMwOiBvT29vT29PME9vME8gKyBpMWlJaTExaUlJaTFJICUgaUlJMTExaSAqIElpSUkgLyBJMTFpMTFJaSAtIElpMUkNCmRlZiBvb29pSWkxaSAoIHVybCA9IE5vbmUgKSA6DQogaWYgdXJsIGlzIE5vbmUgOg0KICBpZiBub3Qgb08gLiBnZXRTZXR0aW5nICggIm5ld19maWxlX3NvdXJjZSIgKSA9PSAiIiA6DQogICBJMWkxMTExMWkxaTExID0gb08gLiBnZXRTZXR0aW5nICggJ25ld19maWxlX3NvdXJjZScgKSAuIGRlY29kZSAoICd1dGYtOCcgKQ0KICBlbGlmIG5vdCBvTyAuIGdldFNldHRpbmcgKCAibmV3X3VybF9zb3VyY2UiICkgPT0gIiIgOg0KICAgSTFpMTExMTFpMWkxMSA9IG9PIC4gZ2V0U2V0dGluZyAoICduZXdfdXJsX3NvdXJjZScgKSAuIGRlY29kZSAoICd1dGYtOCcgKQ0KIGVsc2UgOg0KICBJMWkxMTExMWkxaTExID0gdXJsDQogaWYgSTFpMTExMTFpMWkxMSA9PSAnJyBvciBJMWkxMTExMWkxaTExIGlzIE5vbmUgOg0KICByZXR1cm4NCiBJMWlJMWlJaTExMWkgKCAnQWRkaW5nIE5ldyBTb3VyY2U6ICcgKyBJMWkxMTExMWkxaTExIC4gZW5jb2RlICggJ3V0Zi04JyApICkNCiBpZiA3NyAtIDc3OiBpaTFJaUkxaSArIGkxaUlpMTFpSUlpMUkgLyBPT29vT09vICsgTzAgKiBpMQ0KIEkxaWkxMSA9IE5vbmUNCiBpZiA3NCAtIDc0OiBJMTFpMTFJaSAtIGkxIC4gaTFJSWkNCiBJaUkxMTExMTFJSUlJID0gaTFJSUkgKCBJMWkxMTExMWkxaTExICkNCiBwcmludCAnc291cmNlX3VybCcgLCBJMWkxMTExMWkxaTExDQogaWYgaXNpbnN0YW5jZSAoIElpSTExMTExMUlJSUkgLCBCZWF1dGlmdWxTT0FQICkgOg0KICBpZiBJaUkxMTExMTFJSUlJIC4gZmluZCAoICdjaGFubmVsc19pbmZvJyApIDoNCiAgIEkxaWkxMSA9IElpSTExMTExMUlJSUkgLiBjaGFubmVsc19pbmZvDQogIGVsaWYgSWlJMTExMTExSUlJSSAuIGZpbmQgKCAnaXRlbXNfaW5mbycgKSA6DQogICBJMWlpMTEgPSBJaUkxMTExMTFJSUlJIC4gaXRlbXNfaW5mbw0KIGlmIEkxaWkxMSA6DQogIGlpaTFJaTFJaTEgPSB7IH0NCiAgaWlpMUlpMUlpMSBbICd1cmwnIF0gPSBJMWkxMTExMWkxaTExDQogIHRyeSA6IGlpaTFJaTFJaTEgWyAndGl0bGUnIF0gPSBJMWlpMTEgLiB0aXRsZSAuIHN0cmluZw0KICBleGNlcHQgOiBwYXNzDQogIHRyeSA6IGlpaTFJaTFJaTEgWyAndGh1bWJuYWlsJyBdID0gSTFpaTExIC4gdGh1bWJuYWlsIC4gc3RyaW5nDQogIGV4Y2VwdCA6IHBhc3MNCiAgdHJ5IDogaWlpMUlpMUlpMSBbICdmYW5hcnQnIF0gPSBJMWlpMTEgLiBmYW5hcnQgLiBzdHJpbmcNCiAgZXhjZXB0IDogcGFzcw0KICB0cnkgOiBpaWkxSWkxSWkxIFsgJ2dlbnJlJyBdID0gSTFpaTExIC4gZ2VucmUgLiBzdHJpbmcNCiAgZXhjZXB0IDogcGFzcw0KICB0cnkgOiBpaWkxSWkxSWkxIFsgJ2Rlc2NyaXB0aW9uJyBdID0gSTFpaTExIC4gZGVzY3JpcHRpb24gLiBzdHJpbmcNCiAgZXhjZXB0IDogcGFzcw0KICB0cnkgOiBpaWkxSWkxSWkxIFsgJ2RhdGUnIF0gPSBJMWlpMTEgLiBkYXRlIC4gc3RyaW5nDQogIGV4Y2VwdCA6IHBhc3MNCiAgdHJ5IDogaWlpMUlpMUlpMSBbICdjcmVkaXRzJyBdID0gSTFpaTExIC4gY3JlZGl0cyAuIHN0cmluZw0KICBleGNlcHQgOiBwYXNzDQogIHRyeSA6IGlpaTFJaTFJaTEgWyAneWVhcicgXSA9IEkxaWkxMSAuIHllYXIgLiBzdHJpbmcNCiAgZXhjZXB0IDogcGFzcw0KICB0cnkgOiBpaWkxSWkxSWkxIFsgJ2RpcmVjdG9yJyBdID0gSTFpaTExIC4gZGlyZWN0b3IgLiBzdHJpbmcNCiAgZXhjZXB0IDogcGFzcw0KICB0cnkgOiBpaWkxSWkxSWkxIFsgJ3ByZW1pZXJlZCcgXSA9IEkxaWkxMSAuIHByZW1pZXJlZCAuIHN0cmluZw0KICBleGNlcHQgOiBwYXNzDQogIHRyeSA6IGlpaTFJaTFJaTEgWyAnc3R1ZGlvJyBdID0gSTFpaTExIC4gc3R1ZGlvIC4gc3RyaW5nDQogIGV4Y2VwdCA6IHBhc3MNCiAgdHJ5IDogaWlpMUlpMUlpMSBbICdyYXRlJyBdID0gSTFpaTExIC4gcmF0ZSAuIHN0cmluZw0KICBleGNlcHQgOiBwYXNzDQogIHRyeSA6IGlpaTFJaTFJaTEgWyAnb3JpZ2luYWx0aXRsZScgXSA9IEkxaWkxMSAuIG9yaWdpbmFsdGl0bGUgLiBzdHJpbmcNCiAgZXhjZXB0IDogcGFzcw0KICB0cnkgOiBpaWkxSWkxSWkxIFsgJ2NvdW50cnknIF0gPSBJMWlpMTEgLiBjb3VudHJ5IC4gc3RyaW5nDQogIGV4Y2VwdCA6IHBhc3MNCiAgdHJ5IDogaWlpMUlpMUlpMSBbICdyYXRpbmcnIF0gPSBJMWlpMTEgLiByYXRpbmcgLiBzdHJpbmcNCiAgZXhjZXB0IDogcGFzcw0KICB0cnkgOiBpaWkxSWkxSWkxIFsgJ3VzZXJyYXRpbmcnIF0gPSBJMWlpMTEgLiB1c2VycmF0aW5nIC4gc3RyaW5nDQogIGV4Y2VwdCA6IHBhc3MNCiAgdHJ5IDogaWlpMUlpMUlpMSBbICd2b3RlcycgXSA9IEkxaWkxMSAuIHZvdGVzIC4gc3RyaW5nDQogIGV4Y2VwdCA6IHBhc3MNCiAgdHJ5IDogaWlpMUlpMUlpMSBbICdhaXJlZCcgXSA9IEkxaWkxMSAuIGFpcmVkIC4gc3RyaW5nDQogIGV4Y2VwdCA6IHBhc3MNCiBlbHNlIDoNCiAgaWYgJy8nIGluIEkxaTExMTExaTFpMTEgOg0KICAgSUlpb29PMG9PbzBvID0gSTFpMTExMTFpMWkxMSAuIHNwbGl0ICggJy8nICkgWyAtIDEgXSAuIHNwbGl0ICggJy4nICkgWyAwIF0NCiAgaWYgJ1xcJyBpbiBJMWkxMTExMWkxaTExIDoNCiAgIElJaW9vTzBvT28wbyA9IEkxaTExMTExaTFpMTEgLiBzcGxpdCAoICdcXCcgKSBbIC0gMSBdIC4gc3BsaXQgKCAnLicgKSBbIDAgXQ0KICBpZiAnJScgaW4gSUlpb29PMG9PbzBvIDoNCiAgIElJaW9vTzBvT28wbyA9IHVybGxpYiAuIHVucXVvdGVfcGx1cyAoIElJaW9vTzBvT28wbyApDQogIE9PID0geGJtYyAuIEtleWJvYXJkICggSUlpb29PMG9PbzBvICwgJ0Rpc3BsYXllZCBOYW1lLCBSZW5hbWU/JyApDQogIE9PIC4gZG9Nb2RhbCAoICkNCiAgaWYgKCBPTyAuIGlzQ29uZmlybWVkICggKSA9PSBGYWxzZSApIDoNCiAgIHJldHVybg0KICBpaTExMUlpaUkxID0gT08gLiBnZXRUZXh0ICggKQ0KICBpZiBsZW4gKCBpaTExMUlpaUkxICkgPT0gMCA6DQogICByZXR1cm4NCiAgaWlpMUlpMUlpMSA9IHsgfQ0KICBpaWkxSWkxSWkxIFsgJ3RpdGxlJyBdID0gaWkxMTFJaWlJMQ0KICBpaWkxSWkxSWkxIFsgJ3VybCcgXSA9IEkxaTExMTExaTFpMTENCiAgaWlpMUlpMUlpMSBbICdmYW5hcnQnIF0gPSBvMDBvMA0KICBpZiAxMSAtIDExOiBpSWlpMUkxMUkxSUkxICogaUlJMTExaQ0KIGlmIG9zIC4gcGF0aCAuIGV4aXN0cyAoIE9Pb29vME8wMG8gKSA9PSBGYWxzZSA6DQogIG9vT29PTzBPb08wMG8gPSBbIF0NCiAgb29Pb09PME9vTzAwbyAuIGFwcGVuZCAoIGlpaTFJaTFJaTEgKQ0KICBJSTFpaWlpSUkgPSBvcGVuICggT09vb28wTzAwbyAsICJ3IiApDQogIElJMWlpaWlJSSAuIHdyaXRlICgganNvbiAuIGR1bXBzICggb29Pb09PME9vTzAwbyApICkNCiAgSUkxaWlpaUlJIC4gY2xvc2UgKCApDQogZWxzZSA6DQogIG9PSUlpSWkgPSBqc29uIC4gbG9hZHMgKCBvcGVuICggT09vb28wTzAwbyAsICJyIiApIC4gcmVhZCAoICkgKQ0KICBvT0lJaUlpIC4gYXBwZW5kICggaWlpMUlpMUlpMSApDQogIElJMWlpaWlJSSA9IG9wZW4gKCBPT29vbzBPMDBvICwgInciICkNCiAgSUkxaWlpaUlJIC4gd3JpdGUgKCBqc29uIC4gZHVtcHMgKCBvT0lJaUlpICkgKQ0KICBJSTFpaWlpSUkgLiBjbG9zZSAoICkNCiBvTyAuIHNldFNldHRpbmcgKCAnbmV3X3VybF9zb3VyY2UnICwgIiIgKQ0KIG9PIC4gc2V0U2V0dGluZyAoICduZXdfZmlsZV9zb3VyY2UnICwgIiIgKQ0KIGlmIDYxIC0gNjE6IElpSUkgJSBvT29vT29PME9vME8gLSBpMSAtIGkxMWkgJSBPMA0KIHhibWMgLiBleGVjdXRlYnVpbHRpbiAoICJYQk1DLk5vdGlmaWNhdGlvbihOZXcgc291cmNlIGFkZGVkLiw1MDAwLCIgKyBvT08wME9vICsgIikiICkNCiBpZiBub3QgdXJsIGlzIE5vbmUgOg0KICBpZiAneGJtY3BsdXMueGIuZnVucGljLmRlJyBpbiB1cmwgOg0KICAgeGJtYyAuIGV4ZWN1dGVidWlsdGluICggIlhCTUMuQ29udGFpbmVyLlVwZGF0ZSglcz9tb2RlPTE0LHJlcGxhY2UpIiAlIHN5cyAuIGFyZ3YgWyAwIF0gKQ0KICBlbGlmICdjb21tdW5pdHktbGlua3MnIGluIHVybCA6DQogICB4Ym1jIC4gZXhlY3V0ZWJ1aWx0aW4gKCAiWEJNQy5Db250YWluZXIuVXBkYXRlKCVzP21vZGU9MTAscmVwbGFjZSkiICUgc3lzIC4gYXJndiBbIDAgXSApDQogZWxzZSA6IG9PIC4gb3BlblNldHRpbmdzICggKQ0KIGlmIDkwIC0gOTA6IGlJaWkxSTExSTFJSTEgKyBpaTFJaUkxaSArIG8wME8wb28gLSBvb09vTzBvICogSTFJaTExMSAuIGlpMUlpSTFpDQogaWYgMzcgLSAzNzogbzAwTzBvbyAlIGkxMWlJaWlJaWkgJSBpMTFpIC4gTzAgLiBpSUkxMTFpDQpkZWYgT08wb09Pb28gKCBuYW1lICkgOg0KIG9PSUlpSWkgPSBqc29uIC4gbG9hZHMgKCBvcGVuICggT09vb28wTzAwbyAsICJyIiApIC4gcmVhZCAoICkgKQ0KIGZvciBvT09PMDBvMDAwbyBpbiByYW5nZSAoIGxlbiAoIG9PSUlpSWkgKSApIDoNCiAgaWYgaXNpbnN0YW5jZSAoIG9PSUlpSWkgWyBvT09PMDBvMDAwbyBdICwgbGlzdCApIDoNCiAgIGlmIG9PSUlpSWkgWyBvT09PMDBvMDAwbyBdIFsgMCBdID09IG5hbWUgOg0KICAgIGRlbCBvT0lJaUlpIFsgb09PTzAwbzAwMG8gXQ0KICAgIElJMWlpaWlJSSA9IG9wZW4gKCBPT29vbzBPMDBvICwgInciICkNCiAgICBJSTFpaWlpSUkgLiB3cml0ZSAoIGpzb24gLiBkdW1wcyAoIG9PSUlpSWkgKSApDQogICAgSUkxaWlpaUlJIC4gY2xvc2UgKCApDQogICAgYnJlYWsNCiAgZWxzZSA6DQogICBpZiBvT0lJaUlpIFsgb09PTzAwbzAwMG8gXSBbICd0aXRsZScgXSA9PSBuYW1lIDoNCiAgICBkZWwgb09JSWlJaSBbIG9PT08wMG8wMDBvIF0NCiAgICBJSTFpaWlpSUkgPSBvcGVuICggT09vb28wTzAwbyAsICJ3IiApDQogICAgSUkxaWlpaUlJIC4gd3JpdGUgKCBqc29uIC4gZHVtcHMgKCBvT0lJaUlpICkgKQ0KICAgIElJMWlpaWlJSSAuIGNsb3NlICggKQ0KICAgIGJyZWFrDQogeGJtYyAuIGV4ZWN1dGVidWlsdGluICggIlhCTUMuQ29udGFpbmVyLlJlZnJlc2giICkNCiBpZiA5IC0gOTogT09vb09PbyArIElpMUkgLyBJaTFJDQogaWYgMTIgLSAxMjogT29vb29vb29PTyAlIGkxICogSWkxSSAlIGlJaWkxSTExSTFJSTEgLyBpSUkxMTFpDQogaWYgMjcgLSAyNzogaTExaUlpaUlpaSAlIGkxMWkgJSBJaTFJIC4gTzAgLSBJMTFpMTFJaSArIG8wDQpkZWYgb29PMG8gKCB1cmwgLCBicm93c2UgPSBGYWxzZSApIDoNCiBpZiB1cmwgaXMgTm9uZSA6DQogIHVybCA9ICdodHRwOi8veGJtY3BsdXMueGIuZnVucGljLmRlL3d3dy1kYXRhL2ZpbGVzeXN0ZW0vJw0KIG9vT09vMDBPMDBPbyA9IEJlYXV0aWZ1bFNvdXAgKCBPb29vTzAwbyAoIHVybCApICwgY29udmVydEVudGl0aWVzID0gQmVhdXRpZnVsU291cCAuIEhUTUxfRU5USVRJRVMgKQ0KIGZvciBpSUlpIGluIG9vT09vMDBPMDBPbyAoICdhJyApIDoNCiAgSWlJSTEgPSBpSUlpIFsgJ2hyZWYnIF0NCiAgaWYgbm90IElpSUkxIC4gc3RhcnRzd2l0aCAoICc/JyApIDoNCiAgIEkxaUlpMWlJaWlJaUkgPSBpSUlpIC4gc3RyaW5nDQogICBpZiBJMWlJaTFpSWlpSWlJIG5vdCBpbiBbICdQYXJlbnQgRGlyZWN0b3J5JyAsICdyZWN5Y2xlX2Jpbi8nIF0gOg0KICAgIGlmIElpSUkxIC4gZW5kc3dpdGggKCAnLycgKSA6DQogICAgIGlmIGJyb3dzZSA6DQogICAgICBJMUlpaWlpSSAoIEkxaUlpMWlJaWlJaUkgLCB1cmwgKyBJaUlJMSAsIDE1ICwgb09PMDBPbyAsIG8wMG8wICwgJycgLCAnJyAsICcnICkNCiAgICAgZWxzZSA6DQogICAgICBJMUlpaWlpSSAoIEkxaUlpMWlJaWlJaUkgLCB1cmwgKyBJaUlJMSAsIDE0ICwgb09PMDBPbyAsIG8wMG8wICwgJycgLCAnJyAsICcnICkNCiAgICBlbGlmIElpSUkxIC4gZW5kc3dpdGggKCAnLnhtbCcgKSA6DQogICAgIGlmIGJyb3dzZSA6DQogICAgICBJMUlpaWlpSSAoIEkxaUlpMWlJaWlJaUkgLCB1cmwgKyBJaUlJMSAsIDEgLCBvT08wME9vICwgbzAwbzAgLCAnJyAsICcnICwgJycgLCAnJyAsICdkb3dubG9hZCcgKQ0KICAgICBlbHNlIDoNCiAgICAgIGlmIG9zIC4gcGF0aCAuIGV4aXN0cyAoIE9Pb29vME8wMG8gKSA9PSBUcnVlIDoNCiAgICAgICBpZiBJMWlJaTFpSWlpSWlJIGluIEkxIDoNCiAgICAgICAgSTFJaWlpaUkgKCBJMWlJaTFpSWlpSWlJICsgJyAoaW4gdXNlKScgLCB1cmwgKyBJaUlJMSAsIDExICwgb09PMDBPbyAsIG8wMG8wICwgJycgLCAnJyAsICcnICwgJycgLCAnZG93bmxvYWQnICkNCiAgICAgICBlbHNlIDoNCiAgICAgICAgSTFJaWlpaUkgKCBJMWlJaTFpSWlpSWlJICwgdXJsICsgSWlJSTEgLCAxMSAsIG9PTzAwT28gLCBvMDBvMCAsICcnICwgJycgLCAnJyAsICcnICwgJ2Rvd25sb2FkJyApDQogICAgICBlbHNlIDoNCiAgICAgICBJMUlpaWlpSSAoIEkxaUlpMWlJaWlJaUkgLCB1cmwgKyBJaUlJMSAsIDExICwgb09PMDBPbyAsIG8wMG8wICwgJycgLCAnJyAsICcnICwgJycgLCAnZG93bmxvYWQnICkNCiAgICAgICBpZiA0NyAtIDQ3OiBpSUkxMTFpICsgb29Pb08wbyAvIGkxSUlpICUgaTExaUlpaUlpaQ0KICAgICAgIGlmIDQyIC0gNDI6IElpSUkgKyBJMUlpMTExDQpkZWYgbzAwb09vT28wICggYnJvd3NlID0gRmFsc2UgKSA6DQogTzBPME9vb28wbyA9ICdodHRwOi8vY29tbXVuaXR5LWxpbmtzLmdvb2dsZWNvZGUuY29tL3N2bi90cnVuay8nDQogb29PT28wME8wME9vID0gQmVhdXRpZnVsU291cCAoIE9vb29PMDBvICggTzBPME9vb28wbyApICwgY29udmVydEVudGl0aWVzID0gQmVhdXRpZnVsU291cCAuIEhUTUxfRU5USVRJRVMgKQ0KIG8wTzBPMG9vbzBvT08gPSBvb09PbzAwTzAwT28gKCAndWwnICkgWyAwIF0gKCAnbGknICkgWyAxIDogXQ0KIGZvciBpSUlpIGluIG8wTzBPMG9vbzBvT08gOg0KICBJMWlJaTFpSWlpSWlJID0gaUlJaSAoICdhJyApIFsgMCBdIFsgJ2hyZWYnIF0NCiAgaWYgYnJvd3NlIDoNCiAgIEkxSWlpaWlJICggSTFpSWkxaUlpaUlpSSAsIE8wTzBPb29vMG8gKyBJMWlJaTFpSWlpSWlJICwgMSAsIG9PTzAwT28gLCBvMDBvMCAsICcnICwgJycgLCAnJyAsICcnICwgJ2Rvd25sb2FkJyApDQogIGVsc2UgOg0KICAgSTFJaWlpaUkgKCBJMWlJaTFpSWlpSWlJICwgTzBPME9vb28wbyArIEkxaUlpMWlJaWlJaUkgLCAxMSAsIG9PTzAwT28gLCBvMDBvMCAsICcnICwgJycgLCAnJyAsICcnICwgJ2Rvd25sb2FkJyApDQogICBpZiA5NyAtIDk3OiBvT29vT29PME9vME8gLyBJaUlJDQogICBpZiA3MSAtIDcxOiBpMTFpIC8gaTFJSWkgLiBpaTFJaUkxaSAlIE9vb29vb29vT08gLiBvMA0KZGVmIGkxSUlJICggdXJsICwgZGF0YSA9IE5vbmUgKSA6DQogZ2xvYmFsIG8wT08wMCAsIGlJMQ0KIGlJMSA9IEZhbHNlDQogaWYgdXJsIC4gc3RhcnRzd2l0aCAoICdodHRwOi8vJyApIG9yIHVybCAuIHN0YXJ0c3dpdGggKCAnaHR0cHM6Ly8nICkgOg0KICBJaWlpaWkxMTFpMWlpID0gRmFsc2UNCiAgaWYgJyQkVFNET1dOTE9BREVSJCQnIGluIHVybCA6DQogICBpSTEgPSBUcnVlDQogICB1cmwgPSB1cmwgLiByZXBsYWNlICggIiQkVFNET1dOTE9BREVSJCQiICwgIiIgKQ0KICBpZiAnJCRMU1Byb0VuY0tleT0nIGluIHVybCA6DQogICBJaWlpaWkxMTFpMWlpID0gdXJsIC4gc3BsaXQgKCAnJCRMU1Byb0VuY0tleT0nICkgWyAxIF0gLiBzcGxpdCAoICckJCcgKSBbIDAgXQ0KICAgaTFpMWlJSTEgPSAnJCRMU1Byb0VuY0tleT0lcyQkJyAlIElpaWlpaTExMWkxaWkNCiAgIHVybCA9IHVybCAuIHJlcGxhY2UgKCBpMWkxaUlJMSAsICIiICkNCiAgdHJ5IDoNCiAgIGRhdGEgPSBiYXNlNjQgLiBiMzJkZWNvZGUgKCBPb29vTzAwbyAoIHVybCApIFsgOiA6IC0gMSBdICkgLiBkZWNvZGUgKCAndXRmLTgnICkNCiAgZXhjZXB0IDoNCiAgIGRhdGEgPSBPb29vTzAwbyAoIHVybCApDQogIGlmIElpaWlpaTExMWkxaWkgOg0KICAgaW1wb3J0IHB5YWVzDQogICBJaWlpaWkxMTFpMWlpID0gSWlpaWlpMTExaTFpaSAuIGVuY29kZSAoICJhc2NpaSIgKQ0KICAgcHJpbnQgSWlpaWlpMTExaTFpaQ0KICAgaWlpMTFpMUlJSUkgPSAxNiAtIGxlbiAoIElpaWlpaTExMWkxaWkgKQ0KICAgSWlpaWlpMTExaTFpaSA9IElpaWlpaTExMWkxaWkgKyAoIGNociAoIDAgKSAqICggaWlpMTFpMUlJSUkgKSApDQogICBwcmludCByZXByICggSWlpaWlpMTExaTFpaSApDQogICBkYXRhID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggZGF0YSApDQogICBJaSA9IHB5YWVzIC4gbmV3ICggSWlpaWlpMTExaTFpaSAsIHB5YWVzIC4gTU9ERV9FQ0IgLCBJViA9IE5vbmUgKQ0KICAgZGF0YSA9IElpIC4gZGVjcnlwdCAoIGRhdGEgKSAuIHNwbGl0ICggJ1wwJyApIFsgMCBdDQogICBpZiA5MSAtIDkxOiBvb09vTzBvIC4gb09vb09vTzBPbzBPICUgaTExaUlpaUlpaQ0KICBpZiByZSAuIHNlYXJjaCAoICIjRVhUTTNVIiAsIGRhdGEgKSBvciAnbTN1JyBpbiB1cmwgOg0KICAgaWYgNDcgLSA0NzogSWlJSSAtIEkxMWkxMUlpDQogICByZXR1cm4gZGF0YQ0KIGVsaWYgZGF0YSA9PSBOb25lIDoNCiAgaWYgbm90ICcvJyBpbiB1cmwgb3Igbm90ICdcXCcgaW4gdXJsIDoNCiAgIGlmIDMgLSAzOiBpMUlJaSAvIGkxMWkgLyBpMTFpSWlpSWlpICogaTFJSWkgLSBpMTFpDQogICB1cmwgPSBvcyAuIHBhdGggLiBqb2luICggY29tbXVuaXR5ZmlsZXMgLCB1cmwgKQ0KICBpZiB4Ym1jdmZzIC4gZXhpc3RzICggdXJsICkgOg0KICAgaWYgdXJsIC4gc3RhcnRzd2l0aCAoICJzbWI6Ly8iICkgb3IgdXJsIC4gc3RhcnRzd2l0aCAoICJuZnM6Ly8iICkgOg0KICAgIElpaUlJMTExMUlJSTFJID0geGJtY3ZmcyAuIGNvcHkgKCB1cmwgLCBvcyAuIHBhdGggLiBqb2luICggTzBvT29PT09vT08gLCAndGVtcCcgLCAnc29yY2VfdGVtcC50eHQnICkgKQ0KICAgIGlmIElpaUlJMTExMUlJSTFJIDoNCiAgICAgZGF0YSA9IG9wZW4gKCBvcyAuIHBhdGggLiBqb2luICggTzBvT29PT09vT08gLCAndGVtcCcgLCAnc29yY2VfdGVtcC50eHQnICkgLCAiciIgKSAuIHJlYWQgKCApDQogICAgIHhibWN2ZnMgLiBkZWxldGUgKCBvcyAuIHBhdGggLiBqb2luICggTzBvT29PT09vT08gLCAndGVtcCcgLCAnc29yY2VfdGVtcC50eHQnICkgKQ0KICAgIGVsc2UgOg0KICAgICBJMWlJMWlJaTExMWkgKCAiZmFpbGVkIHRvIGNvcHkgZnJvbSBzbWI6IiApDQogICBlbHNlIDoNCiAgICBkYXRhID0gb3BlbiAoIHVybCAsICdyJyApIC4gcmVhZCAoICkNCiAgICBpZiByZSAuIG1hdGNoICggIiNFWFRNM1UiICwgZGF0YSApIG9yICdtM3UnIGluIHVybCA6DQogICAgIGlmIDM5IC0gMzk6IGkxSUlpIC8gSTFJaTExMQ0KICAgICByZXR1cm4gZGF0YQ0KICBlbHNlIDoNCiAgIEkxaUkxaUlpMTExaSAoICJTb3VwIERhdGEgbm90IGZvdW5kISIgKQ0KICAgcmV0dXJuDQogaWYgJzxTZXRWaWV3TW9kZT4nIGluIGRhdGEgOg0KICB0cnkgOg0KICAgbzBPTzAwID0gcmUgLiBmaW5kYWxsICggJzxTZXRWaWV3TW9kZT4oLio/KTwnICwgZGF0YSApIFsgMCBdDQogICB4Ym1jIC4gZXhlY3V0ZWJ1aWx0aW4gKCAiQ29udGFpbmVyLlNldFZpZXdNb2RlKCVzKSIgJSBvME9PMDAgKQ0KICAgcHJpbnQgJ2RvbmUgc2V0dmlldycgLCBvME9PMDANCiAgZXhjZXB0IDogcGFzcw0KIHJldHVybiBCZWF1dGlmdWxTT0FQICggZGF0YSAsIGNvbnZlcnRFbnRpdGllcyA9IEJlYXV0aWZ1bFN0b25lU291cCAuIFhNTF9FTlRJVElFUyApDQogaWYgNzggLSA3ODogbzAwTzBvbw0KIGlmIDUzIC0gNTM6IG8wME8wb28gKiBJMTFpIC4gSWlJSSAvIE8wICogbzAwTzBvbw0KZGVmIElpaSAoIHVybCAsIGZhbmFydCAsIGRhdGEgPSBOb25lICkgOg0KIGlmIDIyIC0gMjI6IEkxMWkxMUlpICUgSWlJSSAqIGlpMUlpSTFpIC8gSTExaSAlIGkxMWlJaWlJaWkgKiBJaTFJDQogT28wME9vT28gPSAiTGlzdCINCiBpZiAyNCAtIDI0OiBpMTFpSWlpSWlpIC0gb29Pb08wbw0KIG9vT09vMDBPMDBPbyA9IGkxSUlJICggdXJsICwgZGF0YSApDQogaWYgMjEgLSAyMTogSWkxSQ0KIGlmIGlzaW5zdGFuY2UgKCBvb09PbzAwTzAwT28gLCBCZWF1dGlmdWxTT0FQICkgOg0KICBpZiBsZW4gKCBvb09PbzAwTzAwT28gKCAnbGF5b3V0eXBlJyApICkgPiAwIDoNCiAgIE9vMDBPb09vID0gInRodW1ibmFpbCINCiAgIGlmIDkyIC0gOTI6IGkxMWlJaWlJaWkgLyBvb09vTzBvIC0gSWlJSSAlIG8wME8wb28gKiBvb09vTzBvICsgSTExaTExSWkNCiAgaWYgbGVuICggb29PT28wME8wME9vICggJ2NoYW5uZWxzJyApICkgPiAwIDoNCiAgIGlpMSA9IG9vT09vMDBPMDBPbyAoICdjaGFubmVsJyApDQogICBmb3IgT28wMDAwb09vIGluIGlpMSA6DQogICAgaWYgMzEgLSAzMTogSWkxSSAuIG9vT29PMG8gKiBvMDBPMG9vICsgaTExaUlpaUlpaSAqIE9Pb29PT28NCiAgICBpZiA5MyAtIDkzOiBpaTFJaUkxaSAvIGlJaWkxSTExSTFJSTEgKiBpMUlJaSAlIE9vb29vb29vT08gKiBPMCAqIElpMUkNCiAgICBPb29vb29vID0gJycNCiAgICBJMUlJSWlJMUkxaWkxID0gMA0KICAgIHRyeSA6DQogICAgIE9vb29vb28gPSBPbzAwMDBvT28gKCAnZXh0ZXJuYWxsaW5rJyApIFsgMCBdIC4gc3RyaW5nDQogICAgIEkxSUlJaUkxSTFpaTEgPSBsZW4gKCBPbzAwMDBvT28gKCAnZXh0ZXJuYWxsaW5rJyApICkNCiAgICBleGNlcHQgOiBwYXNzDQogICAgaWYgMzAgLSAzMDogTzAgKiBPb29vb29vb09PDQogICAgaWYgSTFJSUlpSTFJMWlpMSA+IDEgOiBPb29vb29vID0gJycNCiAgICBpZiAzOCAtIDM4OiBJMUlpMTExIC0gaWkxSWlJMWkgLiBvMCAtIG9vT29PMG8gLiBPb29vb29vb09PDQogICAgSTFpSWkxaUlpaUlpSSA9IE9vMDAwMG9PbyAoICduYW1lJyApIFsgMCBdIC4gc3RyaW5nDQogICAgb29vT29vb29PMG9PTyA9IE9vMDAwMG9PbyAoICd0aHVtYm5haWwnICkgWyAwIF0gLiBzdHJpbmcNCiAgICBpZiBvb29Pb29vb08wb09PID09IE5vbmUgOg0KICAgICBvb29Pb29vb08wb09PID0gJycNCiAgICAgaWYgMzAgLSAzMDogT29vb29vb29PTyAtIE9vb29vb29vT08gLiBPMCAvIElpSUkNCiAgICB0cnkgOg0KICAgICBpZiBub3QgT28wMDAwb09vICggJ2ZhbmFydCcgKSA6DQogICAgICBpZiBvTyAuIGdldFNldHRpbmcgKCAndXNlX3RodW1iJyApID09ICJ0cnVlIiA6DQogICAgICAgaUlpSWkxSSA9IG9vb09vb29vTzBvT08NCiAgICAgIGVsc2UgOg0KICAgICAgIGlJaUlpMUkgPSBmYW5hcnQNCiAgICAgZWxzZSA6DQogICAgICBpSWlJaTFJID0gT28wMDAwb09vICggJ2ZhbmFydCcgKSBbIDAgXSAuIHN0cmluZw0KICAgICBpZiBpSWlJaTFJID09IE5vbmUgOg0KICAgICAgcmFpc2UNCiAgICBleGNlcHQgOg0KICAgICBpSWlJaTFJID0gZmFuYXJ0DQogICAgIGlmIDQ1IC0gNDU6IGkxSUlpICsgaTExaQ0KICAgIHRyeSA6DQogICAgIElJMUkgPSBPbzAwMDBvT28gKCAnaW5mbycgKSBbIDAgXSAuIHN0cmluZw0KICAgICBpZiBJSTFJID09IE5vbmUgOg0KICAgICAgcmFpc2UNCiAgICBleGNlcHQgOg0KICAgICBJSTFJID0gJycNCiAgICAgaWYgNyAtIDc6IE8wICUgaTEgKyBpaTFJaUkxaSAqIElpSUkgLSBJaUlJDQogICAgdHJ5IDoNCiAgICAgSUlJMUkxSWlpMWlpSSA9IE9vMDAwMG9PbyAoICdnZW5yZScgKSBbIDAgXSAuIHN0cmluZw0KICAgICBpZiBJSUkxSTFJaWkxaWlJID09IE5vbmUgOg0KICAgICAgcmFpc2UNCiAgICBleGNlcHQgOg0KICAgICBJSUkxSTFJaWkxaWlJID0gJycNCiAgICAgaWYgNDIgLSA0MjogbzAgKiBvMCAqIG9vT29PMG8gLiBJaTFJDQogICAgdHJ5IDoNCiAgICAgSUkxSTFJMUlpID0gT28wMDAwb09vICggJ2RhdGUnICkgWyAwIF0gLiBzdHJpbmcNCiAgICAgaWYgSUkxSTFJMUlpID09IE5vbmUgOg0KICAgICAgcmFpc2UNCiAgICBleGNlcHQgOg0KICAgICBJSTFJMUkxSWkgPSAnJw0KICAgICBpZiA1MSAtIDUxOiBJMTFpICUgaUlpaTFJMTFJMUlJMSAtIE9vb29vb29vT08gJSBvMDBPMG9vICogaUlpaTFJMTFJMUlJMSAlIGkxaUlpMTFpSUlpMUkNCiAgICB0cnkgOg0KICAgICBjcmVkaXRzID0gT28wMDAwb09vICggJ2NyZWRpdHMnICkgWyAwIF0gLiBzdHJpbmcNCiAgICAgaWYgY3JlZGl0cyA9PSBOb25lIDoNCiAgICAgIHJhaXNlDQogICAgZXhjZXB0IDoNCiAgICAgY3JlZGl0cyA9ICcnDQogICAgIGlmIDk5IC0gOTk6IE9Pb29PT28gKiBpMTFpICogb29Pb08wbw0KICAgIHRyeSA6DQogICAgIE9PT09vTzAwbzBPID0gT28wMDAwb09vICggJ3llYXInICkgWyAwIF0gLiBzdHJpbmcNCiAgICAgaWYgT09PT29PMDBvME8gPT0gTm9uZSA6DQogICAgICByYWlzZQ0KICAgIGV4Y2VwdCA6DQogICAgIE9PT09vTzAwbzBPID0gJycNCiAgICAgaWYgOTIgLSA5MjogSTExaTExSWkNCiAgICB0cnkgOg0KICAgICBJMUkxSTFJSWkxSUlJID0gT28wMDAwb09vICggJ2RpcmVjdG9yJyApIFsgMCBdIC4gc3RyaW5nDQogICAgIGlmIEkxSTFJMUlJaTFJSUkgPT0gTm9uZSA6DQogICAgICByYWlzZQ0KICAgIGV4Y2VwdCA6DQogICAgIEkxSTFJMUlJaTFJSUkgPSAnJw0KICAgICBpZiA0MCAtIDQwOiBvMCAvIEkxSWkxMTENCiAgICB0cnkgOg0KICAgICBJSTExSWlpSUlJID0gT28wMDAwb09vICggJ2R1cmF0aW9uJyApIFsgMCBdIC4gc3RyaW5nDQogICAgIGlmIElJMTFJaWlJSUkgPT0gTm9uZSA6DQogICAgICByYWlzZQ0KICAgIGV4Y2VwdCA6DQogICAgIElJMTFJaWlJSUkgPSAnJw0KICAgICBpZiA3OSAtIDc5OiBpMWlJaTExaUlJaTFJIC0gaUlpaTFJMTFJMUlJMSArIGlJSTExMWkgLSBvb09vTzBvDQogICAgdHJ5IDoNCiAgICAgbzBPT09vID0gT28wMDAwb09vICggJ3ByZW1pZXJlZCcgKSBbIDAgXSAuIHN0cmluZw0KICAgICBpZiBvME9PT28gPT0gTm9uZSA6DQogICAgICByYWlzZQ0KICAgIGV4Y2VwdCA6DQogICAgIG8wT09PbyA9ICcnDQogICAgIGlmIDkzIC0gOTM6IGkxMWkgLiBvT29vT29PME9vME8gLSBJMTFpMTFJaSArIG8wDQogICAgdHJ5IDoNCiAgICAgaWkxaWlJaUlJSTFpaSA9IE9vMDAwMG9PbyAoICdzdHVkaW8nICkgWyAwIF0gLiBzdHJpbmcNCiAgICAgaWYgaWkxaWlJaUlJSTFpaSA9PSBOb25lIDoNCiAgICAgIHJhaXNlDQogICAgZXhjZXB0IDoNCiAgICAgaWkxaWlJaUlJSTFpaSA9ICcnDQogICAgIGlmIDYxIC0gNjE6IGkxMWkNCiAgICB0cnkgOg0KICAgICBvTzBvMG9vb08wb08gPSBPbzAwMDBvT28gKCAncmF0ZScgKSBbIDAgXSAuIHN0cmluZw0KICAgICBpZiBvTzBvMG9vb08wb08gPT0gTm9uZSA6DQogICAgICByYWlzZQ0KICAgIGV4Y2VwdCA6DQogICAgIG9PMG8wb29vTzBvTyA9ICcnDQogICAgIGlmIDE1IC0gMTU6IGkxMWlJaWlJaWkgJSBvT29vT29PME9vME8gKiBJaTFJIC8gb29Pb08wbw0KICAgIHRyeSA6DQogICAgIElpSWlJSTEgPSBPbzAwMDBvT28gKCAnb3JpZ2luYWx0aXRsZScgKSBbIDAgXSAuIHN0cmluZw0KICAgICBpZiBJaUlpSUkxID09IE5vbmUgOg0KICAgICAgcmFpc2UNCiAgICBleGNlcHQgOg0KICAgICBJaUlpSUkxID0gJycNCiAgICAgaWYgOTAgLSA5MDogSWlJSQ0KICAgIHRyeSA6DQogICAgIElpaTFpaUlpMUlJID0gT28wMDAwb09vICggJ2NvdW50cnknICkgWyAwIF0gLiBzdHJpbmcNCiAgICAgaWYgSWlpMWlpSWkxSUkgPT0gTm9uZSA6DQogICAgICByYWlzZQ0KICAgIGV4Y2VwdCA6DQogICAgIElpaTFpaUlpMUlJID0gJycNCiAgICAgaWYgMzEgLSAzMTogSTExaSArIE8wDQogICAgdHJ5IDoNCiAgICAgb08wb09Pb28wMDAwMCA9IE9vMDAwMG9PbyAoICdtZWRpYXR5cGUnICkgWyAwIF0gLiBzdHJpbmcNCiAgICAgaWYgb08wb09Pb28wMDAwMCA9PSBOb25lIDoNCiAgICAgIHJhaXNlDQogICAgZXhjZXB0IDoNCiAgICAgb08wb09Pb28wMDAwMCA9ICcnDQogICAgIGlmIDUyIC0gNTI6IG9Pb29Pb08wT28wTw0KICAgIHRyeSA6DQogICAgIE9PME8wMG9PbyA9IE9vMDAwMG9PbyAoICdyYXRpbmcnICkgWyAwIF0gLiBzdHJpbmcNCiAgICAgaWYgT08wTzAwb09vID09IE5vbmUgOg0KICAgICAgcmFpc2UNCiAgICBleGNlcHQgOg0KICAgICBPTzBPMDBvT28gPSAnJw0KICAgICBpZiA1MSAtIDUxOiBJMUlpMTExDQogICAgdHJ5IDoNCiAgICAgaWkxSUkgPSBPbzAwMDBvT28gKCAndXNlcnJhdGluZycgKSBbIDAgXSAuIHN0cmluZw0KICAgICBpZiBpaTFJSSA9PSBOb25lIDoNCiAgICAgIHJhaXNlDQogICAgZXhjZXB0IDoNCiAgICAgaWkxSUkgPSAnJw0KICAgICBpZiA4OCAtIDg4OiBPb29vb29vb09PDQogICAgdHJ5IDoNCiAgICAgaUkxSSA9IE9vMDAwMG9PbyAoICd2b3RlcycgKSBbIDAgXSAuIHN0cmluZw0KICAgICBpZiBpSTFJID09IE5vbmUgOg0KICAgICAgcmFpc2UNCiAgICBleGNlcHQgOg0KICAgICBpSTFJID0gJycNCiAgICAgaWYgODQgLSA4NDogbzAgLyBJaTFJICogSWlJSSAvIE9Pb29PT28gLSBpMTFpSWlpSWlpIC4gSTExaTExSWkNCiAgICB0cnkgOg0KICAgICBPb29Pb09vID0gT28wMDAwb09vICggJ2FpcmVkJyApIFsgMCBdIC4gc3RyaW5nDQogICAgIGlmIE9vb09vT28gPT0gTm9uZSA6DQogICAgICByYWlzZQ0KICAgIGV4Y2VwdCA6DQogICAgIE9vb09vT28gPSAnJw0KICAgICBpZiA2MCAtIDYwOiBpaTFJaUkxaSAqIG9Pb29Pb08wT28wTw0KICAgIHRyeSA6DQogICAgIGlmIE9vb29vb28gPT0gJycgOg0KICAgICAgSTFJaWlpaUkgKCBJMWlJaTFpSWlpSWlJIC4gZW5jb2RlICggJ3V0Zi04JyAsICdpZ25vcmUnICkgLCB1cmwgLiBlbmNvZGUgKCAndXRmLTgnICkgLCAyICwgb29vT29vb29PMG9PTyAsIGlJaUlpMUkgLCBJSTFJICwgSUlJMUkxSWlpMWlpSSAsIElJMUkxSTFJaSAsIGNyZWRpdHMgLCBPT09Pb08wMG8wTyAsIEkxSTFJMUlJaTFJSUkgLCBJSTExSWlpSUlJICwgbzBPT09vICwgaWkxaWlJaUlJSTFpaSAsIG9PMG8wb29vTzBvTyAsIElpSWlJSTEgLCBJaWkxaWlJaTFJSSAsIE9PME8wMG9PbyAsIGlpMUlJICwgaUkxSSAsIE9vb09vT28gLCBUcnVlICkNCiAgICAgZWxzZSA6DQogICAgICBpZiAxNyAtIDE3OiBJMTFpICUgSTExaTExSWkgLyBpaTFJaUkxaSAuIEkxSWkxMTEgKiBJMTFpIC0gaTExaQ0KICAgICAgSTFJaWlpaUkgKCBJMWlJaTFpSWlpSWlJIC4gZW5jb2RlICggJ3V0Zi04JyApICwgT29vb29vbyAuIGVuY29kZSAoICd1dGYtOCcgKSAsIDEgLCBvb29Pb29vb08wb09PICwgaUlpSWkxSSAsIElJMUkgLCBJSUkxSTFJaWkxaWlJICwgSUkxSTFJMUlpICwgTm9uZSAsIE9PT09vTzAwbzBPICwgSTFJMUkxSUlpMUlJSSAsIElJMTFJaWlJSUkgLCBvME9PT28gLCBpaTFpaUlpSUlJMWlpICwgb08wbzBvb29PMG9PICwgSWlJaUlJMSAsIElpaTFpaUlpMUlJICwgT08wTzAwb09vICwga'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))