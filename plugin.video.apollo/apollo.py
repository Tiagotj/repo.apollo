# encoded by pyprotect
# https://deus-apollo.ml
#checkintegrity

import base64, codecs
magic = '# -*- coding: utf-8 -*-
import urllib
import urllib2
import datetime
import re
import os
import base64
import codecs
import xbmcplugin
import xbmcgui
import xbmcaddon
import xbmcvfs
import traceback
import cookielib
import time
import xbmcgui
import xbmc
import xbmcplugin
import webbrowser
import os
import xbmcaddon
from BeautifulSoup import BeautifulStoneSoup , BeautifulSoup , BeautifulSOAP
if 64 - 64: i11iIiiIii
if 65 - 65: O0 / iIii1I11I1II1 % OoooooooOO - i1IIi
o0OO00 = None
try :
 from xml . sax . saxutils import escape
except : traceback . print_exc ( )
if 78 - 78: i11i . oOooOoO0Oo0O
try :
 import json
except :
 import simplejson as json
import SimpleDownloader as downloader
import time
import requests
iI1 = False
if 43 - 43: I11i11Ii
if 65 - 65: i1iIi11iIIi1I
Oo = "10.06.20"
if 2 - 2: o0 * i1 * ii1IiI1i % OOooOOo / I11i / Ii1I
if 48 - 48: iII111i % IiII + I1Ii111 / ooOoO0o * o00O0oo
if 97 - 97: Ii1I - ii1IiI1i . I1Ii111 - OoooooooOO
oO0o = 'aHR0cDovL2RldXMtYXBvbGxvLm1sL0FQT0xMTzEvQkFTRS1QUklOQ0lQQUwvQmFzZS1QcmluY2lwYWwuaHRtbA=='
IIII = base64 . b64decode ( oO0o )
if 59 - 59: i1IIi * i1IIi % I11i + i11i
if 32 - 32: o0 . o00O0oo * i1IIi . ooOoO0o / I1Ii111
o00 = '[COLOR orange][B]->[/COLOR][/B][COLOR deepskyblue][B] BEM-VINDOS[/COLOR][/B]'
if 62 - 62: i11iIiiIii - i11i % ooOoO0o - iIii1I11I1II1 . ii1IiI1i . i11i
if 61 - 61: OOooOOo / o0 / IiII * i1iIi11iIIi1I . i11i
if 1 - 1: i11i - ii1IiI1i % i11iIiiIii + I1Ii111 . ooOoO0o
Oooo0000 = '-> INSTALE PLUGIN PARA FILMES 4K'
if 22 - 22: iII111i . I1Ii111
if 41 - 41: ooOoO0o . o00O0oo * I1Ii111 % i11iIiiIii
if 74 - 74: IiII * I1Ii111
if 82 - 82: iIii1I11I1II1 % I1Ii111
oOo0oooo00o = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3LzJQTk4xUGpL'
oO0o0o0ooO0oO = base64 . b64decode ( oOo0oooo00o )
if 52 - 52: i11i - i11iIiiIii % ooOoO0o
if 54 - 54: I11i % O0 + oOooOoO0Oo0O - IiII / Ii1I
if 31 - 31: i1iIi11iIIi1I + i11i
if 13 - 13: I11i * OOooOOo * oOooOoO0Oo0O
if 55 - 55: i11i
IIIiI11ii = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L3BYR2gyckVu'
O000oo = base64 . b64decode ( IIIiI11ii )
if 3 - 3: IiII + O0
if 42 - 42: I11i / i1IIi + i11iIiiIii - iII111i
if 78 - 78: i1iIi11iIIi1I
Iii1I111 = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L1hDdDl6clRm'
OO0O0O00OooO = base64 . b64decode ( Iii1I111 )
if 77 - 77: i11i - i11i . oOooOoO0Oo0O / i1
if 14 - 14: Ii1I % O0
IiI1I1 = 3000
if 86 - 86: i11iIiiIii + iII111i + o00O0oo * Ii1I + i1
if 61 - 61: i1iIi11iIIi1I / i11iIiiIii
if 34 - 34: OoooooooOO + iIii1I11I1II1 + i11iIiiIii - ii1IiI1i + i11iIiiIii
if 65 - 65: o0
if 6 - 6: oOooOoO0Oo0O / I11i11Ii % iII111i
oo = 'aHR0cHM6Ly91cmxwbGF5LmNvbS9OMHJkTEI='
OO0O00 = base64 . b64decode ( oo )
if 20 - 20: OoooooooOO
if 13 - 13: i1IIi - iII111i % OOooOOo / iIii1I11I1II1 % IiII
if 97 - 97: i11iIiiIii
if 32 - 32: I11i11Ii * O0 % OOooOOo % iII111i . I1Ii111
o0OOOOO00o0O0 = 'ǭq�{���}���w���'
if 71 - 71: o00O0oo % IiII / i1
if 49 - 49: i11i % IiII * O0
if 89 - 89: OOooOOo + I11i11Ii
Ii1IOo0o0 = 'filme4k'
III1ii1iII = 'https://i.imgur.com/67UUio3.png'
oo0oooooO0 = 'https://i.imgur.com/Y4QXRab.jpg'
if 19 - 19: Ii1I + o00O0oo
ooo = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L0JVYk5CWlFB'
ii1I1i1I = base64 . b64decode ( ooo )
if 88 - 88: i1iIi11iIIi1I + O0 / o0 * IiII
iiiIi1i1I = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L0JVYk5CWlFB'
oOO00oOO = base64 . b64decode ( iiiIi1i1I )
if 75 - 75: i1IIi / OoooooooOO - O0 / o0 . i11i - i1IIi
if 71 - 71: I11i + iII111i * I11i - i1iIi11iIIi1I * i1
if 65 - 65: O0 % oOooOoO0Oo0O . ii1IiI1i % iIii1I11I1II1 / I11i % ooOoO0o
if 51 - 51: i11iIiiIii . oOooOoO0Oo0O + i11i
II111ii1II1i = '[COLOR white]Selecione um item:[/COLOR]'
if 59 - 59: O0 + oOooOoO0Oo0O + I1Ii111 % oOooOoO0Oo0O
o0OOoo0OO0OOO = '[COLOR white]!!Download em execução!![/COLOR]'
iI1iI1I1i1I = '!!Download [COLOR seablue]Audio!![/COLOR]'
if 24 - 24: ii1IiI1i
o0Oo0O0Oo00oO = '[COLOR deepskyblue][B] CHECAR POR ATUALIZAÇÃO[/COLOR][/B]'
I11i1I1I = 'https://i.imgur.com/22LSvnr.png'
oO0Oo = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L2E5dE1DMEh1'
oOOoo0Oo = base64 . b64decode ( oO0Oo )
if 78 - 78: Ii1I
if 71 - 71: I11i + o00O0oo % i11iIiiIii + ii1IiI1i - I1Ii111
if 88 - 88: o0 - i1iIi11iIIi1I % I11i
iI1I111Ii111i = 'BEM-VINDOS'
I11IiI1I11i1i = 'aHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L3F0NmhqV0VY'
iI1ii1Ii = 'https://i.imgur.com/fHRcl7O.png'
oooo000 = 'https://i.imgur.com/Y4QXRab.jpg'
iIIIi1 = base64 . b64decode ( I11IiI1I11i1i )
if 20 - 20: i1IIi + ii1IiI1i - o00O0oo
if 30 - 30: i11i - I11i - i11iIiiIii % o0 - i11i * iII111i
if 61 - 61: OOooOOo - Ii1I % I11i
OOoOO0oo0ooO = '$texto='
if 98 - 98: IiII * IiII / IiII + Ii1I
if 34 - 34: o00O0oo
__addon__ = xbmcaddon . Addon ( )
__addonname__ = __addon__ . getAddonInfo ( 'name' )
__icon__ = __addon__ . getAddonInfo ( 'icon' )
if 15 - 15: Ii1I * o00O0oo * I11i11Ii % i11iIiiIii % o0 - I11i
if 68 - 68: ooOoO0o % i1IIi . I1Ii111 . ii1IiI1i
o0oo0oOo = [ '180upload.com' , 'allmyvideos.net' , 'bestreams.net' , 'clicknupload.com' , 'cloudzilla.to' , 'movshare.net' , 'novamov.com' , 'nowvideo.sx' , 'videoweed.es' , 'daclips.in' , 'datemule.com' , 'fastvideo.in' , 'faststream.in' , 'filehoot.com' , 'filenuke.com' , 'sharesix.com' , 'docs.google.com' , 'plus.google.com' , 'picasaweb.google.com' , 'gorillavid.com' , 'gorillavid.in' , 'grifthost.com' , 'hugefiles.net' , 'ipithos.to' , 'ishared.eu' , 'kingfiles.net' , 'mail.ru' , 'my.mail.ru' , 'videoapi.my.mail.ru' , 'mightyupload.com' , 'mooshare.biz' , 'movdivx.com' , 'movpod.net' , 'movpod.in' , 'movreel.com' , 'mrfile.me' , 'nosvideo.com' , 'openload.io' , 'played.to' , 'bitshare.com' , 'filefactory.com' , 'k2s.cc' , 'oboom.com' , 'rapidgator.net' , 'uploaded.net' , 'primeshare.tv' , 'bitshare.com' , 'filefactory.com' , 'k2s.cc' , 'oboom.com' , 'rapidgator.net' , 'uploaded.net' , 'sharerepo.com' , 'stagevu.com' , 'streamcloud.eu' , 'streamin.to' , 'thefile.me' , 'thevideo.me' , 'tusfiles.net' , 'uploadc.com' , 'zalaa.com' , 'uploadrocket.net' , 'uptobox.com' , 'v-vids.com' , 'veehd.com' , 'vidbull.com' , 'videomega.tv' , 'vidplay.net' , 'vidspot.net' , 'vidto.me' , 'vidzi.tv' , 'vimeo.com' , 'vk.com' , 'vodlocker.com' , 'xfileload.com' , 'xvidstage.com' , 'zettahost.tv' ]
o000O0o = [ 'plugin.video.dramasonline' , 'plugin.video.f4mTester' , 'plugin.video.shahidmbcnet' , 'plugin.video.SportsDevil' , 'plugin.stream.vaughnlive.tv' , 'plugin.video.ZemTV-shani' ]
if 42 - 42: o0
class II ( urllib2 . HTTPErrorProcessor ) :
 def http_response ( self , request , response ) :
  return response
 https_response = http_response
 if 45 - 45: O0 * i1 % I11i11Ii * OoooooooOO + IiII . o0
Oo0ooOo0o = False ;
if Oo0ooOo0o :
 if 22 - 22: iIii1I11I1II1 / i11iIiiIii * iIii1I11I1II1 * i11i . I11i / i11iIiiIii
 if 2 - 2: oOooOoO0Oo0O / O0 / i1 % o0 % iII111i
 try :
  import pysrc . pydevd as pydevd
  if 52 - 52: i1
  pydevd . settrace ( 'localhost' , stdoutToServer = True , stderrToServer = True )
 except ImportError :
  sys . stderr . write ( "Error: " +
 "You must add org.python.pydev.debug.pysrc to your PYTHONPATH." )
  sys . exit ( 1 )
  if 95 - 95: iII111i
  if 87 - 87: o00O0oo + o0 . I11i + o0
oO = xbmcaddon . Addon ( )
iIi1IIIi1 = oO . getAddonInfo ( 'version' )
O0oOoOOOoOO = xbmc . translatePath ( oO . getAddonInfo ( 'profile' ) . decode ( 'utf-8' ) )
ii1ii11IIIiiI = xbmc . translatePath ( oO . getAddonInfo ( 'path' ) . decode ( 'utf-8' ) )
O00OOOoOoo0O = os . path . join ( O0oOoOOOoOO , 'favorites' )
O000OOo00oo = os . path . join ( O0oOoOOOoOO , 'history' )
if 71 - 71: i11iIiiIii + I1Ii111
oOo = os . path . join ( O0oOoOOOoOO , 'list_revision' )
oOO00Oo = os . path . join ( ii1ii11IIIiiI , 'icon.png' )
i1iIIIi1i = os . path . join ( ii1ii11IIIiiI , 'icon_config.png' )
iI1iIIiiii = os . path . join ( ii1ii11IIIiiI , 'favorites.png' )
i1iI11i1ii11 = os . path . join ( ii1ii11IIIiiI , 'fanart.jpg' )
OOooo0O00o = os . path . join ( O0oOoOOOoOO , 'source_file' )
oOOoOooOo = O0oOoOOOoOO
if 51 - 51: Ii1I + IiII % iIii1I11I1II1 / OOooOOo / I11i % OoooooooOO
downloader = downloader . SimpleDownloader ( )
o0O0OOO0Ooo = oO . getSetting ( 'debug' )
if os . path . exists ( O00OOOoOoo0O ) == True :
 iiIiI = open ( O00OOOoOoo0O ) . read ( )
else : iiIiI = [ ]
if os . path . exists ( OOooo0O00o ) == True :
 I1 = open ( OOooo0O00o ) . read ( )
else : I1 = [ ]
if 86 - 86: o0 - iII111i - i1iIi11iIIi1I * IiII
if 66 - 66: OoooooooOO + O0
def I1IiiI ( url ) :
 try :
  import urllib . request as urllib2
 except ImportError :
  import urllib2
 IIi = urllib2 . build_opener ( )
 IIi . addheaders = [ ( 'User-Agent' , 'Mozilla/5.0' ) ]
 if 41 - 41: iII111i - O0 - O0
 oO00OOoO00 = IIi . open ( url )
 IiI111111IIII = oO00OOoO00 . read ( ) . decode ( 'utf-8' )
 i1Ii = IiI111111IIII
 return i1Ii
 if 14 - 14: IiII
def I1iI1iIi111i ( string ) :
 if o0O0OOO0Ooo == 'true' :
  if 44 - 44: i1IIi % i11i + Ii1I
  xbmc . log ( "[APOLLO-%s]: %s" % ( iIi1IIIi1 , string ) )
  if 45 - 45: IiII / IiII + ooOoO0o + o00O0oo
  if 47 - 47: i1 + o00O0oo
  if 82 - 82: i11i . I1Ii111 - iIii1I11I1II1 - I1Ii111 * i11i
  if 77 - 77: iIii1I11I1II1 * i1iIi11iIIi1I
def oOooOo0 ( msg ) :
 i1I1ii11i1Iii = oO . getSetting ( 'suporte' )
 if i1I1ii11i1Iii == 'true' :
  I1IiiiiI ( Oooo0000 , OO0O00 , 44 , III1ii1iII , i1iI11i1ii11 , o0O ( O000oo ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
  if 2 - 2: iIii1I11I1II1 / OOooOOo + i1iIi11iIIi1I / I11i
def IIOOOO0oo0 ( msg ) :
 xbmcgui . Dialog ( ) . ok ( '[COLOR deepskyblue][B]"INSTALE PARA ASSISTIR EM 4K!" [/COLOR][/B]' , "[COLOR orange][B]PARA VOCÊ ASSISTIR OS FILMES EM 4K MUITO SIMPLES VCS DEVEM FAZER O DOWNLOAD DO PLUGIN ELEMENTUM NOS LINKS ASEGUIR!. LOGO APOIS TER FEITO O DOWNLOAD VC VÃO EM SITESMA INSTALA POR ZIP E PROCURAR NA PASTA DA SUA BOX OU PC O ZIP PARA INSTALAR NA BOX![/COLOR][/B]" )
 I11iiI1i1 = xbmcgui . Dialog ( )
 I1i1Iiiii = I11iiI1i1 . select ( '[COLOR orange][B]PARA ASSISTIR FILMES EM 4K LINKS ABAIXO![/COLOR][/B]' , [ '[COLOR deepskyblue][B]BAIXAR[/COLOR][/B][COLOR orange][B] ELEMENTUM[/COLOR][/B]' , '[COLOR deepskyblue][B]BAIXAR[/COLOR][/B][COLOR orange][B] ELEMENTUM BURST[/COLOR][/B]' , '' ] )
 if I1i1Iiiii == 0 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://github.com/elgatito/plugin.video.elementum/releases/download/v0.1.58/plugin.video.elementum-0.1.58.zip' ) )
  else :
   webbrowser . open ( 'https://github.com/elgatito/plugin.video.elementum/releases/download/v0.1.58/plugin.video.elementum-0.1.58.zip' )
 if I1i1Iiiii == 1 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://github.com/elgatito/script.elementum.burst/releases/download/v0.0.49/script.elementum.burst-0.0.49.zip' ) )
  else :
   webbrowser . open ( 'https://github.com/elgatito/script.elementum.burst/releases/download/v0.0.49/script.elementum.burst-0.0.49.zip' )
   if 94 - 94: i1 * iII111i / I11i11Ii / iII111i
 if I1i1Iiiii == 5 :
  xbmcaddon . Addon ( ) . openSettings ( )
  if 87 - 87: I11i11Ii . I1Ii111
  xbmc . executebuiltin ( "XBMC.Container.Refresh(%s?mode=None, replace)" % sys . argv [ 0 ] )
  xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
  if 75 - 75: o00O0oo + o0 + i1 * Ii1I % OOooOOo . IiII
def oOI1Ii1I1 ( ) :
 IiII111iI1ii1 = oO . getSetting ( 'username' )
 iI11I1II = oO . getSetting ( 'password' )
 Ii1IIiI1i = oO . getSetting ( 'servidor' )
 o0Oo00 = oO . getSetting ( 'exibirfilme4k' )
 iI = oO . getSetting ( 'saida' )
 if o0Oo00 == 'true' :
  if Ii1IIiI1i == 'filme4k' :
   O0O0Oooo0o = 'http://sv1.iptvcasa.online:25461/get.php?username=%s&password=%s&type=m3u_plus&output=%s' % ( IiII111iI1ii1 , iI11I1II , iI )
   I1IiiiiI ( Ii1IOo0o0 , O0O0Oooo0o , 1 , III1ii1iII , oo0oooooO0 , o0O ( ii1I1i1I ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
  if Ii1IIiI1i == 'Nenhum' :
   I1IiiiiI ( Ii1IOo0o0 , '' , 42 , III1ii1iII , oo0oooooO0 , o0O ( ii1I1i1I ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 IiII111iI1ii1 = oO . getSetting ( 'username2' )
 iI11I1II = oO . getSetting ( 'password2' )
 Ii1IIiI1i = oO . getSetting ( 'servidor2' )
 o0Oo00 = oO . getSetting ( 'exibirfilme4k2' )
 iI = oO . getSetting ( 'saida2' )
 if o0Oo00 == 'true' :
  if Ii1IIiI1i == 'filme4k' :
   O0O0Oooo0o = 'http://cloudsteam.club:8080/get.php?username=%s&password=%s&type=m3u_plus&output=%s' % ( IiII111iI1ii1 , iI11I1II , iI )
   I1IiiiiI ( titulo_filme4k2 , O0O0Oooo0o , 1 , thumbnail_filme4k2 , oo0oooooO0 , o0O ( ii1I1i1I ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
  if Ii1IIiI1i == 'Nenhum' :
   I1IiiiiI ( titulo_filme4k2 , '' , 42 , thumbnail_filme4k2 , fanart_filme4k2 , o0O ( ii1I1i1I ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
   if 56 - 56: ii1IiI1i % O0 - oOooOoO0Oo0O
def O00o0OO0 ( msg ) :
 IIi1I1iiiii = oO . getSetting ( 'mensagem1' )
 if IIi1I1iiiii == 'true' :
  I11iiI1i1 = xbmcgui . Dialog ( )
  I1i1Iiiii = I11iiI1i1 . select ( '[COLOR orange][B]AJUDE O ADD-ON FAÇA SUA[/COLOR][/B][COLOR deepskyblue][B] DOAÇÃO[/COLOR][/B]' , [ '[COLOR deepskyblue][B]APOLLO ->[/COLOR][/B][COLOR orange][B] SITE OFICIAL![/COLOR][/B]' , '[COLOR deepskyblue][B]AJUDE ->[/COLOR][/B][COLOR orange][B] DOAÇÃO PELO[/COLOR][/B][COLOR lightcyan][B] MERCADO[/COLOR][/B][COLOR dodgerblue][B]PAGO [/COLOR][/B]' , '[COLOR deepskyblue][B]AJUDE ->[/COLOR][/B][COLOR orange][B] DOAÇÃO PELO[/COLOR][/B][COLOR blueviolet][B] NUBANK[/COLOR][/B]' , '[COLOR deepskyblue][B]AJUDE ->[/COLOR][/B][COLOR orange][B] DOAÇÃO PELO[/COLOR][/B][COLOR lightcyan][B] PIC[/COLOR][/B][COLOR lime][B]PAY [/COLOR][/B]' , '[COLOR deepskyblue][B]AJUDE ->[/COLOR][/B][COLOR orange][B] DOAÇÃO PELO[/COLOR][/B][COLOR royalblue][B] PAY[/COLOR][/B][COLOR lightcyan][B]PAL [/COLOR][/B]' , '[COLOR deepskyblue][B]APOLLO ->[/COLOR][/B][COLOR orange][B] GRUPO TELEGRAM[/COLOR][/B]' , '[COLOR deepskyblue][B]APOLLO ->[/COLOR][/B][COLOR orange][B] GRUPO FACEBOOK[/COLOR][/B]' , '[COLOR deepskyblue][B]ENTRAR NO[/COLOR][/B][COLOR orange][B] ADD-ON[/COLOR][/B]' , '[COLOR deepskyblue][B]SAIR DO[/COLOR][/B][COLOR orange][B] ADD-ON[/COLOR][/B]' ] )
  if 71 - 71: I1Ii111 * i11i * OOooOOo
  if I1i1Iiiii == 0 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'http://deus-apollo.ml' ) )
   else :
    webbrowser . open ( 'http://deus-apollo.ml' )
    if 56 - 56: oOooOoO0Oo0O
    if 54 - 54: ooOoO0o / I11i . OOooOOo % IiII
  if I1i1Iiiii == 1 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://www.mercadopago.com.br/checkout/v1/redirect?pref_id=203668628-f9a8d299-8b36-4cbd-84f4-0eb34ed0be11' ) )
   else :
    webbrowser . open ( 'https://www.mercadopago.com.br/checkout/v1/redirect?pref_id=203668628-f9a8d299-8b36-4cbd-84f4-0eb34ed0be11' )
    if 57 - 57: i11iIiiIii . ii1IiI1i - iII111i - OOooOOo + o0
  if I1i1Iiiii == 2 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://nubank.com.br/pagar/1djpv6/FJzleug9nF' ) )
   else :
    webbrowser . open ( 'https://nubank.com.br/pagar/1djpv6/FJzleug9nF' )
    if 63 - 63: o0 * IiII
    if 69 - 69: O0 . i1iIi11iIIi1I
  if I1i1Iiiii == 3 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://picpay.me/deus.apollo' ) )
   else :
    webbrowser . open ( 'https://picpay.me/deus.apollo' )
    if 49 - 49: oOooOoO0Oo0O - Ii1I
    if 74 - 74: iIii1I11I1II1 * ii1IiI1i + o0 / i1IIi / i11i . I11i11Ii
  if I1i1Iiiii == 4 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=44A92DUKBAKAN&source=url' ) )
   else :
    webbrowser . open ( 'https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=44A92DUKBAKAN&source=url' )
    if 62 - 62: OoooooooOO * oOooOoO0Oo0O
    if 58 - 58: o0 % i1
    if 50 - 50: ooOoO0o . i1
  if I1i1Iiiii == 5 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'http://telegram.me/DeusApollo' ) )
   else :
    webbrowser . open ( 'http://telegram.me/DeusApollo' )
    if 97 - 97: O0 + o0
  if I1i1Iiiii == 6 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://www.facebook.com/groups/Deus.Apollo' ) )
   else :
    webbrowser . open ( 'https://www.facebook.com/groups/Deus.Apollo' )
    if 89 - 89: i1 + i1iIi11iIIi1I * Ii1I * iII111i
  if I1i1Iiiii == 8 :
   xbmc . executebuiltin ( "XBMC.Container.Refresh('close()')" )
   xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
   if 37 - 37: OoooooooOO - O0 - i1
def o0o0O0O00oOOo ( msg ) :
 I1IiiiiI ( o00 , OO0O00 , 1 , oOO00Oo , i1iI11i1ii11 , o0O ( oO0o0o0ooO0oO ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 oOooOo0 ( True )
 oOI1Ii1I1 ( )
 if 14 - 14: o0 + OOooOOo
 oo00oO0O0 ( IIII , '' )
 I1IiiiiI ( o0Oo0O0Oo00oO , '' , 54 , I11i1I1I , i1iI11i1ii11 , o0O ( oOOoo0Oo ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 if 30 - 30: I11i + ii1IiI1i * Ii1I % i11iIiiIii % o0
 OO0OoOO0o0o ( )
 O00o0OO0 ( True )
 if 95 - 95: i11iIiiIii
 xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
 if 32 - 32: I11i
 if 42 - 42: I1Ii111 * O0 % i1IIi . I11i / i1
def iII11I1IiiIi ( msg ) :
 try :
  oo0oO = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/version.txt" ) . read ( ) . replace ( '' , '' ) . replace ( '\r' , '' )
  oo0oO = re . compile ( '[a-zA-Z\.\d]+' ) . findall ( oo0oO ) [ 0 ]
  if 94 - 94: iIii1I11I1II1 / I11i11Ii % IiII * IiII * i11i
  if oo0oO != Oo :
   IIiIiI ( )
   if 94 - 94: OOooOOo . i1IIi - i1 % O0 - i1iIi11iIIi1I
  elif msg == True :
   if 72 - 72: iII111i
   O00o0OO0 ( True )
   if 1 - 1: i1iIi11iIIi1I * I1Ii111 * OoooooooOO + o00O0oo
 except urllib2 . URLError , IiII111i1i11 :
  if msg == True :
   xbmcgui . Dialog ( ) . ok ( 'Apollo' , "Não foi possível checar" )
   if 40 - 40: o00O0oo * I1Ii111 * i11iIiiIii
def oo0OO00OoooOo ( msg ) :
 try :
  oo0oO = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/version.txt" ) . read ( ) . replace ( '' , '' ) . replace ( '\r' , '' )
  oo0oO = re . compile ( '[a-zA-Z\.\d]+' ) . findall ( oo0oO ) [ 0 ]
  if 19 - 19: ii1IiI1i % OoooooooOO % I1Ii111 * i1 % O0
  if oo0oO != Oo :
   IIiIiI ( )
   if 67 - 67: oOooOoO0Oo0O . i1IIi
  elif msg == True :
   xbmcgui . Dialog ( ) . ok ( '[COLOR orange][B]APOLLO[/COLOR][/B]' , "[COLOR deepskyblue][B] O ADD-ON JÁ ESTÁ NA ÚLTIMA VERSÃO![/COLOR][/B][COLOR orange][B] 1.4.6[/COLOR][/B] " + Oo + "[COLOR deepskyblue][B] ATUALIZAÇÕES SÃO AUTOMÁTICAS SE NÃO ATUALIZA ENTRE NO SITE[/COLOR][/B][COLOR orange][B] http://deus-apollo.ml[/COLOR][/B]" )
   if 27 - 27: o00O0oo % oOooOoO0Oo0O
 except urllib2 . URLError , IiII111i1i11 :
  if msg == True :
   xbmcgui . Dialog ( ) . ok ( 'Apollo' , "Não foi possível checar" )
   if 73 - 73: I11i
   if 70 - 70: iIii1I11I1II1
def IIiIiI ( ) :
 i11ii1iI = xbmc . translatePath ( xbmcaddon . Addon ( ) . getAddonInfo ( 'path' ) ) . decode ( "utf-8" )
 try :
  i1I = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/apollo.py" ) . read ( ) . replace ( '' , '' )
  IIIii11 = re . compile ( 'checkintegrity' ) . findall ( i1I )
  if IIIii11 :
   iiIiIIIiiI = os . path . join ( i11ii1iI , "apollo.py" )
   file = open ( iiIiIIIiiI , "w" )
   file . write ( i1I )
   file . close ( )
  i1I = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/resources/settings.xml" ) . read ( ) . replace ( '' , '' )
  IIIii11 = re . compile ( '</settings>' ) . findall ( i1I )
  if IIIii11 :
   iiIiIIIiiI = os . path . join ( i11ii1iI , "resources/settings.xml" )
   file = open ( iiIiIIIiiI , "w" )
   file . write ( i1I )
   file . close ( )
  i1I = urllib2 . urlopen ( "https://github.com/Tiagotj/repo.apollo/raw/master/plugin.video.apollo/addon.xml" ) . read ( ) . replace ( '' , '' )
  IIIii11 = re . compile ( '</addon>' ) . findall ( i1I )
  if IIIii11 :
   iiIiIIIiiI = os . path . join ( i11ii1iI , "addon.xml" )
   file = open ( iiIiIIIiiI , "w" )
   file . write ( i1I )
   file . close ( )
  xbmcgui . Dialog ( ) . ok ( '[COLOR deepskyblue][B]APOLLO[/COLOR][/B]' , "OBS: ADD-ON ESTÁ DESATUALIZADO! CLIQUE EM OK PARA ELE SE ALTO ATUALIZAR! CASO O ADD-ON NÃO SE ATUALIZE FAÇA O DOWNLOAD NO SITE OFICIAL! [COLOR deepskyblue][B]->[/COLOR][/B][COLOR orange][COLOR orange][B] https://deus-apollo.ml[/COLOR][/B]" ) . xbmc . executebuiltin
 except :
  xbmc . executebuiltin ( "Notification({0}, {1}, 9000, {2})" . format ( __addonname__ , "[COLOR orange][B]Atualizando o addon. Por favor aguarde 5 segundos e Pode Continuar![/COLOR][/B]" , __icon__ ) )
 xbmc . executebuiltin ( "XBMC.Container.Refresh()" )
 xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
 if 12 - 12: O0 - i1
oo0OO00OoooOo ( False )
if 81 - 81: o0 - o0 . IiII
def o0OoOo00o0o ( ) :
 I1II1I11I1I = {
 "Accept-Language" : "en-US,en;q=0.5" ,
 "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" ,
 "Referer" : "APOLLO 1.4.6" ,
 "Connection" : "keep-alive"
 }
 OoOO0o = urllib2 . Request ( "https://whos.amung.us/pingjs/?k=c4302b" , headers = I1II1I11I1I )
 oO00OOoO00 = urllib2 . urlopen ( OoOO0o ) . read ( )
 if 1 - 1: i11i
 if 68 - 68: IiII - oOooOoO0Oo0O / ooOoO0o / Ii1I
o0OoOo00o0o ( )
if 12 - 12: iII111i + i11iIiiIii * iIii1I11I1II1 / ii1IiI1i . Ii1I
def Iii1iI ( url , headers = None ) :
 try :
  if headers is None :
   if 29 - 29: oOooOoO0Oo0O % I11i - oOooOoO0Oo0O / I11i . i1IIi
   headers = { 'User-agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0) Gecko/20100101 Firefox/19.0' }
   headers = { 'User-agent' : '�}q�|{�\�~1�|{�\�}�ߜ{�\Ǯqߌ{�\�~q߼{�\�~�߬{�\ǭq߼{�\ǭ�ߌ{�\�~�߼{�\�}�ߌ{�\�1ߜ{�\�qߜ{�' }
  i11III1111iIi = urllib2 . Request ( url , None , headers )
  oO00OOoO00 = urllib2 . urlopen ( i11III1111iIi )
  IiI111111IIII = oO00OOoO00 . read ( )
  oO00OOoO00 . close ( )
  return IiI111111IIII
 except urllib2 . URLError , IiII111i1i11 :
  I1iI1iIi111i ( 'URL: ' + url )
  if hasattr ( IiII111i1i11 , 'code' ) :
   I1iI1iIi111i ( 'Falha com o código de erro - %s.' % IiII111i1i11 . code )
   if 38 - 38: IiII + Ii1I / ooOoO0o % o00O0oo - ii1IiI1i
   if 14 - 14: OOooOOo / ooOoO0o
   xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( IiII111i1i11 . code ) + ",10000," + oOO00Oo + ")" )
  elif hasattr ( IiII111i1i11 , 'reason' ) :
   I1iI1iIi111i ( 'Falha ao acessar um servidor.' )
   I1iI1iIi111i ( 'Razão: %s' % IiII111i1i11 . reason )
   if 85 - 85: Ii1I
   xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( IiII111i1i11 . reason ) + ",10000," + oOO00Oo + ")" )
   if 20 - 20: OOooOOo % I1Ii111
def o0O ( url ) :
 IIi = urllib2 . build_opener ( )
 if 19 - 19: ii1IiI1i % I1Ii111 + o00O0oo / ooOoO0o . o00O0oo
 IIi . addheaders = [ ( 'User-Agent' , o0OOOOO00o0O0 ) ]
 oO00OOoO00 = IIi . open ( url )
 IiIi1I1 = oO00OOoO00 . read ( )
 return IiIi1I1
 if 39 - 39: i11i + o0 - o00O0oo . o0
 if 84 - 84: i1iIi11iIIi1I + i1IIi - i11i . ii1IiI1i * OoooooooOO + oOooOoO0Oo0O
def OO0OoOO0o0o ( ) :
 II1i11I = oO . getSetting ( 'mensagem2' )
 if II1i11I == 'true' :
  IIi = urllib2 . build_opener ( )
  if 50 - 50: OoooooooOO % Ii1I
  IIi . addheaders = [ ( 'User-Agent' , o0OOOOO00o0O0 ) ]
  if 49 - 49: OOooOOo - i11iIiiIii . ooOoO0o * iII111i % IiII + i1IIi
  oO00OOoO00 = IIi . open ( OO0O0O00OooO )
  oOO0OOOo = oO00OOoO00 . read ( )
  if 56 - 56: i1
  time = IiI1I1
  xbmc . executebuiltin ( 'Notification(%s, %s, %d, %s)' % ( __addonname__ , oOO0OOOo , time , __icon__ ) )
  if 28 - 28: IiII . IiII % iIii1I11I1II1 * iIii1I11I1II1 . i1 / IiII
  if 27 - 27: i1iIi11iIIi1I + o00O0oo - i1IIi
def O00oOOooo ( ) :
 xbmc . executebuiltin ( "XBMC.Container.Refresh()" )
 if 50 - 50: ii1IiI1i % O0 * i1
def i1Iii11Ii1i1 ( ) :
 if os . path . exists ( O00OOOoOoo0O ) == True :
  I1IiiiiI ( 'Favorites' , 'url' , 4 , os . path . join ( ii1ii11IIIiiI , 'resources' , 'favorite.png' ) , i1iI11i1ii11 , '' , '' , '' , '' )
 if oO . getSetting ( "browse_xml_database" ) == "true" :
  I1IiiiiI ( 'XML Database' , 'http://xbmcplus.xb.funpic.de/www-data/filesystem/' , 15 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' )
 if oO . getSetting ( "browse_community" ) == "true" :
  I1IiiiiI ( 'Community Files' , 'community_files' , 16 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' )
 if os . path . exists ( O000OOo00oo ) == True :
  I1IiiiiI ( 'Search History' , 'history' , 25 , os . path . join ( ii1ii11IIIiiI , 'resources' , 'favorite.png' ) , i1iI11i1ii11 , '' , '' , '' , '' )
 if oO . getSetting ( "searchyt" ) == "true" :
  I1IiiiiI ( 'Search:Youtube' , 'youtube' , 25 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' )
 if oO . getSetting ( "searchDM" ) == "true" :
  I1IiiiiI ( 'Search:dailymotion' , 'dmotion' , 25 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' )
 if oO . getSetting ( "PulsarM" ) == "true" :
  I1IiiiiI ( 'Pulsar:IMDB' , 'IMDBidplay' , 27 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' )
  if os . path . exists ( OOooo0O00o ) == True :
   OOooo0O0o0 = json . loads ( open ( OOooo0O00o , "r" ) . read ( ) )
   if 14 - 14: i1 % O0 * IiII + iII111i + I11i11Ii * iII111i
  if len ( OOooo0O0o0 ) > 1 :
   for iII1I1IiI11ii in OOooo0O0o0 :
    if 72 - 72: oOooOoO0Oo0O % i11iIiiIii . I11i11Ii / i11i
    if isinstance ( iII1I1IiI11ii , list ) :
     I1IiiiiI ( iII1I1IiI11ii [ 0 ] . encode ( 'utf-8' ) , iII1I1IiI11ii [ 1 ] . encode ( 'utf-8' ) , 1 , oOO00Oo , i1iI11i1ii11 , '' , '' , '' , '' , 'source' )
    else :
     iIIiIiI = oOO00Oo
     iIi11 = i1iI11i1ii11
     OOoo = ''
     iIIiiiI = ''
     credits = ''
     oo0 = ''
     IiI111ii1ii = ''
     O0OOo = ''
     IiIII1 = ''
     O0Oo000 = ''
     iiI11i1II = ''
     OO0O0OOo0O = ''
     I1o0OooOOOOOO = ''
     OOooO0o0 = ''
     iiIII1i = ''
     I1I = ''
     ooooO0oOoOOoO = ''
     if iII1I1IiI11ii . has_key ( 'thumbnail' ) :
      iIIiIiI = iII1I1IiI11ii [ 'thumbnail' ]
     if iII1I1IiI11ii . has_key ( 'fanart' ) :
      iIi11 = iII1I1IiI11ii [ 'fanart' ]
     if iII1I1IiI11ii . has_key ( 'description' ) :
      OOoo = iII1I1IiI11ii [ 'description' ]
     if iII1I1IiI11ii . has_key ( 'date' ) :
      iIIiiiI = iII1I1IiI11ii [ 'date' ]
     if iII1I1IiI11ii . has_key ( 'genre' ) :
      I1i11i = iII1I1IiI11ii [ 'genre' ]
     if iII1I1IiI11ii . has_key ( 'credits' ) :
      credits = iII1I1IiI11ii [ 'credits' ]
     if iII1I1IiI11ii . has_key ( 'year' ) :
      oo0 = iII1I1IiI11ii [ 'year' ]
     if iII1I1IiI11ii . has_key ( 'director' ) :
      IiI111ii1ii = iII1I1IiI11ii [ 'director' ]
     if iII1I1IiI11ii . has_key ( 'duration' ) :
      O0OOo = iII1I1IiI11ii [ 'duration' ]
     if iII1I1IiI11ii . has_key ( 'premiered' ) :
      IiIII1 = iII1I1IiI11ii [ 'premiered' ]
     if iII1I1IiI11ii . has_key ( 'studio' ) :
      O0Oo000 = iII1I1IiI11ii [ 'studio' ]
     if iII1I1IiI11ii . has_key ( 'rate' ) :
      iiI11i1II = iII1I1IiI11ii [ 'rate' ]
     if iII1I1IiI11ii . has_key ( 'originaltitle' ) :
      OO0O0OOo0O = iII1I1IiI11ii [ 'originaltitle' ]
     if iII1I1IiI11ii . has_key ( 'country' ) :
      I1o0OooOOOOOO = iII1I1IiI11ii [ 'country' ]
     if iII1I1IiI11ii . has_key ( 'rating' ) :
      OOooO0o0 = iII1I1IiI11ii [ 'rating' ]
     if iII1I1IiI11ii . has_key ( 'userrating' ) :
      iiIII1i = iII1I1IiI11ii [ 'userrating' ]
     if iII1I1IiI11ii . has_key ( 'votes' ) :
      I1I = iII1I1IiI11ii [ 'votes' ]
     if iII1I1IiI11ii . has_key ( 'aired' ) :
      ooooO0oOoOOoO = iII1I1IiI11ii [ 'aired' ]
     I1IiiiiI ( iII1I1IiI11ii [ 'title' ] . encode ( 'utf-8' ) , iII1I1IiI11ii [ 'url' ] . encode ( 'utf-8' ) , 1 , iIIiIiI , iIi11 , OOoo , I1i11i , iIIiiiI , credits , oo0 , IiI111ii1ii , O0OOo , IiIII1 , O0Oo000 , iiI11i1II , OO0O0OOo0O , I1o0OooOOOOOO , OOooO0o0 , iiIII1i , I1I , ooooO0oOoOOoO , 'source' )
     if 11 - 11: oOooOoO0Oo0O / i11i + i1 * ii1IiI1i - ii1IiI1i - oOooOoO0Oo0O
  else :
   if len ( OOooo0O0o0 ) == 1 :
    if isinstance ( OOooo0O0o0 [ 0 ] , list ) :
     oo00oO0O0 ( OOooo0O0o0 [ 0 ] [ 1 ] . encode ( 'utf-8' ) , i1iI11i1ii11 )
    else :
     oo00oO0O0 ( OOooo0O0o0 [ 0 ] [ 'url' ] , OOooo0O0o0 [ 0 ] [ 'fanart' ] )
     if 85 - 85: Ii1I % OOooOOo / iIii1I11I1II1 . iIii1I11I1II1
     if 31 - 31: i1 % i1iIi11iIIi1I
def iI1I ( url = None ) :
 if url is None :
  if not oO . getSetting ( "new_file_source" ) == "" :
   OooOoOo = oO . getSetting ( 'new_file_source' ) . decode ( 'utf-8' )
  elif not oO . getSetting ( "new_url_source" ) == "" :
   OooOoOo = oO . getSetting ( 'new_url_source' ) . decode ( 'utf-8' )
 else :
  OooOoOo = url
 if OooOoOo == '' or OooOoOo is None :
  return
 I1iI1iIi111i ( 'Adding New Source: ' + OooOoOo . encode ( 'utf-8' ) )
 if 14 - 14: i1 * I11i + IiII + O0 + i11iIiiIii
 oOoO0 = None
 if 77 - 77: iIii1I11I1II1 . IiII % IiII + i11iIiiIii
 IiI111111IIII = Oo00o0OO0O00o ( OooOoOo )
 print 'source_url' , OooOoOo
 if isinstance ( IiI111111IIII , BeautifulSOAP ) :
  if IiI111111IIII . find ( 'channels_info' ) :
   oOoO0 = IiI111111IIII . channels_info
  elif IiI111111IIII . find ( 'items_info' ) :
   oOoO0 = IiI111111IIII . items_info
 if oOoO0 :
  O0Oooo = { }
  O0Oooo [ 'url' ] = OooOoOo
  try : O0Oooo [ 'title' ] = oOoO0 . title . string
  except : pass
  try : O0Oooo [ 'thumbnail' ] = oOoO0 . thumbnail . string
  except : pass
  try : O0Oooo [ 'fanart' ] = oOoO0 . fanart . string
  except : pass
  try : O0Oooo [ 'genre' ] = oOoO0 . genre . string
  except : pass
  try : O0Oooo [ 'description' ] = oOoO0 . description . string
  except : pass
  try : O0Oooo [ 'date' ] = oOoO0 . date . string
  except : pass
  try : O0Oooo [ 'credits' ] = oOoO0 . credits . string
  except : pass
  try : O0Oooo [ 'year' ] = oOoO0 . year . string
  except : pass
  try : O0Oooo [ 'director' ] = oOoO0 . director . string
  except : pass
  try : O0Oooo [ 'premiered' ] = oOoO0 . premiered . string
  except : pass
  try : O0Oooo [ 'studio' ] = oOoO0 . studio . string
  except : pass
  try : O0Oooo [ 'rate' ] = oOoO0 . rate . string
  except : pass
  try : O0Oooo [ 'originaltitle' ] = oOoO0 . originaltitle . string
  except : pass
  try : O0Oooo [ 'country' ] = oOoO0 . country . string
  except : pass
  try : O0Oooo [ 'rating' ] = oOoO0 . rating . string
  except : pass
  try : O0Oooo [ 'userrating' ] = oOoO0 . userrating . string
  except : pass
  try : O0Oooo [ 'votes' ] = oOoO0 . votes . string
  except : pass
  try : O0Oooo [ 'aired' ] = oOoO0 . aired . string
  except : pass
 else :
  if '/' in OooOoOo :
   iiIi1i = OooOoOo . split ( '/' ) [ - 1 ] . split ( '.' ) [ 0 ]
  if '\\' in OooOoOo :
   iiIi1i = OooOoOo . split ( '\\' ) [ - 1 ] . split ( '.' ) [ 0 ]
  if '%' in iiIi1i :
   iiIi1i = urllib . unquote_plus ( iiIi1i )
  I1i11111i1i11 = xbmc . Keyboard ( iiIi1i , 'Displayed Name, Rename?' )
  I1i11111i1i11 . doModal ( )
  if ( I1i11111i1i11 . isConfirmed ( ) == False ) :
   return
  OOoOOO0 = I1i11111i1i11 . getText ( )
  if len ( OOoOOO0 ) == 0 :
   return
  O0Oooo = { }
  O0Oooo [ 'title' ] = OOoOOO0
  O0Oooo [ 'url' ] = OooOoOo
  O0Oooo [ 'fanart' ] = iIi11
  if 10 - 10: ooOoO0o / o00O0oo + i11iIiiIii / iII111i
 if os . path . exists ( OOooo0O00o ) == False :
  OOOoOoO = [ ]
  OOOoOoO . append ( O0Oooo )
  iIIIII1ii1I = open ( OOooo0O00o , "w" )
  iIIIII1ii1I . write ( json . dumps ( OOOoOoO ) )
  iIIIII1ii1I . close ( )
 else :
  OOooo0O0o0 = json . loads ( open ( OOooo0O00o , "r" ) . read ( ) )
  OOooo0O0o0 . append ( O0Oooo )
  iIIIII1ii1I = open ( OOooo0O00o , "w" )
  iIIIII1ii1I . write ( json . dumps ( OOooo0O0o0 ) )
  iIIIII1ii1I . close ( )
 oO . setSetting ( 'new_url_source' , "" )
 oO . setSetting ( 'new_file_source' , "" )
 if 13 - 13: i11iIiiIii + i1IIi * iIii1I11I1II1 % OoooooooOO - i11i * I11i
 xbmc . executebuiltin ( "XBMC.Notification(New source added.,5000," + oOO00Oo + ")" )
 if not url is None :
  if 'xbmcplus.xb.funpic.de' in url :
   xbmc . executebuiltin ( "XBMC.Container.Update(%s?mode=14,replace)" % sys . argv [ 0 ] )
  elif 'community-links' in url :
   xbmc . executebuiltin ( "XBMC.Container.Update(%s?mode=10,replace)" % sys . argv [ 0 ] )
 else : oO . openSettings ( )
 if 26 - 26: OoooooooOO * oOooOoO0Oo0O + I11i
 if 24 - 24: i11iIiiIii % iIii1I11I1II1 + I11i / i11iIiiIii
def OOooO0oo0o00o ( name ) :
 OOooo0O0o0 = json . loads ( open ( OOooo0O00o , "r" ) . read ( ) )
 for ooOO0OoO in range ( len ( OOooo0O0o0 ) ) :
  if isinstance ( OOooo0O0o0 [ ooOO0OoO ] , list ) :
   if OOooo0O0o0 [ ooOO0OoO ] [ 0 ] == name :
    del OOooo0O0o0 [ ooOO0OoO ]
    iIIIII1ii1I = open ( OOooo0O00o , "w" )
    iIIIII1ii1I . write ( json . dumps ( OOooo0O0o0 ) )
    iIIIII1ii1I . close ( )
    break
  else :
   if OOooo0O0o0 [ ooOO0OoO ] [ 'title' ] == name :
    del OOooo0O0o0 [ ooOO0OoO ]
    iIIIII1ii1I = open ( OOooo0O00o , "w" )
    iIIIII1ii1I . write ( json . dumps ( OOooo0O0o0 ) )
    iIIIII1ii1I . close ( )
    break
 xbmc . executebuiltin ( "XBMC.Container.Refresh" )
 if 69 - 69: iIii1I11I1II1 . ii1IiI1i % o00O0oo + iIii1I11I1II1 / O0 / ii1IiI1i
 if 61 - 61: I11i % I11i * i1 / i1
 if 75 - 75: I1Ii111 . o00O0oo
def iII111iO0000o ( url , browse = False ) :
 if url is None :
  url = 'http://xbmcplus.xb.funpic.de/www-data/filesystem/'
 ii = BeautifulSoup ( Iii1iI ( url ) , convertEntities = BeautifulSoup . HTML_ENTITIES )
 for iII1I1IiI11ii in ii ( 'a' ) :
  OOO0oOOoo = iII1I1IiI11ii [ 'href' ]
  if not OOO0oOOoo . startswith ( '?' ) :
   oOOO00o000o = iII1I1IiI11ii . string
   if oOOO00o000o not in [ 'Parent Directory' , 'recycle_bin/' ] :
    if OOO0oOOoo . endswith ( '/' ) :
     if browse :
      I1IiiiiI ( oOOO00o000o , url + OOO0oOOoo , 15 , oOO00Oo , iIi11 , '' , '' , '' )
     else :
      I1IiiiiI ( oOOO00o000o , url + OOO0oOOoo , 14 , oOO00Oo , iIi11 , '' , '' , '' )
    elif OOO0oOOoo . endswith ( '.xml' ) :
     if browse :
      I1IiiiiI ( oOOO00o000o , url + OOO0oOOoo , 1 , oOO00Oo , iIi11 , '' , '' , '' , '' , 'download' )
     else :
      if os . path . exists ( OOooo0O00o ) == True :
       if oOOO00o000o in I1 :
        I1IiiiiI ( oOOO00o000o + ' (in use)' , url + OOO0oOOoo , 11 , oOO00Oo , iIi11 , '' , '' , '' , '' , 'download' )
       else :
        I1IiiiiI ( oOOO00o000o , url + OOO0oOOoo , 11 , oOO00Oo , iIi11 , '' , '' , '' , '' , 'download' )
      else :
       I1IiiiiI ( oOOO00o000o , url + OOO0oOOoo , 11 , oOO00Oo , iIi11 , '' , '' , '' , '' , 'download' )
       if 9 - 9: OOooOOo + Ii1I / Ii1I
       if 12 - 12: OoooooooOO % i1 * Ii1I % iIii1I11I1II1 / iII111i
def Ii1ii1IiIII ( browse = False ) :
 O0O0Oooo0o = 'http://community-links.googlecode.com/svn/trunk/'
 ii = BeautifulSoup ( Iii1iI ( O0O0Oooo0o ) , convertEntities = BeautifulSoup . HTML_ENTITIES )
 ooO0o = ii ( 'ul' ) [ 0 ] ( 'li' ) [ 1 : ]
 for iII1I1IiI11ii in ooO0o :
  oOOO00o000o = iII1I1IiI11ii ( 'a' ) [ 0 ] [ 'href' ]
  if browse :
   I1IiiiiI ( oOOO00o000o , O0O0Oooo0o + oOOO00o000o , 1 , oOO00Oo , iIi11 , '' , '' , '' , '' , 'download' )
  else :
   I1IiiiiI ( oOOO00o000o , O0O0Oooo0o + oOOO00o000o , 11 , oOO00Oo , iIi11 , '' , '' , '' , '' , 'download' )
   if 51 - 51: I1Ii111
   if 25 - 25: OoooooooOO + I1Ii111 * ii1IiI1i
def Oo00o0OO0O00o ( url , data = None ) :
 global o0OO00 , iI1
 iI1 = False
 if url . startswith ( 'http://' ) or url . startswith ( 'https://' ) :
  OoO0ooO = False
  if '$$TSDOWNLOADER$$' in url :
   iI1 = True
   url = url . replace ( "$$TSDOWNLOADER$$" , "" )
  if '$$LSProEncKey=' in url :
   OoO0ooO = url . split ( '$$LSProEncKey=' ) [ 1 ] . split ( '$$' ) [ 0 ]
   O000 = '$$LSProEncKey=%s$$' % OoO0ooO
   url = url . replace ( O000 , "" )
  try :
   data = base64 . b32decode ( Iii1iI ( url ) [ : : - 1 ] ) . decode ( 'utf-8' )
  except :
   data = Iii1iI ( url )
  if OoO0ooO :
   import pyaes
   OoO0ooO = OoO0ooO . encode ( "ascii" )
   print OoO0ooO
   i1iIi = 16 - len ( OoO0ooO )
   OoO0ooO = OoO0ooO + ( chr ( 0 ) * ( i1iIi ) )
   print repr ( OoO0ooO )
   data = base64 . b64decode ( data )
   IIIII = pyaes . new ( OoO0ooO , pyaes . MODE_ECB , IV = None )
   data = IIIII . decrypt ( data ) . split ( '\0' ) [ 0 ]
   if 78 - 78: iII111i * i1IIi
  if re . search ( "#EXTM3U" , data ) or 'm3u' in url :
   if 1 - 1: oOooOoO0Oo0O / I1Ii111 * o00O0oo
   return data
 elif data == None :
  if not '/' in url or not '\\' in url :
   if 1 - 1: Ii1I * i1 . o0 / O0
   url = os . path . join ( communityfiles , url )
  if xbmcvfs . exists ( url ) :
   if url . startswith ( "smb://" ) or url . startswith ( "nfs://" ) :
    O00 = xbmcvfs . copy ( url , os . path . join ( O0oOoOOOoOO , 'temp' , 'sorce_temp.txt' ) )
    if O00 :
     data = open ( os . path . join ( O0oOoOOOoOO , 'temp' , 'sorce_temp.txt' ) , "r" ) . read ( )
     xbmcvfs . delete ( os . path . join ( O0oOoOOOoOO , 'temp' , 'sorce_temp.txt' ) )
    else :
     I1iI1iIi111i ( "failed to copy from smb:" )
   else :
    data = open ( url , 'r' ) . read ( )
    if re . match ( "#EXTM3U" , data ) or 'm3u' in url :
     if 52 - 52: o00O0oo + O0 . IiII . ii1IiI1i . i1iIi11iIIi1I
     return data
  else :
   I1iI1iIi111i ( "Soup Data not found!" )
   return
 if '<SetViewMode>' in data :
  try :
   o0OO00 = re . findall ( '<SetViewMode>(.*?)<' , data ) [ 0 ]
   xbmc . executebuiltin ( "Container.SetViewMode(%s)" % o0OO00 )
   print 'done setview' , o0OO00
  except : pass
 return BeautifulSOAP ( data , convertEntities = BeautifulStoneSoup . XML_ENTITIES )
 if 97 - 97: oOooOoO0Oo0O / IiII
 if 71 - 71: i11i / i1IIi . ii1IiI1i % OoooooooOO . o0
def oo00oO0O0 ( url , fanart , data = None ) :
 if 41 - 41: i1IIi * i11i / OoooooooOO . I11i
 O0iII1 = "List"
 if 27 - 27: i1iIi11iIIi1I . Ii1I + o0 / iIii1I11I1II1 % IiII . o00O0oo
 ii = Oo00o0OO0O00o ( url , data )
 if 14 - 14: OOooOOo + ii1IiI1i - IiII / O0 . ooOoO0o
 if isinstance ( ii , BeautifulSOAP ) :
  if len ( ii ( 'layoutype' ) ) > 0 :
   O0iII1 = "thumbnail"
   if 45 - 45: ooOoO0o
  if len ( ii ( 'channels' ) ) > 0 :
   oOIIi1iiii1iI = ii ( 'channel' )
   for iIiiii in oOIIi1iiii1iI :
    if 89 - 89: IiII - o00O0oo % I11i11Ii % i1
    if 49 - 49: I11i11Ii - oOooOoO0Oo0O / I1Ii111 / O0 % i1 * iII111i
    OOo = ''
    O0II11iI111i1 = 0
    try :
     OOo = iIiiii ( 'externallink' ) [ 0 ] . string
     O0II11iI111i1 = len ( iIiiii ( 'externallink' ) )
    except : pass
    if 95 - 95: OoooooooOO - I1Ii111 * oOooOoO0Oo0O + o0
    if O0II11iI111i1 > 1 : OOo = ''
    if 10 - 10: i1 / i11iIiiIii
    oOOO00o000o = iIiiii ( 'name' ) [ 0 ] . string
    o00oO = iIiiii ( 'thumbnail' ) [ 0 ] . string
    if o00oO == None :
     o00oO = ''
     if 92 - 92: I1Ii111 * I11i11Ii * I11i11Ii * oOooOoO0Oo0O . iIii1I11I1II1
    try :
     if not iIiiii ( 'fanart' ) :
      if oO . getSetting ( 'use_thumb' ) == "true" :
       I1Ii1111iIi = o00oO
      else :
       I1Ii1111iIi = fanart
     else :
      I1Ii1111iIi = iIiiii ( 'fanart' ) [ 0 ] . string
     if I1Ii1111iIi == None :
      raise
    except :
     I1Ii1111iIi = fanart
     if 31 - 31: Ii1I . ooOoO0o * o00O0oo + i11iIiiIii * OOooOOo
    try :
     OOoo = iIiiii ( 'info' ) [ 0 ] . string
     if OOoo == None :
      raise
    except :
     OOoo = ''
     if 93 - 93: ii1IiI1i / iIii1I11I1II1 * i1IIi % OoooooooOO * O0 * Ii1I
    try :
     I1i11i = iIiiii ( 'genre' ) [ 0 ] . string
     if I1i11i == None :
      raise
    except :
     I1i11i = ''
     if 64 - 64: i11i + O0 / iIii1I11I1II1 / I11i11Ii . o00O0oo % I1Ii111
    try :
     iIIiiiI = iIiiii ( 'date' ) [ 0 ] . string
     if iIIiiiI == None :
      raise
    except :
     iIIiiiI = ''
     if 50 - 50: iIii1I11I1II1 - I1Ii111 + I11i
    try :
     credits = iIiiii ( 'credits' ) [ 0 ] . string
     if credits == None :
      raise
    except :
     credits = ''
     if 69 - 69: O0
    try :
     oo0 = iIiiii ( 'year' ) [ 0 ] . string
     if oo0 == None :
      raise
    except :
     oo0 = ''
     if 85 - 85: o00O0oo / O0
    try :
     IiI111ii1ii = iIiiii ( 'director' ) [ 0 ] . string
     if IiI111ii1ii == None :
      raise
    except :
     IiI111ii1ii = ''
     if 18 - 18: i1 % O0 * ii1IiI1i
    try :
     O0OOo = iIiiii ( 'duration' ) [ 0 ] . string
     if O0OOo == None :
      raise
    except :
     O0OOo = ''
     if 62 - 62: ooOoO0o . I1Ii111 . OoooooooOO
    try :
     IiIII1 = iIiiii ( 'premiered' ) [ 0 ] . string
     if IiIII1 == None :
      raise
    except :
     IiIII1 = ''
     if 11 - 11: I11i / Ii1I
    try :
     O0Oo000 = iIiiii ( 'studio' ) [ 0 ] . string
     if O0Oo000 == None :
      raise
    except :
     O0Oo000 = ''
     if 73 - 73: i1IIi / i11iIiiIii
    try :
     iiI11i1II = iIiiii ( 'rate' ) [ 0 ] . string
     if iiI11i1II == None :
      raise
    except :
     iiI11i1II = ''
     if 58 - 58: I11i11Ii . i11i + OOooOOo - i11iIiiIii / i11i / O0
    try :
     OO0O0OOo0O = iIiiii ( 'originaltitle' ) [ 0 ] . string
     if OO0O0OOo0O == None :
      raise
    except :
     OO0O0OOo0O = ''
     if 85 - 85: o0 + I11i
    try :
     I1o0OooOOOOOO = iIiiii ( 'country' ) [ 0 ] . string
     if I1o0OooOOOOOO == None :
      raise
    except :
     I1o0OooOOOOOO = ''
     if 10 - 10: I1Ii111 / i1iIi11iIIi1I + o0 / i1IIi
    try :
     i1iII1II11I = iIiiii ( 'mediatype' ) [ 0 ] . string
     if i1iII1II11I == None :
      raise
    except :
     i1iII1II11I = ''
     if 54 - 54: I1Ii111 + O0 + Ii1I * ooOoO0o - I11i % OOooOOo
    try :
     OOooO0o0 = iIiiii ( 'rating' ) [ 0 ] . string
     if OOooO0o0 == None :
      raise
    except :
     OOooO0o0 = ''
     if 13 - 13: o00O0oo / IiII * i1iIi11iIIi1I . i1iIi11iIIi1I * o00O0oo
    try :
     iiIII1i = iIiiii ( 'userrating' ) [ 0 ] . string
     if iiIII1i == None :
      raise
    except :
     iiIII1i = ''
     if 63 - 63: ooOoO0o / O0 * I11i11Ii + i11i / I1Ii111 + iII111i
    try :
     I1I = iIiiii ( 'votes' ) [ 0 ] . string
     if I1I == None :
      raise
    except :
     I1I = ''
     if 63 - 63: i1iIi11iIIi1I + ii1IiI1i . ooOoO0o % ooOoO0o
    try :
     ooooO0oOoOOoO = iIiiii ( 'aired' ) [ 0 ] . string
     if ooooO0oOoOOoO == None :
      raise
    except :
     ooooO0oOoOOoO = ''
     if 57 - 57: i11i
    try :
     if OOo == '' :
      I1IiiiiI ( oOOO00o000o . encode ( 'utf-8' , 'ignore' ) , url . encode ( 'utf-8' ) , 2 , o00oO , I1Ii1111iIi , OOoo , I1i11i , iIIiiiI , credits , oo0 , IiI111ii1ii , O0OOo , IiIII1 , O0Oo000 , iiI11i1II , OO0O0OOo0O , I1o0OooOOOOOO , OOooO0o0 , iiIII1i , I1I , ooooO0oOoOOoO , True )
     else :
      if 54 - 54: I11i11Ii + OOooOOo + i11iIiiIii
      I1IiiiiI ( oOOO00o000o . encode ( 'utf-8' ) , OOo . encode ( 'utf-8' ) , 1 , o00oO , I1Ii1111iIi , OOoo , I1i11i , iIIiiiI , None , oo0 , IiI111ii1ii , O0OOo , IiIII1 , O0Oo000 , iiI11i1II , OO0O0OOo0O , I1o0OooOOOOOO , OOooO0o0 , iiIII1i , I1I , ooooO0oOoOOoO , 'source' )
    except :
     I1iI1iIi111i ( 'There was a problem adding directory from getData(): ' + oOOO00o000o . encode ( 'utf-8' , 'ignore' ) )
  else :
   I1iI1iIi111i ( 'No Channels: getItems' )
   i1i1ii111 ( ii ( 'item' ) , fanart )
 else :
  IiI1i ( ii )
  if 87 - 87: o00O0oo
 if O0iII1 == "thumbnail" :
  IIIii ( )
  if 83 - 83: I1Ii111 % i1 % oOooOoO0Oo0O . iIii1I11I1II1 - I1Ii111
  if 88 - 88: OoooooooOO
  if 84 - 84: o0 / Ii1I * IiII / OOooOOo - i11iIiiIii . I11i11Ii
def IiI1i ( data ) :
 oOOo000oOoO0 = data . rstrip ( )
 OoOo00o0OO = re . compile ( r'#EXTINF:(.+?),(.*?)[\n\r]+([^\r\n]+)' ) . findall ( oOOo000oOoO0 )
 ii1IIIIiI11 = len ( OoOo00o0OO )
 print 'tsdownloader' , iI1
 if 40 - 40: i1
 for OOOooo , Oo00oo0000OO , O0oOOo0Oo in OoOo00o0OO :
  if 7'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))